{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@vue/shared/dist/shared.esm-bundler.js","webpack:///./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","webpack:///./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js","webpack:///./node_modules/tree2d/src/index.ts","webpack:///./node_modules/tree2d/src/renderer/webgl/shaders/WebGLDefaultShader.ts","webpack:///./node_modules/tree2d/src/tree/Texture.ts","webpack:///./node_modules/tree2d/src/tree/Utils.ts","webpack:///./node_modules/vugel/src/runtime/nodes/Container.ts","webpack:///./node_modules/vugel/src/runtime/nodes/Node.ts","webpack:///./node_modules/vugel/src/runtime/nodes/textures/index.ts","webpack:///./node_modules/tree2d/src/tree/ColorUtils.ts","webpack:///./node_modules/tree2d/src/patch/Patcher.ts","webpack:///./node_modules/vugel/src/runtime/nodes/effects/index.ts","webpack:///./node_modules/tree2d/src/tree/Shader.ts","webpack:///./node_modules/tree2d/src/renderer/c2d/shaders/C2dDefaultShader.ts","webpack:///./node_modules/tree2d/src/tree/Element.ts","webpack:///./node_modules/vugel/src/runtime/nodes/textures/DynamicSizeTexture.ts","webpack:///./node_modules/vugel/src/runtime/index.ts","webpack:///./node_modules/tree2d/src/renderer/c2d/C2dShader.ts","webpack:///./node_modules/tree2d/src/renderer/webgl/WebGLShader.ts","webpack:///./node_modules/tree2d/src/tree/TextureSource.ts","webpack:///./node_modules/tree2d/src/tree/ElementListeners.ts","webpack:///./node_modules/tree2d/src/patch/handlers/Handler.ts","webpack:///./node_modules/tree2d/src/tree/core/CoreRenderState.ts","webpack:///./node_modules/vugel/src/runtime/nodes/Base.ts","webpack:///./node_modules/vugel/src/events/index.ts","webpack:///./node_modules/vugel/src/events/mouseEvents.ts","webpack:///./node_modules/vugel/src/events/utils.ts","webpack:///./node_modules/vugel/src/events/touchEvents.ts","webpack:///./node_modules/vugel/src/events/focusEvents.ts","webpack:///./node_modules/vugel/src/events/keyboardEvents.ts","webpack:///./node_modules/vugel/src/runtime/nodes/textures/TextTextureSettings.ts","webpack:///./node_modules/vugel/src/compiler/compile.ts","webpack:///./node_modules/tree2d/src/renderer/c2d/shaders/C2dGrayscaleShader.ts","webpack:///./node_modules/tree2d/src/renderer/webgl/shaders/WebGLGrayscaleShader.ts","webpack:///./node_modules/tree2d/src/textures/NoiseTexture.ts","webpack:///./node_modules/tree2d/src/textures/RectangleTexture.ts","webpack:///./node_modules/tree2d/src/textures/text/index.ts","webpack:///./node_modules/tree2d/src/textures/text/TextTextureRenderer.ts","webpack:///./node_modules/flexbox.js/src/FlexContainer.ts","webpack:///./node_modules/flexbox.js/src/layout/spacing.ts","webpack:///./node_modules/flexbox.js/src/FlexItem.ts","webpack:///./node_modules/flexbox.js/src/FlexNode.ts","webpack:///./node_modules/tree2d/src/tree/ElementChildList.ts","webpack:///./node_modules/tree2d/src/tree/ObjectList.ts","webpack:///./node_modules/tree2d/src/patch/handlers/SingleReferenceHandler.ts","webpack:///./node_modules/tree2d/src/tree/core/CoreQuadList.ts","webpack:///./node_modules/tree2d/src/tree/core/CoreQuadOperation.ts","webpack:///./node_modules/tree2d/src/tree/core/CoreRenderExecutor.ts","webpack:///./node_modules/tree2d/src/renderer/Renderer.ts","webpack:///./node_modules/tree2d/src/tree/TextureManager.ts","webpack:///./node_modules/vugel/src/runtime/utils/Delegator.ts","webpack:///./node_modules/vugel/src/runtime/nodes/Paragraph.ts","webpack:///./node_modules/vugel/src/index.ts","webpack:///./node_modules/vugel/src/compiler/compileVugel.ts","webpack:///./node_modules/@vue/compiler-core/dist/compiler-core.esm-bundler.js","webpack:///./node_modules/vugel/src/compiler/parserOptionsMinimal.ts","webpack:///./node_modules/vugel/src/compiler/makeMap.ts","webpack:///./node_modules/vugel/src/runtime/nodeOps.ts","webpack:///./node_modules/vugel/src/runtime/nodes/types.ts","webpack:///./node_modules/vugel/src/runtime/nodes/textures/Drawing.ts","webpack:///./node_modules/tree2d/src/renderer/c2d/index.ts","webpack:///./node_modules/tree2d/src/renderer/webgl/WebGLShaderProgram.ts","webpack:///./node_modules/tree2d/src/renderer/c2d/shaders/C2dBlurShader.ts","webpack:///./node_modules/tree2d/src/renderer/webgl/index.ts","webpack:///./node_modules/tree2d/src/renderer/webgl/shaders/WebGLBoxBlurShader.ts","webpack:///./node_modules/tree2d/src/renderer/webgl/shaders/WebGLDitheringShader.ts","webpack:///./node_modules/tree2d/src/renderer/webgl/shaders/WebGLCircularPushShader.ts","webpack:///./node_modules/tree2d/src/renderer/webgl/shaders/WebGLInversionShader.ts","webpack:///./node_modules/tree2d/src/renderer/webgl/shaders/WebGLLinearBlurShader.ts","webpack:///./node_modules/tree2d/src/renderer/webgl/shaders/WebGLOutlineShader.ts","webpack:///./node_modules/tree2d/src/renderer/webgl/shaders/WebGLPixelateShader.ts","webpack:///./node_modules/tree2d/src/renderer/webgl/shaders/WebGLRadialFilterShader.ts","webpack:///./node_modules/tree2d/src/renderer/webgl/shaders/WebGLRoundedRectangleShader.ts","webpack:///./node_modules/tree2d/src/renderer/webgl/shaders/WebGLRadialGradientShader.ts","webpack:///./node_modules/tree2d/src/renderer/webgl/shaders/WebGLLight3dShader.ts","webpack:///./node_modules/tree2d/src/textures/index.ts","webpack:///./node_modules/tree2d/src/textures/DrawingTexture.ts","webpack:///./node_modules/tree2d/src/textures/HtmlTexture.ts","webpack:///./node_modules/tree2d/src/textures/ImageTexture.ts","webpack:///./node_modules/tree2d/src/textures/RoundRectTexture.ts","webpack:///./node_modules/tree2d/src/textures/SourceTexture.ts","webpack:///./node_modules/tree2d/src/textures/SvgTexture.ts","webpack:///./node_modules/tree2d/src/textures/text/TextTexture.ts","webpack:///./node_modules/tree2d/src/tree/index.ts","webpack:///./node_modules/tree2d/src/tree/core/ElementCore.ts","webpack:///./node_modules/tree2d/src/tree/core/ElementTexturizer.ts","webpack:///./node_modules/tree2d/src/tree/core/ElementCoreContext.ts","webpack:///./node_modules/flexbox.js/src/index.ts","webpack:///./node_modules/flexbox.js/src/layout/FlexLayouter.ts","webpack:///./node_modules/flexbox.js/src/layout/ContentAligner.ts","webpack:///./node_modules/flexbox.js/src/layout/LineLayouter.ts","webpack:///./node_modules/flexbox.js/src/layout/line/LineLayout.ts","webpack:///./node_modules/flexbox.js/src/layout/line/SizeShrinker.ts","webpack:///./node_modules/flexbox.js/src/layout/line/SizeGrower.ts","webpack:///./node_modules/flexbox.js/src/layout/line/ItemPositioner.ts","webpack:///./node_modules/flexbox.js/src/layout/line/ItemAligner.ts","webpack:///./node_modules/flexbox.js/src/layout/ItemCoordinatesUpdater.ts","webpack:///./node_modules/flexbox.js/src/FlexTarget.ts","webpack:///./node_modules/tree2d/src/tree/Stage.ts","webpack:///./node_modules/tree2d/src/patch/handlers/handlers.ts","webpack:///./node_modules/tree2d/src/patch/handlers/TextHandler.ts","webpack:///./node_modules/tree2d/src/patch/handlers/ChildrenHandler.ts","webpack:///./node_modules/tree2d/src/patch/handlers/ChildList.ts","webpack:///./node_modules/tree2d/src/patch/handlers/ShaderHandler.ts","webpack:///./node_modules/tree2d/src/renderer/webgl/WebGLRenderer.ts","webpack:///./node_modules/tree2d/src/renderer/webgl/WebGLCoreQuadList.ts","webpack:///./node_modules/tree2d/src/renderer/webgl/WebGLCoreQuadOperation.ts","webpack:///./node_modules/tree2d/src/renderer/webgl/WebGLCoreRenderExecutor.ts","webpack:///./node_modules/tree2d/src/renderer/webgl/WebGLCoreRenderState.ts","webpack:///./node_modules/tree2d/src/renderer/c2d/C2dRenderer.ts","webpack:///./node_modules/tree2d/src/renderer/c2d/C2dCoreQuadList.ts","webpack:///./node_modules/tree2d/src/renderer/c2d/C2dCoreQuadOperation.ts","webpack:///./node_modules/tree2d/src/renderer/c2d/C2dCoreRenderExecutor.ts","webpack:///./node_modules/tree2d/src/renderer/c2d/C2dTextureTintManager.ts","webpack:///./node_modules/tree2d/src/renderer/c2d/C2dTintCache.ts","webpack:///./node_modules/tree2d/src/renderer/c2d/C2dCoreRenderState.ts","webpack:///./node_modules/tree2d/src/tree/core/CoreContext.ts","webpack:///./node_modules/tree2d/src/platforms/browser/WebPlatform.ts","webpack:///./node_modules/tree2d/src/platforms/browser/imageWorker/ImageWorker.ts","webpack:///./node_modules/tree2d/src/platforms/browser/imageWorker/createWorker.ts","webpack:///./node_modules/tree2d/src/platforms/browser/imageWorker/ImageWorkerImage.ts","webpack:///./node_modules/tree2d/src/patch/index.ts","webpack:///./node_modules/vugel/src/events/types.ts","webpack:///./node_modules/vugel/src/runtime/nodes/textures/Picture.ts","webpack:///./node_modules/vugel/src/runtime/nodes/textures/Rectangle.ts","webpack:///./node_modules/vugel/src/runtime/nodes/textures/StyledRectangle.ts","webpack:///./node_modules/vugel/src/runtime/nodes/textures/Svg.ts","webpack:///./node_modules/vugel/src/runtime/nodes/textures/TextTexture.ts","webpack:///./node_modules/vugel/src/runtime/nodes/textures/Texture.ts","webpack:///./node_modules/vugel/src/runtime/nodes/effects/Grayscale.ts","webpack:///./node_modules/vugel/src/runtime/nodes/effects/Rounded.ts","webpack:///./node_modules/vugel/src/runtime/nodes/effects/BoxBlur.ts","webpack:///./node_modules/vugel/src/runtime/nodes/effects/Shader.ts","webpack:///./node_modules/vugel/src/runtime/nodes/Comment.ts","webpack:///./node_modules/vugel/src/runtime/nodes/TextNode.ts","webpack:///./node_modules/vugel/src/runtime/patchProp.ts","webpack:///./node_modules/vugel/src/runtime/modules/props.ts","webpack:///./node_modules/vugel/src/runtime/nodes/index.ts","webpack:///./node_modules/vugel/src/wrapper.ts","webpack:///./node_modules/vugel/src/runtime/nodes/Root.ts","webpack:///./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js","webpack:///./src/App.vue","webpack:///./src/Examples.vue","webpack:///./src/examples/TextExample.vue","webpack:///./src/examples/TextExample.vue?1c9e","webpack:///./src/examples/TextExample.vue?15ac","webpack:///./src/examples/form/DragBar.vue","webpack:///./src/examples/form/DragBar.vue?cdd0","webpack:///./src/examples/form/DragBar.vue?0258","webpack:///./src/examples/form/Editor.vue","webpack:///./src/examples/form/Editor.vue?f54d","webpack:///./src/examples/form/Editor.vue?1920","webpack:///./src/examples/form/FormItem.vue","webpack:///./src/examples/form/FormItem.vue?9202","webpack:///./src/examples/form/FormItem.vue?e62f","webpack:///./src/examples/form/utils.ts","webpack:///./src/examples/PositionExample.vue?01ce","webpack:///./src/examples/PositionExample.vue?55df","webpack:///./src/examples/PositionExample.vue","webpack:///./src/examples/TransformsExample.vue?fdd3","webpack:///./src/examples/TransformsExample.vue?a87e","webpack:///./src/examples/TransformsExample.vue","webpack:///./src/examples/ClippingExample.vue","webpack:///./src/examples/form/Toggle.vue","webpack:///./src/examples/form/Toggle.vue?38b2","webpack:///./src/examples/form/Toggle.vue?ec40","webpack:///./src/examples/ClippingExample.vue?ea3a","webpack:///./src/examples/ClippingExample.vue?b18b","webpack:///./src/examples/VisibilityExample.vue?dc70","webpack:///./src/examples/VisibilityExample.vue?603a","webpack:///./src/examples/VisibilityExample.vue","webpack:///./src/examples/CenterExample.vue","webpack:///./src/examples/CenterExample.vue?9597","webpack:///./src/examples/CenterExample.vue?10ae","webpack:///./src/examples/PictureExample.vue","webpack:///./src/examples/PictureExample.vue?2276","webpack:///./src/examples/PictureExample.vue?43d3","webpack:///./src/examples/RectangleExample.vue","webpack:///./src/examples/RectangleExample.vue?cc88","webpack:///./src/examples/RectangleExample.vue?a6bc","webpack:///./src/examples/StyledRectangleExample.vue","webpack:///./src/examples/form/ColorDragBar.vue","webpack:///./src/examples/form/ColorDragBar.vue?9e5c","webpack:///./src/examples/form/ColorDragBar.vue?e79b","webpack:///./src/examples/StyledRectangleExample.vue?0533","webpack:///./src/examples/StyledRectangleExample.vue?3987","webpack:///./src/examples/TintingExample.vue?7260","webpack:///./src/examples/TintingExample.vue?468e","webpack:///./src/examples/TintingExample.vue","webpack:///./src/examples/ParagraphExample.vue","webpack:///./src/examples/ParagraphExample.vue?0a8e","webpack:///./src/examples/ParagraphExample.vue?a999","webpack:///./src/examples/DrawingExample.vue?dda0","webpack:///./src/examples/DrawingExample.vue?3aab","webpack:///./src/examples/DrawingExample.vue","webpack:///./src/Examples.vue?7301","webpack:///./src/Examples.vue?9035","webpack:///./src/App.vue?3e2e","webpack:///./src/App.vue?0db1","webpack:///./src/main.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","makeMap","str","expectsLowerCase","map","list","split","length","val","toLowerCase","PatchFlagNames","isGloballyWhitelisted","generateCodeFrame","source","start","end","lines","count","res","j","line","push","repeat","String","lineLength","pad","Math","max","min","join","specialBooleanAttrs","isSpecialBooleanAttr","normalizeStyle","isArray","normalized","isObject","normalizeClass","isString","trim","isHTMLTag","isSVGTag","looseEqual","a","b","isObjectA","isObjectB","isArrayA","isArrayB","every","e","Date","getTime","keysA","keys","keysB","looseIndexOf","arr","findIndex","item","EMPTY_OBJ","EMPTY_ARR","NOOP","NO","onRE","isOn","test","extend","remove","el","indexOf","splice","hasOwn","Array","isFunction","isSymbol","isPromise","then","catch","objectToString","toString","toTypeString","toRawType","slice","isReservedProp","cacheStringFunction","fn","cache","camelizeRE","camelize","replace","_","toUpperCase","hyphenateRE","hyphenate","capitalize","charAt","hasChanged","oldValue","toDisplayString","isPlainObject","JSON","stringify","invokeArrayFns","fns","arg","def","obj","targetMap","WeakMap","effectStack","activeEffect","ITERATE_KEY","MAP_KEY_ITERATE_KEY","effect","options","_isEffect","isEffect","raw","args","active","scheduler","undefined","includes","cleanup","trackStack","shouldTrack","pop","resetTracking","id","uid","deps","createReactiveEffect","lazy","stop","onStop","delete","pauseTracking","last","track","target","type","depsMap","set","Map","dep","Set","has","add","trigger","newValue","oldTarget","effects","computedRunners","effectsToAdd","forEach","computed","isAddOrDelete","run","builtInSymbols","getOwnPropertyNames","filter","createGetter","shallowGet","readonlyGet","shallowReadonlyGet","arrayInstrumentations","isReadonly","shallow","receiver","targetIsArray","Reflect","isRef","readonly","reactive","toRaw","this","createSetter","shallowSet","hadKey","result","ownKeys","mutableHandlers","deleteProperty","readonlyHandlers","shallowReactiveHandlers","shallowReadonlyHandlers","toReactive","toReadonly","getProto","v","getPrototypeOf","get$1","wrap","rawKey","has$1","size","createForEach","callback","thisArg","observed","createIterableMethod","method","isMap","isPair","iterator","isKeyOnly","innerIterator","apply","done","next","createReadonlyMethod","mutableInstrumentations","proto","del","clear","hadItems","readonlyInstrumentations","createInstrumentationGetter","instrumentations","mutableCollectionHandlers","readonlyCollectionHandlers","rawToReactive","reactiveToRaw","rawToReadonly","readonlyToRaw","rawValues","WeakSet","collectionTypes","isObservableType","createReactiveObject","shallowReactive","shallowReadonly","toProxy","baseHandlers","collectionHandlers","_isVue","_isVNode","isFrozen","handlers","constructor","Proxy","isReactive","isProxy","markRaw","convert","_isRef","ref","createRef","shallowRef","newVal","unref","customRef","factory","toRefs","ret","toRef","getterOrOptions","setter","dirty","runner","stack","warn","msg","instance","component","appWarnHandler","appContext","config","warnHandler","trace","currentVNode","normalizedStack","vnode","recurseCount","parentInstance","parent","getComponentTrace","callWithErrorHandling","proxy","formatComponentName","warnArgs","logs","entry","postfix","isRoot","open","close","props","formatProps","formatTraceEntry","formatTrace","console","formatProp","err","handleError","callWithAsyncErrorHandling","values","cur","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","errorHandler","contextVNode","logError","queue","postFlushCbs","Promise","resolve","isFlushing","isFlushPending","nextTick","queueJob","job","queueFlush","queuePostFlushCb","cb","flushJobs","flushPostFlushCbs","seen","cbs","getId","Infinity","sort","shift","currentRenderingInstance","setCurrentRenderingInstance","renderComponentRoot","Component","withProxy","slots","attrs","emit","renderCache","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","render","getFallthroughAttrs","root","inheritAttrs","cloneVNode","dynamicChildren","patchFlag","parentScopeId","__scopeId","dirs","transition","createVNode","Comment","hasPropsChanged","prevProps","nextProps","nextKeys","updateHOCHostEl","subTree","Suspense","__isSuspense","n1","n2","container","anchor","parentComponent","parentSuspense","isSVG","optimized","rendererInternals","patch","createElement","hiddenContainer","suspense","createSuspenseBoundary","fallbackTree","mountSuspense","content","fallback","normalizeSuspenseChildren","oldSubTree","oldFallbackTree","isResolved","patchSuspense","hydrate","node","hydrateNode","parentNode","document","isHydrating","move","um","unmount","getCurrentTree","isUnmounted","hasUnresolvedAncestor","onResolve","onRecede","setupRenderEffect","recede","hydratedEl","asyncDep","asyncSetupResult","asyncResolved","handleSetupResult","doRemove","children","default","queueEffectWithSuspense","withCtx","ctx","owner","arguments","currentScopeId","scopeIdStack","pushScopeId","popScopeId","withScopeId","isTeleportDisabled","disabled","resolveTarget","select","targetSelector","to","moveTeleport","parentAnchor","insert","moveType","targetAnchor","isReorder","Teleport","__isTeleport","internals","mc","mountChildren","pc","patchChildren","pbc","patchBlockChildren","querySelector","createText","createComment","placeholder","mainAnchor","mount","wasDisabled","currentContainer","currentAnchor","nextTarget","hostRemove","nextSibling","hydrateChildren","targetNode","_lpa","firstChild","Fragment","Text","Static","blockStack","currentBlock","openBlock","disableTracking","vnodeArgsTransformer","setBlockTracking","createBlock","dynamicProps","isVNode","isSameVNodeType","transformVNodeArgs","transformer","_createVNode","__vccOpts","class","klass","style","isSuspense","isTeleport","scopeId","normalizeChildren","_ctx","createTextVNode","extraProps","mergeProps","text","flag","createStaticVNode","createCommentVNode","asBlock","child","cloneIfMounted","handlersRE","toMerge","existing","incoming","concat","event","handler","startsWith","isEmitListener","emits","_n","normalizeEmitsOptions","setFullProps","rawProps","0","1","needCastKeys","normalizePropsOptions","camelKey","rawCurrentProps","resolvePropValue","opt","hasDefault","defaultValue","normalizedKey","validatePropName","prop","booleanIndex","getTypeIndex","Boolean","stringIndex","normalizedEntry","getType","ctor","match","isSameType","expectedTypes","len","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","normalizeObjectSlots","rawSlots","normalizeVNodeSlots","withDirectives","directives","bindings","dir","modifiers","mounted","updated","invokeDirectiveHook","prevVNode","oldBindings","binding","hook","createAppContext","isNativeTag","devtools","performance","globalProperties","optionMergeStrategies","isCustomElement","mixins","components","provides","createAppAPI","rootComponent","rootProps","context","installedPlugins","isMounted","app","_component","_props","_container","_context","use","plugin","install","mixin","directive","rootContainer","isHydrate","provide","hasMismatch","isSVGContainer","namespaceURI","tagName","isComment","nodeType","createHydrationFunctions","mt","mountComponent","patchProp","isFragmentStart","data","onMismatch","handleMismtach","domType","hydrateFragment","hydrateElement","hydrateComponent","loadAsync","__asyncLoader","locateClosingAsyncAnchor","onClick","vnodeHooks","onVnodeBeforeMount","invokeVNodeHook","onVnodeMounted","innerHTML","textContent","isFragment","error","prodEffectOptions","queuePostRenderEffect","createRenderer","baseCreateRenderer","createHydrationRenderer","createHydrationFns","hostInsert","hostPatchProp","hostCreateElement","hostCreateText","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","hostParentNode","hostNextSibling","setScopeId","hostSetScopeId","cloneNode","hostCloneNode","insertStaticContent","hostInsertStaticContent","getNextHostNode","processText","processCommentNode","mountStaticNode","processFragment","processElement","processComponent","process","refValue","setRef","mountElement","patchElement","vnodeHook","is","treeOwnerId","persisted","beforeEnter","enter","oldProps","newProps","onVnodeBeforeUpdate","patchProps","propsToUpdate","prev","unmountChildren","areChildrenSVG","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","activate","updateComponent","initialVNode","emptyAppContext","update","accessCache","refs","setupState","setupContext","isDeactivated","bc","bm","bu","u","bum","da","rtg","rtc","createComponentInstance","isKeepAlive","renderer","isSSR","isInSSRComponentSetup","isStateful","initProps","initSlots","setupResult","PublicInstanceProxyHandlers","setup","createSetupContext","currentInstance","resolvedResult","finishComponentSetup","setupStatefulComponent","setupComponent","registerDep","nextVNode","prevChildren","nextChildren","$stable","shouldUpdateComponent","updateComponentPreRender","invalidateJob","nextTree","prevTree","rawPrevProps","rawOptions","kebabKey","camelizedKey","updateProps","needDeletionCheck","deletionComparisonTarget","updateSlots","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","newLength","commonLength","nextChild","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","arrI","getSequence","nextIndex","leave","delayLeave","afterLeave","performLeave","shouldInvokeDirs","onVnodeBeforeUnmount","deactivate","unmountComponent","onVnodeUnmounted","removeFragment","performRemove","rawRef","oldRawRef","oldRef","_vnode","createApp","useTransitionState","state","isLeaving","isUnmounting","leavingVNodes","onMounted","onBeforeUnmount","BaseTransition","appear","onBeforeEnter","Function","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","getCurrentInstance","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","oldChild","oldInnerChild","prevHooks","leavingHooks","setTransitionHooks","delayedLeave","earlyRemove","getLeavingNodesForType","_leaveCb","leavingVNodesCache","callHook","hooks","leavingVNode","called","afterEnter","_enterCb","cancelled","__isKeepAlive","KeepAlive","include","RegExp","exclude","Number","current","sharedContext","_unmount","storageContainer","pruneCache","getName","pruneCacheEntry","cached","watch","matches","comp","cachedVNode","parseInt","from","displayName","pattern","some","onActivated","registerKeepAliveHook","onDeactivated","wrappedHook","__wdc","injectHook","injectToKeepAliveRoot","keepAliveRoot","onUnmounted","prepend","__weh","setCurrentInstance","unshift","createHook","lifecycle","onBeforeMount","onBeforeUpdate","onUpdated","onRenderTriggered","onRenderTracked","onErrorCaptured","invoke","watchEffect","doWatch","INITIAL_WATCHER_VALUE","immediate","deep","flush","onTrack","onTrigger","onInvalidate","baseGetter","traverse","applyCb","recordInstanceBoundEffect","instanceWatch","publicThis","parentProvides","inject","applyOptions","asMixin","extends","extendsOptions","propsOptions","dataOptions","computedOptions","methods","watchOptions","provideOptions","injectOptions","beforeMount","beforeUpdate","activated","deactivated","beforeUnmount","unmounted","renderTracked","renderTriggered","errorCaptured","globalMixins","callSyncHook","applyMixins","configurable","methodHandler","createWatcher","callHookFromMixins","baseHook","selfHook","mergeOptions","strats","strat","publicPropertiesMap","$","$el","$data","$props","$attrs","$slots","$refs","$parent","$root","$emit","$options","__merged","$forceUpdate","$nextTick","$watch","publicGetter","cssModule","__cssModules","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","compile","registerRuntimeCompiler","_compile","template","_rc","classifyRE","__file","defineComponent","defineAsyncComponent","loader","loadingComponent","errorComponent","delay","timeout","suspensible","onError","userOnError","resolvedComp","pendingRequest","retries","load","thisRequest","Error","reject","createInnerComp","loaded","delayed","setTimeout","h","propsOrChildren","useCSSModule","mod","ssrContextKey","useSSRContext","resolveComponent","resolveAsset","resolveDynamicComponent","resolveDirective","warnMissing","camelized","capitalized","registry","self","selfName","renderList","renderItem","toHandlers","renderSlot","slot","createSlots","dynamicSlots","version","ssrUtils","WebGLDefaultShader","WebGLShader","gl","vertexAttribPointer","_attrib","FLOAT","enableVertexAttribArray","UNSIGNED_BYTE","disableVertexAttribArray","operation","_setUniform","_getProjection","uniform2fv","renderExecutor","indexType","quadIndexType","indexTypeBytes","WebGLRenderingContext","UNSIGNED_INT","glTexture","getTexture","pos","tx","bindTexture","TEXTURE_2D","drawElements","TRIANGLES","index","vertexShaderSource","fragmentShaderSource","Texture","stage","manager","textureManager","elements","_activeCount","_source","_x","_y","_w","_h","_pixelRatio","mw","mh","clipping","_mustUpdate","hasUpdateTexture","_performUpdateSource","removeUpdateTexture","addTexture","incActiveCount","removeTexture","decActiveCount","_checkForNewerReusableTextureSource","becomesUsed","becomesUnused","incActiveTextureCount","element","onTextureSourceLoaded","isLoaded","reusable","_getReusableTextureSource","_replaceTextureSource","decActiveTextureCount","_getIsValid","isUsed","_updateSource","addUpdateTexture","force","_getTextureSource","lookupId","_getLookupId","getTextureSource","_getSourceLoader","getReusableTextureSource","newSource","oldSource","setDisplayedTexture","loadError","onTextureSourceLoadError","free","x","y","w","_updateClipping","displayedTexture","onDisplayedTextureClippingChanged","onPixelRatioChanged","nonDefaults","pixelRatio","_updatePixelRatio","isAutosizeTexture","sourceW","getRenderWidth","sourceH","getRenderHeight","getLookupIdFromSettings","Utils","isObjectLiteral","parts","entries","getDeepClone","clone","k","obj1","obj2","getModuloIndex","ceil","v1","v2","equalObjectLiterals","equalArrays","keys1","keys2","k1","k2","equalValues","iteratorResult","charcode","Container","Node","containerElement","super","appendChild","childList","removeChild","insertBefore","baseAnchor","getBaseAnchor","getIndex","getLocationString","addAt","lastIndexOf","forceZIndexContext","ensureBoolean","clipbox","renderToTexture","renderToTextureLazy","renderToTextureOffscreen","renderToTextureColorize","flex","flexDirection","flexWrap","flexAlignItems","flexJustifyContent","flexAlignContent","padding","ensureFloat","paddingLeft","paddingRight","paddingTop","paddingBottom","Base","base","Element","pointerEvents","getParentCapturePointerEvents","getParentNode","capturePointerEvents","eventHelpers","focusManager","setFocus","vueEventType","eventTranslators","eventHandler","_nodeEvents","currentTarget","ancestorBubble","currentNode","newEvent","cancelBubble","convertRelValue","scaleX","scaleY","scale","pivotX","pivotY","pivot","mountX","mountY","rotation","alpha","visible","textureElement","colorUl","ensureColor","colorUr","colorTop","colorBottom","colorLeft","colorRight","color","texture","zIndex","boundsMargin","boundsMarginLeft","boundsMarginTop","boundsMarginRight","boundsMarginBottom","flexItem","flexGrow","flexShrink","flexAlignSelf","margin","marginLeft","marginRight","marginTop","marginBottom","minWidth","minHeight","maxWidth","maxHeight","skipInLayout","onSetup","onAttach","onDetach","onEnabled","onDisabled","onActive","onInactive","onTextureError","onTextureLoaded","onTextureUnloaded","onResize","onUpdate","onAfterCalcs","onAfterUpdate","nodeEvents","onAuxclick","onContextmenu","onDblclick","onMousedown","onMouseenter","onMouseleave","onMousemove","onMouseout","onMouseover","onMouseup","onTouchcancel","onTouchend","onTouchmove","onTouchstart","onFocusin","onFocusout","onFocus","onBlur","onKeypress","onKeydown","onKeyup","ensureInt","parseFloat","parseFloatStrict","NaN","argName","floatValue","isNaN","convertToRelFunction","body","g","toFixed","floor","argb","rgba","round","r1","g1","b1","a1","settings","defaultType","cargs","patchObject","names","patchObjectProperty","getHandler","handle","patchSimpleObjectProperty","find","_elements","elementCore","setHasRenderUpdates","C2dDefaultShader","C2dShader","_rectangleTexture","rectangleTexture","nativeTexture","_tintManager","tintManager","getElementCore","rc","getRenderContext","white","getWhite","stc","getSimpleTc","getPixelRatio","setTransform","ta","tc","tb","td","px","py","rect","info","fillStyle","_setColorGradient","globalAlpha","_beforeDrawEl","fillRect","getLayoutW","getLayoutH","_afterDrawEl","sourceX","ulx","sourceY","uly","brx","bry","colorBl","colorBr","ColorUtils","mergeMultiColorsEqual","rgb","tintTexture","getTintTexture","drawImage","core","transparency","gradient","createLinearGradient","addColorStop","getRgbaString","getRgbString","_ref","_attached","_enabled","_active","_parent","_texture","_displayedTexture","_childList","listeners","_core","ElementCore","ElementListeners","_children","clearRef","setupAsRoot","_updateAttachedFlag","_updateEnabledFlag","_throwError","_isEnabled","isWithinBoundsMargin","newAttached","_isAttached","_onSetup","getItems","_onAttach","_onDetach","newEnabled","_onEnabled","_setEnabledFlag","_onDisabled","_unsetEnabledFlag","_updateTextureDimensions","updateTextureCoords","addElement","_setActiveFlag","shader","_unsetActiveFlag","removeElement","_enableTexture","_onActive","_disableTexture","_hasTexturizer","texturizer","_onInactive","getListeners","getLayoutX","getLayoutY","_onTextureError","_enableTextureError","prevTexture","prevSource","displayedTextureSource","sourceChanged","getSource","setDisplayedTextureSource","_onTextureLoaded","_onTextureUnloaded","unknownSize","setTextureDimensions","tx1","ty1","tx2","ty2","hasClipping","iw","ih","rw","rh","pw","ph","setTextureCoords","getCornerPoints","getByRef","getSettings","getPrettyString","indent","colorKeys","childStr","isEmpty","substr","getNonDefaults","childArray","missing","tnd","enabled","colorize","colorizeResultTexture","renderOffscreen","ElementChildList","_allowChildrenAccess","items","setItems","f","_setHasUpdates","hasTexturizer","message","layout","_flex","direction","alignItems","justifyContent","alignContent","_flexItem","grow","shrink","alignSelf","DynamicSizeTexture","wrapper","background","handleResize","handleTextureLoaded","renderInfo","getRenderInfo","offsetX","offsetY","nodeOps","Shader","_initialized","program","getShaderProgram","getConstructor","WebGLShaderProgram","setShaderProgram","_program","glProgram","initialize","getUniformLocation","getAttribLocation","glFunction","setUniformValue","_init","useProgram","beforeUsage","enableAttribs","afterUsage","disableAttribs","other","extraAttribsDataByteOffset","getExtraAttribBytesPerVertex","getProjection","TextureSource","textures","_activeTextureCount","loadingSince","_nativeTexture","permanent","_isResultTexture","_loadError","getStage","getElements","cancel","isLoading","_cancelCb","isResultTexture","cancelCb","isDestroyed","processLoadedSource","setSource","width","height","_isNativeTexture","uploadTextureSource","onLoad","updateFrame","frameCounter","forEachActiveElement","forceRenderUpdate","newNativeTexture","prevNativeTexture","forEachEnabledElement","freeTextureSource","WebGLTexture","sourceType","Patcher","CoreRenderState","quadOperations","defaultShader","getDefaultShader","quadList","createCoreQuadList","renderTextureInfo","shaderOwner","specifiedShader","usedShader","checkForChanges","pendingQuadOperation","temporaryTexturizers","isCachingTexturizer","useTexturizerCache","scissor","reset","useDefault","area","_hasChanges","_finishQuadOperation","_createQuadOperation","getResultTexture","empty","reusableTexture","reusableRenderStateOffset","addQuad","_isRenderTextureReusable","offset","isRenderTextureReusable","q","scissorsEqual","addEmpty","releaseRenderTexture","createCoreQuadOperation","finishRenderState","setupEvents","canvasElement","setupMouseEvents","setupTouchEvents","setupFocusEvents","setupKeyboardEvents","dispatchMouseEvent","eventState","translatedEvent","currentElement","canvasOffsetX","canvasOffsetY","getCurrentContext","elementOffsetX","elementOffsetY","originalEvent","translateEvent","dispatchVugelMouseEvent","preventDefault","prevNode","activeNode","dispatchBubbledEvent","commonAncestor","getCommonAncestor","mouseEventTranslator","auxclick","click","contextmenu","dblclick","mousedown","mouseenter","mouseleave","mousemove","mouseout","mouseover","mouseup","addEventListener","getCanvasOffset","getCanvas","getBoundingClientRect","pageX","left","window","scrollX","pageY","top","scrollY","getAncestors","path","reverse","canvasX","canvasY","getElementsAtCoordinates","node1","node2","pathNode1","pathNode2","dispatchTouchEvent","currentTouch","eventType","changedTouches","touches","correspondingMouseEvent","translatedMouseEvent","touchEventTranslator","touchcancel","touchend","touchmove","touchstart","FocusEvents","focusedNode","updatingFocusPath","ensureCanvasFocusable","onCanvasClick","onCanvasBlur","hasAttribute","setAttribute","focused","updateFocusPath","newFocusedNode","prevFocusedNode","createFocusEvent","dispatchEvent","relatedTarget","focusEventTranslator","focusin","focusout","focus","blur","dispatchKeyboardEvent","getFocusedNode","dispatchVugelKeyboardEvent","keyboardEventTranslator","keypress","keydown","keyup","onChange","textSettings","fontSize","fontStyle","fontWeight","fontFace","cutSx","cutSy","cutEx","cutEy","parserOptions","parserOptionsMinimal","baseCompile","nodeTransforms","directiveTransforms","baseParse","C2dGrayscaleShader","_amount","WebGLGrayscaleShader","redraw","setupUniforms","uniform1f","NoiseTexture","noise","Uint8Array","random","texParams","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","RectangleTexture","canvas","getContext","font","_getFontSetting","_getFontFaces","defaultFontFace","fontFaceName","documentFonts","fonts","fontSetting","check","loadPromise","_load","_draw","setFontProperties","sizeInfo","measureText","translate","textBaseline","fillText","horizontal","FlexLayouter","_wrap","_alignItems","_justifyContent","_alignContent","_paddingLeft","_paddingTop","_paddingRight","_paddingBottom","setFlexEnabled","changedContents","changedDimensions","forceLayout","getSpacing","numberOfItems","remainingSpace","itemGaps","spacePerGap","spacingBefore","spacingBetween","FlexItem","_grow","_shrink","SHRINK_AUTO","_minWidth","_minHeight","_maxWidth","_maxHeight","_marginLeft","_marginTop","_marginRight","_marginBottom","prevFlexParent","flexParent","updateEnabledFlag","changedChildren","newFlexParent","_changed","getDefaultShrink","isFlexEnabled","_alignSelf","resetHorizontalAxisLayoutSize","resetVerticalAxisLayoutSize","getRelAxisSize","setAxisLayoutSize","getMinSizeSetting","getMaxSizeSetting","getAxisMinSize","getAxisLayoutSize","getAxisLayoutPos","setAxisLayoutPos","resizeAxis","getTotalPadding","getTotalMargin","getMainAxisMinSize","getMainAxisPadding","getMainAxisMargin","getCrossAxisMinSize","getCrossAxisPadding","getCrossAxisMargin","getMainAxisLayoutSize","getCrossAxisLayoutSize","isZeroAxisSize","sourceFuncH","sourceFuncW","FlexNode","subject","_recalc","_skip","flexLayout","layoutTree","_ensureFlex","FlexContainer","enableFlex","disableFlex","enableChildrenAsFlexItems","disableChildrenAsFlexItems","setSkipped","unsetSkipped","disableFlexItem","getParent","enableFlexItem","isFlexItemEnabled","ensureFlexItem","results","getChildren","gatherChildren","hasLayout","getLayout","skip","setContainer","isEnabled","disable","restoreSubjectToNonFlex","setLayoutCoords","getSourceX","getSourceY","setLayoutDimensions","getSourceW","getSourceH","activeParent","getActiveLayoutSubject","fromNode","getActiveLayoutNode","toNode","_items","getFlexItems","isDisplayed","clearFlexItemsCache","sourceFuncX","getParentAxisSizeWithPadding","sourceFuncY","changeWidth","changeHeight","updateRecalc","changeExternalWidth","changeExternalHeight","isAxisFitToContents","recalc","newRecalcFlags","getNewRecalcFlags","updateRecalcBottomUp","triggerLayout","flags","childRecalc","newRecalc","_getRecalcFromChangedChildRecalc","mainAxisRecalcFlag","crossAxisRecalcFlag","isWrapping","isCrossAxisFitToContents","isWidthDynamic","isHeightDynamic","hasShrunk","getSourceFuncX","getSourceFuncY","getSourceFuncW","getSourceFuncH","parentSubject","getPaddingOffset","allowRelAxisSizeFunction","getMarginOffset","minSize","getPlainAxisMinSize","flexItemMinSize","getAxisMinLineSize","resizeMainAxis","resizeCrossAxis","gc","ObjectList","connectParent","addChildAt","_setParent","removeChildAt","removed","added","order","syncChildren","prevItem","setChildAt","fromIndex","toIndex","moveChild","prevParent","prevChildList","removeSilently","_refs","itemInList","onAdd","currentIndex","setAt","existingItem","onMove","onSet","removeAt","onRemove","onSync","newItems","prevItems","removedSet","setToArray","SingleReferenceHandler","Handler","getCArgs","createObject","quadTextures","quadElementCores","renderState","getElement","renderWidth","renderHeight","getTextureWidth","getTextureHeight","_bindRenderTexture","_setScissor","_clearRenderTexture","_reset","quadOps","_processQuadOperation","quadOperation","ignore","_setupQuadOperation","_execQuadOperation","op","renderTexture","_renderTexture","cleared","_renderQuadOperation","_defaultShader","aggressive","_createDefaultShader","shaderType","_getShaderBaseType","isValidShaderType","convertedShaderType","_getShaderAlternative","_usedMemory","_uploadedTextureSources","textureSourceHashmap","_nativeFreeTextureSource","textureSource","_addMemoryUsage","_nativeUploadTextureSource","addToLookupMap","delta","addMemoryUsage","freeUnusedTextureSources","_cleanupLookupMap","remainingTextureSources","ts","allowCleanup","_freeManagedTextureSource","setNotLoaded","managed","clearNativeTexture","delegate","descriptors","getOwnPropertyDescriptors","delegateProperty","descriptor","objProperty","proxyDescriptor","Paragraph","TextTextureSettings","_text","_lineHeight","_fontColor","lineHeight","letterSpacing","fontColor","words","newlinePattern","els","word","TextTexture","setSettings","Delegator","compileVugel","Vugel","parse","compileCache","code","hoistStatic","codeFrame","loc","runtimeVugel","defaultOnError","createCompilerError","messages","additionalMessage","SyntaxError","FRAGMENT","TELEPORT","SUSPENSE","KEEP_ALIVE","BASE_TRANSITION","OPEN_BLOCK","CREATE_BLOCK","CREATE_VNODE","CREATE_COMMENT","CREATE_TEXT","CREATE_STATIC","RESOLVE_COMPONENT","RESOLVE_DYNAMIC_COMPONENT","RESOLVE_DIRECTIVE","WITH_DIRECTIVES","RENDER_LIST","RENDER_SLOT","CREATE_SLOTS","TO_DISPLAY_STRING","MERGE_PROPS","TO_HANDLERS","CAMELIZE","SET_BLOCK_TRACKING","PUSH_SCOPE_ID","POP_SCOPE_ID","WITH_SCOPE_ID","WITH_CTX","helperNameMap","registerRuntimeHelpers","helpers","getOwnPropertySymbols","locStub","column","createRoot","hoists","imports","temps","codegenNode","createVNodeCall","tag","isBlock","isForBlock","helper","createArrayExpression","createObjectExpression","properties","createObjectProperty","createSimpleExpression","isStatic","isConstant","createInterpolation","createCompoundExpression","createCallExpression","callee","createFunctionExpression","params","returns","newline","isSlot","createConditionalExpression","consequent","alternate","createCacheExpression","createBlockStatement","createTemplateLiteral","createIfStatement","createAssignmentExpression","right","createSequenceExpression","expressions","createReturnStatement","isBuiltInType","expected","isCoreComponent","_parse","_walk","loadDep","_deps","parseJS","assert","walkJS","ast","walker","walk","nonIdentifierRE","isSimpleIdentifier","memberExpRE","isMemberExpression","getInnerRange","newLoc","advancePositionWithClone","numberOfCharacters","advancePositionWithMutation","linesCount","lastNewLinePos","charCodeAt","condition","findDir","allowEmpty","exp","findProp","dynamicOnly","isBindKey","hasDynamicKeyVBind","isText","isVSlot","isTemplateNode","tagType","isSlotOutlet","injectProp","propsWithInjection","first","alreadyExists","propKeyName","toValidAssetId","hasScopeRef","ids","branches","decodeRE","decodeMap","gt","lt","amp","apos","quot","defaultParserOptions","delimiters","getNamespace","getTextMode","isVoidTag","isPreTag","decodeEntities","rawText","p1","originalSource","inPre","inVPre","createParserContext","getCursor","parseChildren","getSelection","ancestors","nodes","isEnd","parseInterpolation","emitError","parseComment","parseBogusComment","parseCDATA","advanceBy","parseTag","parseElement","parseText","pushNode","removedWhitespace","exec","prevIndex","nestedIndex","contentStart","closeIndex","wasInPre","wasInVPre","isPreBoundary","isVPreBoundary","isSelfClosing","startsWithEndTagOpen","isSpecialTemplateDirective","advanceSpaces","cursor","currentSource","parseAttributes","hasVIs","isBuiltInComponent","attributeNames","attr","parseAttribute","nameSet","quote","isQuoted","endIndex","parseTextData","unexpectedChars","parseAttributeValue","startOffset","getNewPosition","endsWith","valueLoc","innerStart","innerEnd","rawContentLength","rawContent","preTrimContent","endTokens","xs","searchString","resultCache","doNotHoistNode","isStaticNode","hoisted","transformHoist","hoist","getPatchFlag","hasDynamicKeyOrRef","hasCachedProps","getNodeProps","branchChildren","isSingleElementRoot","createTransformContext","prefixIdentifiers","cacheHandlers","expressionPlugins","ssr","identifiers","scopes","vFor","vSlot","vPre","vOnce","childIndex","helperString","removalIndex","onNodeRemoved","transform","traverseNode","createRootCodegen","exitFns","onExit","nodeRemoved","traverseChildren","createStructuralDirectiveTransform","generate","sourceMap","filename","optimizeBindings","runtimeGlobalName","runtimeModuleName","indentLevel","withoutNewLine","createCodegenContext","deindent","hasHelpers","useWithBlock","VueBinding","aliasHelper","staticHelpers","genNode","genHoists","genFunctionPreamble","genAssets","toJSON","assets","resolver","genNodeListAsArray","multilines","genNodeList","comma","genText","genExpression","genInterpolation","genCompoundExpression","genNullableArgs","genVNodeCall","genCallExpression","genExpressionAsPropertyKey","genObjectExpression","genArrayExpression","genFunctionExpression","needNewline","needsParens","isNested","genConditionalExpression","genCacheExpression","isLiteralWhitelisted","transformExpression","processExpression","asParams","asRawStatements","rawExp","bailConstant","plugins","knownIds","isDuplicate","needPrefix","identifier","isStaticPropertyKey","shouldPrefix","isPropertyShorthand","prefix","scopeIds","expression","leadingText","isStaticProperty","transformIf","processIf","ifNode","branch","createCodegenNodeForBranch","parentCondition","processCodegen","createIfBranch","replaceNode","siblings","sibling","removeNode","createChildrenCodegenNode","keyProperty","vnodeCall","transformFor","processFor","forNode","renderExp","keyProp","fragmentFlag","childBlock","isTemplate","needFragmentWrapper","slotOutlet","createForLoopParams","parseResult","parseForExpression","addIdentifiers","removeIdentifiers","valueAlias","keyAlias","objectIndexAlias","forAliasRE","forIteratorRE","stripParensRE","input","inMatch","LHS","RHS","createAliasExpression","valueContent","trimmedOffset","iteratorMatch","keyContent","keyOffset","indexContent","range","defaultFallback","trackSlotScopes","trackVForSlotScopes","buildClientSlotFn","buildSlots","buildSlotFn","slotsProperties","buildDefaultSlotProperty","hasDynamicSlots","onComponentSlot","hasTemplateSlots","hasNamedDefaultSlot","implicitDefaultChildren","seenSlotNames","slotElement","slotDir","slotChildren","slotLoc","slotName","slotProps","dirLoc","staticSlotName","slotFunction","vIf","vElse","buildDynamicSlot","conditional","directiveImportMap","transformElement","isComponent","vnodeTag","resolveComponentType","vnodeProps","vnodeChildren","vnodePatchFlag","vnodeDynamicProps","dynamicPropNames","vnodeDirectives","shouldUseBlock","propsBuildResult","buildProps","dirArgs","runtime","trueExpression","modifier","buildDirectiveArgs","hasDynamicTextChild","propsNamesString","stringifyDynamicPropNames","isProp","builtIn","elementLoc","mergeArgs","runtimeDirectives","hasRef","hasClassBinding","hasStyleBinding","hasHydrationEventBinding","hasDynamicKeys","analyzePatchFlag","isBind","dedupeProperties","directiveTransform","needRuntime","propsExpression","knownProps","deduped","mergeAsArray","transformSlotOutlet","processSlotOutlet","slotArgs","propsWithoutName","fnExpRE","transformOn","augmentor","eventName","rawName","isCacheable","isMemberExp","isInlineStatement","hasMultipleStatements","transformBind","transformText","hasText","callArgs","transformOnce","transformModel","createTransformProps","expString","propName","modifiersKey","getBaseTransformPreset","on","model","isModuleMode","noopDirectiveTransform","isTree2dTag","types","TextNode","selector","picture","Picture","rectangle","Rectangle","StyledRectangle","drawing","Drawing","svg","Svg","grayscale","Grayscale","rounded","Rounded","BoxBlur","paragraph","drawingTexture","DrawingTexture","drawingFunction","canvasWidth","canvasHeight","C2dBlurShader","_uniformLocations","_attributeLocations","_currentUniformValues","createProgram","glVertShader","_glCompile","VERTEX_SHADER","glFragShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","VALIDATE_STATUS","getError","getProgramInfoLog","deleteProgram","deleteShader","src","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","log","getShaderInfoLog","idx","location","_valueEquals","clonedValue","_valueClone","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","_kernelRadius","WebGLBoxBlurShader","WebGLDitheringShader","WebGLCircularPushShader","WebGLInversionShader","WebGLLinearBlurShader","WebGLOutlineShader","WebGLPixelateShader","WebGLRadialFilterShader","WebGLRoundedRectangleShader","WebGLRadialGradientShader","WebGLLight3dShader","dx","dy","Float32Array","_noiseTexture","_graining","_random","floats","getElementWidth","getElementHeight","getVertexAttribPointerOffset","activeTexture","TEXTURE1","TEXTURE0","uniform1i","_inputValue","_maxDerivative","_normalizedValue","_offset","_aspectRatio","_offsetX","_offsetY","_valuesTexture","_values","_buckets","buckets","_getValues","full","_shiftBuckets","targetIndex","createTexture","texParameteri","LINEAR","CLAMP_TO_EDGE","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","texImage2D","ALPHA","deleteTexture","_direction","_width","_col","_color","col","getRgbaComponentsNormalized","uniform4fv","ddw","dw","ddh","dh","_size","_radius","_cutoff","_radiusX","_radiusY","_rawColor","radiusX","radiusY","getNormalRenderTextureCoords","renderContext","_strength","_ambient","_fudge","_rx","_ry","_z","_pivotX","_pivotY","_pivotZ","_lightY","_lightZ","vr","coords","getRenderTextureCoords","rz","atan2","uniform3fv","lightY","lightZ","_drawingFunction","_canvasWidth","_canvasHeight","platform","getDrawingCanvas","imageSmoothingEnabled","handleResult","textureSourceOptions","HtmlTexture","_htmlElement","_scale","firstElementChild","htmlElement","html","html2canvas","getPreloadArea","backgroundColor","_preloadArea","attachShadow","opacity","position","display","overflow","ImageTexture","_src","_hasAlpha","hasAlpha","loadSrcTexture","RoundRectTexture","_options","drawOnCanvas","radius","strokeWidth","shadowBlur","shadowOffsetX","shadowOffsetY","strokeColor","fill","fillColor","shadowColor","abs","beginPath","moveTo","lineTo","arcTo","closePath","convertToCanvasColor","strokeStyle","lineWidth","stroke","isNumber","SourceTexture","_textureSource","SvgTexture","img","Image","onload","onerror","cloneArgs","TextTextureRenderer","draw","respond","assign","getTextureOptionsForDrawingCanvas","Stage","TextureManager","_onUpdate","updatedFlags","_worldContext","ElementCoreContext","_hasUpdates","_localAlpha","_onAfterCalcs","_onAfterUpdate","_localPx","_localPy","_localTa","_localTb","_localTc","_localTd","_isComplex","_dimsUnknown","_clipping","_zSort","_outOfBounds","_displayedTextureSource","_zContextUsage","_hasRenderUpdates","_zIndexedChildren","_renderContext","_scissor","_shaderOwner","_updateTreeOrder","_colorUl","_colorUr","_colorBl","_colorBr","_sx","_sy","_sw","_sh","_tw","_th","_relFuncFlags","_funcX","_funcY","_funcW","_funcH","_scaleX","_scaleY","_mountX","_mountY","_rotation","_alpha","_visible","_isRoot","_zIndex","_forceZIndexContext","_zParent","_zIndexResort","_shader","_renderToTextureEnabled","_texturizer","_useRenderToTexture","_withinBoundsMargin","_viewport","_clipbox","_renderSimple","_layout","_stashedTexCoords","_stashedColors","_element","funcX","_disableFuncX","updateLocalTranslateDelta","hasFlexLayout","_triggerRecalcTranslate","funcY","_disableFuncY","funcW","_disableFuncW","_updateBaseDimensions","funcH","_disableFuncH","_updateLocalTransform","_updateLocalTranslate","updateLocalAlpha","updateVisible","PI","_sr","sin","_cr","cos","_setLocalTransform","updateLocalTranslate","pivotXMul","pivotYMul","_addLocalTranslate","_setLocalAlpha","level","prevIsZContext","isZContext","setParent","setFlag","setZParent","findZContext","prevZContext","enableZContext","disableZContext","enableZSort","newShaderOwner","_setShaderOwnerRecursive","forceZSort","isEstimate","updatedSourceW","updatedSourceH","onDimensionsChanged","updateResultTexture","_onResize","coordsWidth","coordsHeight","_recBoundsMargin","newZParent","decZContextUsage","hadZContextUsage","incZContextUsage","_getZIndexedDescs","isAncestorOf","_getZIndexedDescsRec","sortZIndexedChildren","prevShader","_enableRenderToTexture","_disableRenderToTexture","_setShaderOwnerChildrenRecursive","_renderAdvanced","_boundsMargin","relativeDimsFlexRoot","isFlexLayoutRoot","hasRelativeDimensionFunctions","layoutFlexTree","_applyRelativeDimFuncs","pr","_hasRenderContext","init","updateTreeOrder","useRenderToTexture","mustRenderToTexture","release","bboxW","bboxH","sx","sy","ex","ey","rComplex","nx","ny","isSquare","lx","ly","_disableWithinBoundsMargin","withinMargin","savedRecalc","_enableWithinBoundsMargin","isIdentity","IDENTITY","updateOutOfBounds","layoutParent","getLayoutParent","changedDims","setShader","activeShader","setScissor","addElementCore","hasRenderUpdates","prevRenderTextureInfo","mustRenderChildren","hasRenderTexture","hasResultTexture","setRenderTextureInfo","finishedRenderTexture","reuseTextureAsRenderTexture","renderTextureReused","getRenderTexture","resultTexture","setTexturizer","_stashTexCoords","_stashColors","_unstashColors","_unstashTexCoords","ptr","amount","mergeResult","ElementTexturizer","relX","relY","_ensureLayout","isLayoutRoot","worldX","worldY","wc","tcTa","iy","localOffsetX","localOffsetY","getCoordinatesOrigin","renderRoot","rx","ry","convertWorldCoordsToLocal","withinBounds","isCoordsWithinElement","isWorldCoordinatesInScissor","useClipping","mustRecurse","gatherElementsAtCoordinates","_colorize","_reusedTexture","_resultTextureSource","_renderOffscreen","updateRenderToTextureEnabled","checkWithinBounds","hasEnabledElements","replaceNativeTexture","hasRenderTextureUpdates","allocateRenderTexture","FlexTarget","lineLayouter","LineLayouter","resizingMainAxis","resizingCrossAxis","cachedInitialWidth","cachedInitialHeight","cachedLayoutWidth","cachedLayoutHeight","shrunk","totalCrossAxisSize","isSubTree","shouldSkipSubTree","updateSubTreeLayout","updateItemCoords","updateTreeLayout","isChanged","performUpdateLayoutTree","performUpdateLayoutTreeFromCache","setCachedInitialSizes","initializeAxisSizes","layoutAxes","setLayoutCache","isInitialSizeCacheValid","useLayoutCache","enableLocalRecalcFlag","initialWidth","initialHeight","ItemCoordinatesUpdater","finalize","crossAxisSize","layoutMainAxis","performResizeCrossAxis","resetLayoutSize","mainAxisSize","getMainAxisBasis","getCrossAxisBasis","layoutCrossAxis","layoutLines","fitMainAxisSizeToContents","getLines","isMainAxisFitToContents","getMainAxisContentSize","aligner","ContentAligner","getTotalCrossAxisSize","fitCrossAxisSizeToContents","align","hasFixedMainAxisBasis","hasFixedCrossAxisBasis","performResizeMainAxis","checkValidCacheMainAxisResize","subjectMainAxisSize","getContainer","calcTotalCrossAxisSize","growSize","currentPos","crossAxisLayoutOffset","createItemAligner","finalCrossAxisLayoutSize","crossAxisLayoutSize","setCrossAxisLayoutSize","setCrossAxisLayoutOffset","getRecursiveResizeOccured","setItemPositions","total","mainAxisContentSize","curMainAxisPos","maxMainAxisPos","startIndex","layoutFlexItem","itemMainAxisSize","getMainAxisLayoutSizeWithPaddingAndMargin","layoutLine","addToMainAxisPos","mainAxisMinSize","crossAxisMinSize","availableSpace","getAvailableMainAxisLayoutSpace","LineLayout","performLayout","isResizingMainAxis","itemCrossAxisMinSize","getCrossAxisMinSizeWithPaddingAndMargin","calcMainAxisMinSize","calcCrossAxisMinSize","crossAxisMaxLayoutSize","_setItemSizes","_calcLayoutInfo","_growItemSizes","_shrinkItemSizes","grower","SizeGrower","getGrownSize","shrinker","SizeShrinker","getShrunkSize","ItemPositioner","ItemAligner","_calcCrossAxisMaxLayoutSize","getMainAxisMinSizeWithPaddingAndMargin","noSpecifiedCrossAxisSize","isResizingCrossAxis","_getCrossAxisMaxLayoutSize","crossAxisMaxSize","getCrossAxisLayoutSizeWithPaddingAndMargin","amountRemaining","shrunkSize","totalShrinkAmount","getTotalShrinkAmount","amountPerShrink","shrinkAmount","maxShrink","finalSize","grownSize","totalGrowAmount","getTotalGrowAmount","amountPerGrow","growAmount","maxSize","getMainAxisMaxSizeSetting","maxGrow","setMainAxisLayoutPos","_line","recursiveResizeOccured","alignItemsSetting","_flexContainer","_alignItem","preventStretch","hasRelCrossAxisSize","resetCrossAxisLayoutSize","_alignItemFlexStart","_alignItemFlexEnd","_alignItemFlexCenter","_alignItemStretch","setCrossAxisLayoutPos","itemCrossAxisSize","center","mainAxisLayoutSizeBeforeResize","crossAxisMinSizeSetting","getCrossAxisMinSizeSetting","crossAxisMaxSizeSetting","getCrossAxisMaxSizeSetting","hasFixedCrossAxisSize","forceStretch","isReverse","flexContainer","horizontalPaddingOffset","getHorizontalPaddingOffset","verticalPaddingOffset","getVerticalPaddingOffset","parentFlex","getParentFlexContainer","finalizeItemAndChildren","validateItemCache","finalizeRoot","finalizeItems","flexNode","getHorizontalPadding","getVerticalPadding","clearRecalcFlag","setLayout","validCache","finalizeItem","finalizeItemChildren","reverseMainAxisLayoutPos","getHorizontalMarginOffset","getVerticalMarginOffset","endPos","getMainAxisLayoutPos","reversedPos","_optFlags","hasUpdates","triggerRecalcTranslate","ensureLayout","setHasUpdates","applyRelativeFunctions","onChangedLayout","disableFuncW","disableFuncH","sw","sh","flexToJson","flexItemToJson","toJson","destroyed","_lastGcFrame","WebPlatform","startTime","currentTime","dt","_updateTextures","_updatingFrame","clearColor","gpuPixelsMemory","bufferMemory","fixedTimestep","useImageWorker","autostart","getDefaultPixelRatio","canvas2d","isWebglSupported","c2d","createCanvasContext","_renderer","C2dRenderer","createWebGLContext","WebGLRenderer","CoreContext","setAsRoot","processClearColorOption","checkCanvasDimensions","startLoop","option","setClearColor","stopLoop","destroy","getHrTime","onFrameStart","changes","nextFrame","onFrameEnd","setRenderUpdatesFlag","memoryUsageBefore","gcTextureMemory","gcRenderTextureMemory","usedMemory","freeUnusedRenderTextures","changed","newCanvasWidth","newCanvasHeight","updateCanvasSize","onResizeCanvasSize","devicePixelRatio","ShaderHandler","TextHandler","ChildrenHandler","enableTextTexture","ChildList","_setByObject","_setByArray","getRefs","crefs","cref","isItem","createItem","array","same","_equalsArray","getSupportedShaderType","Renderer","shaderPrograms","shaderProgram","getWebGL","WebGLCoreQuadList","WebGLCoreQuadOperation","WebGLCoreRenderExecutor","WebGLCoreRenderState","RGBA","format","internalFormat","framebuffer","createFramebuffer","projection","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","deleteFramebuffer","premultiplyAlpha","texOptions","RGB","uploadGlTexture","cloneObjShallow","copyTexSubImage2D","ow","oh","updateProjectionVector","CoreQuadList","dataLength","ArrayBuffer","uints","Uint32Array","CoreQuadOperation","getAttribsDataByteOffset","CoreRenderExecutor","currentShaderProgram","UNSIGNED_SHORT","attribsBuffer","createBuffer","quadsBuffer","getProjectionVector","maxQuads","byteLength","indexUintExtension","getExtension","allIndices","Uint16Array","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","STATIC_DRAW","deleteBuffer","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","enable","BLEND","DEPTH_TEST","_stopShaderProgram","_setupBuffers","DataView","getDataLength","ARRAY_BUFFER","DYNAMIC_DRAW","_useShaderProgram","getWebGLShader","beforeDraw","afterDraw","hasSameProgram","stopProgram","rt","viewport","COLOR_BUFFER_BIT","glClearColor","getClearColor","SCISSOR_TEST","extra","setExtraAttribsInBuffer","setDataLength","mca","mergeColorAlpha","cx","cy","C2dTextureTintManager","setupCanvasAsRenderTexture","getC2d","C2dCoreQuadList","C2dCoreQuadOperation","C2dCoreRenderExecutor","C2dCoreRenderState","Uint8ClampedArray","imageData","ImageData","putImageData","save","renderContexts","modes","_mainRenderTexture","getC2dShader","_getContext","getRgbaStringFromArray","globalCompositeOperation","clearRect","restore","_restoreContext","clip","_cachedNativeTextures","_hasCache","_getCache","prevMemUsage","memoryUsage","frame","lf","_tintTexture","before","reuseTexture","after","tintCache","C2dTintCache","releaseBlancoTextures","_colors","_blancoTextures","_lastCleanupFrame","_memTextures","setRenderContext","setWhite","isWhite","setSimpleTc","hasSimpleTexCoords","createCoreRenderState","createCoreRenderExecutor","_renderTexturePool","_renderTextureId","_zSorts","_freeRenderTexture","getRootParent","clearHasRenderUpdates","_render","_clearRenderUpdatesFlag","_update","_performForcedZSorts","zSort","_fillRenderState","_performRender","finish","execute","prec","_createRenderTexture","maxAge","limit","createRenderTexture","_id","freeRenderTexture","copyRenderTexture","_looping","_awaitingLoop","_imageWorker","createImageBitmap","Worker","colorSpaceConversion","imageOrientation","ImageWorker","loop","lp","drawFrame","requestAnimationFrame","buffer","isPng","image","imageInfo","imageBitmap","hasAlphaChannel","crossOrigin","removeAttribute","opts","antialias","premultipliedAlpha","stencil","preserveDrawingBuffer","now","_worker","createWorker","postMessage","href","onmessage","terminate","ImageWorkerImage","createWorkerServer","ImageWorkerServer","relativeBase","_receiveMessage","isPathAbsolute","ImageWorkerServerItem","onFinish","xhr","mimeType","canceled","XMLHttpRequest","responseType","oEvent","blob","response","send","abort","Blob","blobURL","URL","webkitURL","createObjectURL","_onError","_onLoad","tex","roundRectTexture","setOption","updateRoundedRectangleTextureOptions","updateDimensions","svgTexture","updateTextureOptions","prevValue","nextValue","patchElProp","elRef","vugelRenderer","stageRoot","rendered","createRendererForStage","Root","defaultSlot","svgNS","doc","tempContainer","tempSVGContainer","createElementNS","createTextNode","nodeValue","temp","importantRE","setStyle","setProperty","prefixed","prefixCache","prefixes","autoPrefix","xlinkNS","_getNow","createEvent","timeStamp","cachedNow","getNow","removeEventListener","createInvoker","initialValue","invoker","lastUpdated","originalStop","stopImmediatePropagation","_stopped","patchStopImmediatePropagation","nativeOnRE","getModelAssigner","vModelSelect","setSelected","_assign","selectedVal","selected","getValue","multiple","_binding","isMultiple","optionValue","selectedIndex","_value","TransitionPropsValidators","resolveTransitionProps","css","duration","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","baseProps","durations","toNumber$1","normalizeDuration","enterDuration","leaveDuration","finishEnter","removeTransitionClass","finishLeave","callHookWithErrorHandling","addTransitionClass","whenTransitionEnds","cls","classList","_vtc","expectedType","propCount","getTransitionInfo","endEvent","ended","onEnd","styles","getComputedStyle","getStyleProperties","transitionDelays","TRANSITION","transitionDurations","transitionTimeout","getTimeout","animationDelays","ANIMATION","animationDurations","animationTimeout","hasTransform","delays","toMs","trigger$1","positionMap","newPositionMap","TransitionGroupImpl","moveClass","hasMove","hasCSSTransform","callPendingCbs","recordPosition","movedChildren","applyTranslation","offsetHeight","webkitTransform","transitionDuration","_moveCb","propertyName","cssTransitionProps","oldPos","newPos","rendererOptions","transitionClasses","className","patchClass","cssText","patchStyle","prevOptions","nextOptions","capture","passive","once","patchEvent","patchDOMProp","_trueValue","_falseValue","removeAttributeNS","setAttributeNS","isBoolean","patchAttr","ensureRenderer","normalizeContainer","font-size","font-weight","font-style","font-face","margin-bottom","flex-grow","min-width","stroke-width","stroke-color","fill-color","suffix","digits","foreground","bar","dragTarget","startEvent","localCoords","updateValue","convertedValue","convertValue","formattedValue","convertToAmount","containerScale","flex-item","z-index","pointer-events","flex-align-items","min-height","flex-direction","description","margin-top","createChangeHandlers","refNames","refName","passToRef","DragBar","Editor","FormItem","mount-x","mountx","mount-y","mounty","form-items","set_x","set_y","set_w","set_h","set_mountx","set_mounty","scale-x","scalex","scale-y","scaley","pivot-x","pivotx","pivot-y","pivoty","initial-value","set_scalex","set_scaley","set_pivotx","set_pivoty","set_rotation","circleX","Toggle","startX","startY","deltaX","deltaY","set_clipping","set_visible","set_alpha","color-left","color-right","red","green","blue","getArgbNumber","redBackground","greenBackground","blueBackground","alphaBackground","alphaForeground","updateRed","updateGreen","updateBlue","updateAlpha","ColorDragBar","shadow-blur","shadow-color","set_fill","set_fillColor","set_radius","set_strokeWidth","set_strokeColor","set_shadowBlur","set_shadowColor","set_colorLeft","set_colorRight","font-color","Path2D","set_gradient","PictureExample","RectangleExample","TextExample","StyledRectangleExample","DrawingExample","PositionExample","CenterExample","TransformsExample","VisibilityExample","TintingExample","ClippingExample","ParagraphExample","exampleName","Examples","examples","example","exampleObject","containerOrSelector"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 142);\n","// Make a map and return a function for checking if a key\r\n// is in that map.\r\n//\r\n// IMPORTANT: all calls of this function must be prefixed with /*#__PURE__*/\r\n// So that rollup can tree-shake them if necessary.\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n// Patch flags are optimization hints generated by the compiler.\r\n// when a block with dynamicChildren is encountered during diff, the algorithm\r\n// enters \"optimized mode\". In this mode, we know that the vdom is produced by\r\n// a render function generated by the compiler, so the algorithm only needs to\r\n// handle updates explicitly marked by these patch flags.\r\n// dev only flag -> name mapping\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    const lines = source.split(/\\r?\\n/);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count += lines[i].length + 1;\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(3 - String(line).length)}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - lineLength) + 1;\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + 1;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\nconst mockError = () => mockWarn(true);\r\nfunction mockWarn(asError = false) {\r\n    expect.extend({\r\n        toHaveBeenWarned(received) {\r\n            asserted.add(received);\r\n            const passed = warn.mock.calls.some(args => args[0].indexOf(received) > -1);\r\n            if (passed) {\r\n                return {\r\n                    pass: true,\r\n                    message: () => `expected \"${received}\" not to have been warned.`\r\n                };\r\n            }\r\n            else {\r\n                const msgs = warn.mock.calls.map(args => args[0]).join('\\n - ');\r\n                return {\r\n                    pass: false,\r\n                    message: () => `expected \"${received}\" to have been warned.\\n\\nActual messages:\\n\\n - ${msgs}`\r\n                };\r\n            }\r\n        },\r\n        toHaveBeenWarnedLast(received) {\r\n            asserted.add(received);\r\n            const passed = warn.mock.calls[warn.mock.calls.length - 1][0].indexOf(received) > -1;\r\n            if (passed) {\r\n                return {\r\n                    pass: true,\r\n                    message: () => `expected \"${received}\" not to have been warned last.`\r\n                };\r\n            }\r\n            else {\r\n                const msgs = warn.mock.calls.map(args => args[0]).join('\\n - ');\r\n                return {\r\n                    pass: false,\r\n                    message: () => `expected \"${received}\" to have been warned last.\\n\\nActual messages:\\n\\n - ${msgs}`\r\n                };\r\n            }\r\n        },\r\n        toHaveBeenWarnedTimes(received, n) {\r\n            asserted.add(received);\r\n            let found = 0;\r\n            warn.mock.calls.forEach(args => {\r\n                if (args[0].indexOf(received) > -1) {\r\n                    found++;\r\n                }\r\n            });\r\n            if (found === n) {\r\n                return {\r\n                    pass: true,\r\n                    message: () => `expected \"${received}\" to have been warned ${n} times.`\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    pass: false,\r\n                    message: () => `expected \"${received}\" to have been warned ${n} times but got ${found}.`\r\n                };\r\n            }\r\n        }\r\n    });\r\n    let warn;\r\n    const asserted = new Set();\r\n    beforeEach(() => {\r\n        asserted.clear();\r\n        warn = jest.spyOn(console, asError ? 'error' : 'warn');\r\n        warn.mockImplementation(() => { });\r\n    });\r\n    afterEach(() => {\r\n        const assertedArray = Array.from(asserted);\r\n        const nonAssertedWarnings = warn.mock.calls\r\n            .map(args => args[0])\r\n            .filter(received => {\r\n            return !assertedArray.some(assertedMsg => {\r\n                return received.indexOf(assertedMsg) > -1;\r\n            });\r\n        });\r\n        warn.mockRestore();\r\n        if (nonAssertedWarnings.length) {\r\n            nonAssertedWarnings.forEach(warning => {\r\n                console.warn(warning);\r\n            });\r\n            throw new Error(`test case threw unexpected warnings.`);\r\n        }\r\n    });\r\n}\n\n// On the client we only need to offer special cases for boolean attributes that\r\n// have different names from their corresponding dom properties:\r\n// - itemscope -> N/A\r\n// - allowfullscreen -> allowFullscreen\r\n// - formnovalidate -> formNoValidate\r\n// - ismap -> isMap\r\n// - nomodule -> noModule\r\n// - novalidate -> noValidate\r\n// - readonly -> readOnly\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n// The full list is needed during SSR to produce the correct initial markup.\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n// CSS properties that accept plain numbers\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const normalized = normalizeStyle(value[i]);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            res += normalizeClass(value[i]) + ' ';\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,menuitem,' +\r\n    'summary,content,element,shadow,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.substring(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\r\n}\n\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    const isObjectA = isObject(a);\r\n    const isObjectB = isObject(b);\r\n    if (isObjectA && isObjectB) {\r\n        try {\r\n            const isArrayA = isArray(a);\r\n            const isArrayB = isArray(b);\r\n            if (isArrayA && isArrayB) {\r\n                return (a.length === b.length &&\r\n                    a.every((e, i) => looseEqual(e, b[i])));\r\n            }\r\n            else if (a instanceof Date && b instanceof Date) {\r\n                return a.getTime() === b.getTime();\r\n            }\r\n            else if (!isArrayA && !isArrayB) {\r\n                const keysA = Object.keys(a);\r\n                const keysB = Object.keys(b);\r\n                return (keysA.length === keysB.length &&\r\n                    keysA.every(key => looseEqual(a[key], b[key])));\r\n            }\r\n            else {\r\n                /* istanbul ignore next */\r\n                return false;\r\n            }\r\n        }\r\n        catch (e) {\r\n            /* istanbul ignore next */\r\n            return false;\r\n        }\r\n    }\r\n    else if (!isObjectA && !isObjectB) {\r\n        return String(a) === String(b);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst extend = (a, b) => {\r\n    for (const key in b) {\r\n        a[key] = b[key];\r\n    }\r\n    return a;\r\n};\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isReservedProp = /*#__PURE__*/ makeMap('key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\nconst hyphenate = cacheStringFunction((str) => {\r\n    return str.replace(hyphenateRE, '-$1').toLowerCase();\r\n});\r\nconst capitalize = cacheStringFunction((str) => {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n});\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\r\n// for converting {{ interpolation }} values to displayed strings.\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isArray(val) || (isPlainObject(val) && val.toString === objectToString)\r\n            ? JSON.stringify(val, null, 2)\r\n            : String(val);\r\n};\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, { value });\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, camelize, capitalize, def, escapeHtml, extend, generateCodeFrame, hasChanged, hasOwn, hyphenate, invokeArrayFns, isArray, isBooleanAttr, isFunction, isGloballyWhitelisted, isHTMLTag, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, makeMap, mockError, mockWarn, normalizeClass, normalizeStyle, objectToString, propsToAttrMap, remove, stringifyStyle, toDisplayString, toRawType, toTypeString };\n","import { EMPTY_OBJ, isArray, isSymbol, hasOwn, isObject, hasChanged, capitalize, toRawType, makeMap, isFunction, NOOP } from '@vue/shared';\n\nconst targetMap = new WeakMap();\r\nconst effectStack = [];\r\nlet activeEffect;\r\nconst ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'iterate' : '');\r\nconst MAP_KEY_ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'Map key iterate' : '');\r\nfunction isEffect(fn) {\r\n    return fn && fn._isEffect === true;\r\n}\r\nfunction effect(fn, options = EMPTY_OBJ) {\r\n    if (isEffect(fn)) {\r\n        fn = fn.raw;\r\n    }\r\n    const effect = createReactiveEffect(fn, options);\r\n    if (!options.lazy) {\r\n        effect();\r\n    }\r\n    return effect;\r\n}\r\nfunction stop(effect) {\r\n    if (effect.active) {\r\n        cleanup(effect);\r\n        if (effect.options.onStop) {\r\n            effect.options.onStop();\r\n        }\r\n        effect.active = false;\r\n    }\r\n}\r\nlet uid = 0;\r\nfunction createReactiveEffect(fn, options) {\r\n    const effect = function reactiveEffect(...args) {\r\n        if (!effect.active) {\r\n            return options.scheduler ? undefined : fn(...args);\r\n        }\r\n        if (!effectStack.includes(effect)) {\r\n            cleanup(effect);\r\n            try {\r\n                enableTracking();\r\n                effectStack.push(effect);\r\n                activeEffect = effect;\r\n                return fn(...args);\r\n            }\r\n            finally {\r\n                effectStack.pop();\r\n                resetTracking();\r\n                activeEffect = effectStack[effectStack.length - 1];\r\n            }\r\n        }\r\n    };\r\n    effect.id = uid++;\r\n    effect._isEffect = true;\r\n    effect.active = true;\r\n    effect.raw = fn;\r\n    effect.deps = [];\r\n    effect.options = options;\r\n    return effect;\r\n}\r\nfunction cleanup(effect) {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].delete(effect);\r\n        }\r\n        deps.length = 0;\r\n    }\r\n}\r\nlet shouldTrack = true;\r\nconst trackStack = [];\r\nfunction pauseTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = false;\r\n}\r\nfunction enableTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = true;\r\n}\r\nfunction resetTracking() {\r\n    const last = trackStack.pop();\r\n    shouldTrack = last === undefined ? true : last;\r\n}\r\nfunction track(target, type, key) {\r\n    if (!shouldTrack || activeEffect === undefined) {\r\n        return;\r\n    }\r\n    let depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        targetMap.set(target, (depsMap = new Map()));\r\n    }\r\n    let dep = depsMap.get(key);\r\n    if (!dep) {\r\n        depsMap.set(key, (dep = new Set()));\r\n    }\r\n    if (!dep.has(activeEffect)) {\r\n        dep.add(activeEffect);\r\n        activeEffect.deps.push(dep);\r\n        if ((process.env.NODE_ENV !== 'production') && activeEffect.options.onTrack) {\r\n            activeEffect.options.onTrack({\r\n                effect: activeEffect,\r\n                target,\r\n                type,\r\n                key\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\r\n    const depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        // never been tracked\r\n        return;\r\n    }\r\n    const effects = new Set();\r\n    const computedRunners = new Set();\r\n    const add = (effectsToAdd) => {\r\n        if (effectsToAdd) {\r\n            effectsToAdd.forEach(effect => {\r\n                if (effect !== activeEffect || !shouldTrack) {\r\n                    if (effect.options.computed) {\r\n                        computedRunners.add(effect);\r\n                    }\r\n                    else {\r\n                        effects.add(effect);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    if (type === \"clear\" /* CLEAR */) {\r\n        // collection being cleared\r\n        // trigger all effects for target\r\n        depsMap.forEach(add);\r\n    }\r\n    else if (key === 'length' && isArray(target)) {\r\n        depsMap.forEach((dep, key) => {\r\n            if (key === 'length' || key >= newValue) {\r\n                add(dep);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        // schedule runs for SET | ADD | DELETE\r\n        if (key !== void 0) {\r\n            add(depsMap.get(key));\r\n        }\r\n        // also run for iteration key on ADD | DELETE | Map.SET\r\n        const isAddOrDelete = type === \"add\" /* ADD */ ||\r\n            (type === \"delete\" /* DELETE */ && !isArray(target));\r\n        if (isAddOrDelete ||\r\n            (type === \"set\" /* SET */ && target instanceof Map)) {\r\n            add(depsMap.get(isArray(target) ? 'length' : ITERATE_KEY));\r\n        }\r\n        if (isAddOrDelete && target instanceof Map) {\r\n            add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n        }\r\n    }\r\n    const run = (effect) => {\r\n        if ((process.env.NODE_ENV !== 'production') && effect.options.onTrigger) {\r\n            effect.options.onTrigger({\r\n                effect,\r\n                target,\r\n                key,\r\n                type,\r\n                newValue,\r\n                oldValue,\r\n                oldTarget\r\n            });\r\n        }\r\n        if (effect.options.scheduler) {\r\n            effect.options.scheduler(effect);\r\n        }\r\n        else {\r\n            effect();\r\n        }\r\n    };\r\n    // Important: computed effects must be run first so that computed getters\r\n    // can be invalidated before any normal effects that depend on them are run.\r\n    computedRunners.forEach(run);\r\n    effects.forEach(run);\r\n}\n\nconst builtInSymbols = new Set(Object.getOwnPropertyNames(Symbol)\r\n    .map(key => Symbol[key])\r\n    .filter(isSymbol));\r\nconst get = /*#__PURE__*/ createGetter();\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true);\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);\r\nconst arrayInstrumentations = {};\r\n['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\r\n    arrayInstrumentations[key] = function (...args) {\r\n        const arr = toRaw(this);\r\n        for (let i = 0, l = this.length; i < l; i++) {\r\n            track(arr, \"get\" /* GET */, i + '');\r\n        }\r\n        // we run the method using the original args first (which may be reactive)\r\n        const res = arr[key](...args);\r\n        if (res === -1 || res === false) {\r\n            // if that didn't work, run it again using raw values.\r\n            return arr[key](...args.map(toRaw));\r\n        }\r\n        else {\r\n            return res;\r\n        }\r\n    };\r\n});\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    return function get(target, key, receiver) {\r\n        const targetIsArray = isArray(target);\r\n        if (targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n            return Reflect.get(arrayInstrumentations, key, receiver);\r\n        }\r\n        const res = Reflect.get(target, key, receiver);\r\n        if (isSymbol(key) && builtInSymbols.has(key)) {\r\n            return res;\r\n        }\r\n        if (shallow) {\r\n            !isReadonly && track(target, \"get\" /* GET */, key);\r\n            return res;\r\n        }\r\n        if (isRef(res)) {\r\n            if (targetIsArray) {\r\n                !isReadonly && track(target, \"get\" /* GET */, key);\r\n                return res;\r\n            }\r\n            else {\r\n                // ref unwrapping, only for Objects, not for Arrays.\r\n                return res.value;\r\n            }\r\n        }\r\n        !isReadonly && track(target, \"get\" /* GET */, key);\r\n        return isObject(res)\r\n            ? isReadonly\r\n                ? // need to lazy access readonly and reactive here to avoid\r\n                    // circular dependency\r\n                    readonly(res)\r\n                : reactive(res)\r\n            : res;\r\n    };\r\n}\r\nconst set = /*#__PURE__*/ createSetter();\r\nconst shallowSet = /*#__PURE__*/ createSetter(true);\r\nfunction createSetter(shallow = false) {\r\n    return function set(target, key, value, receiver) {\r\n        const oldValue = target[key];\r\n        if (!shallow) {\r\n            value = toRaw(value);\r\n            if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n                oldValue.value = value;\r\n                return true;\r\n            }\r\n        }\r\n        const hadKey = hasOwn(target, key);\r\n        const result = Reflect.set(target, key, value, receiver);\r\n        // don't trigger if target is something up in the prototype chain of original\r\n        if (target === toRaw(receiver)) {\r\n            if (!hadKey) {\r\n                trigger(target, \"add\" /* ADD */, key, value);\r\n            }\r\n            else if (hasChanged(value, oldValue)) {\r\n                trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction deleteProperty(target, key) {\r\n    const hadKey = hasOwn(target, key);\r\n    const oldValue = target[key];\r\n    const result = Reflect.deleteProperty(target, key);\r\n    if (result && hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction has(target, key) {\r\n    const result = Reflect.has(target, key);\r\n    track(target, \"has\" /* HAS */, key);\r\n    return result;\r\n}\r\nfunction ownKeys(target) {\r\n    track(target, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.ownKeys(target);\r\n}\r\nconst mutableHandlers = {\r\n    get,\r\n    set,\r\n    deleteProperty,\r\n    has,\r\n    ownKeys\r\n};\r\nconst readonlyHandlers = {\r\n    get: readonlyGet,\r\n    has,\r\n    ownKeys,\r\n    set(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    },\r\n    deleteProperty(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    }\r\n};\r\nconst shallowReactiveHandlers = {\r\n    ...mutableHandlers,\r\n    get: shallowGet,\r\n    set: shallowSet\r\n};\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nconst shallowReadonlyHandlers = {\r\n    ...readonlyHandlers,\r\n    get: shallowReadonlyGet\r\n};\n\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\r\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\r\nconst getProto = (v) => Reflect.getPrototypeOf(v);\r\nfunction get$1(target, key, wrap) {\r\n    target = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        track(target, \"get\" /* GET */, key);\r\n    }\r\n    track(target, \"get\" /* GET */, rawKey);\r\n    const { has, get } = getProto(target);\r\n    if (has.call(target, key)) {\r\n        return wrap(get.call(target, key));\r\n    }\r\n    else if (has.call(target, rawKey)) {\r\n        return wrap(get.call(target, rawKey));\r\n    }\r\n}\r\nfunction has$1(key) {\r\n    const target = toRaw(this);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        track(target, \"has\" /* HAS */, key);\r\n    }\r\n    track(target, \"has\" /* HAS */, rawKey);\r\n    const has = getProto(target).has;\r\n    return has.call(target, key) || has.call(target, rawKey);\r\n}\r\nfunction size(target) {\r\n    target = toRaw(target);\r\n    track(target, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.get(getProto(target), 'size', target);\r\n}\r\nfunction add(value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const proto = getProto(target);\r\n    const hadKey = proto.has.call(target, value);\r\n    const result = proto.add.call(target, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, value, value);\r\n    }\r\n    return result;\r\n}\r\nfunction set$1(key, value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const { has, get, set } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get.call(target, key);\r\n    const result = set.call(target, key, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, key, value);\r\n    }\r\n    else if (hasChanged(value, oldValue)) {\r\n        trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction deleteEntry(key) {\r\n    const target = toRaw(this);\r\n    const { has, get, delete: del } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get ? get.call(target, key) : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = del.call(target, key);\r\n    if (hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction clear() {\r\n    const target = toRaw(this);\r\n    const hadItems = target.size !== 0;\r\n    const oldTarget = (process.env.NODE_ENV !== 'production')\r\n        ? target instanceof Map\r\n            ? new Map(target)\r\n            : new Set(target)\r\n        : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = getProto(target).clear.call(target);\r\n    if (hadItems) {\r\n        trigger(target, \"clear\" /* CLEAR */, undefined, undefined, oldTarget);\r\n    }\r\n    return result;\r\n}\r\nfunction createForEach(isReadonly) {\r\n    return function forEach(callback, thisArg) {\r\n        const observed = this;\r\n        const target = toRaw(observed);\r\n        const wrap = isReadonly ? toReadonly : toReactive;\r\n        !isReadonly && track(target, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n        // important: create sure the callback is\r\n        // 1. invoked with the reactive map as `this` and 3rd arg\r\n        // 2. the value received should be a corresponding reactive/readonly.\r\n        function wrappedCallback(value, key) {\r\n            return callback.call(observed, wrap(value), wrap(key), observed);\r\n        }\r\n        return getProto(target).forEach.call(target, wrappedCallback, thisArg);\r\n    };\r\n}\r\nfunction createIterableMethod(method, isReadonly) {\r\n    return function (...args) {\r\n        const target = toRaw(this);\r\n        const isMap = target instanceof Map;\r\n        const isPair = method === 'entries' || (method === Symbol.iterator && isMap);\r\n        const isKeyOnly = method === 'keys' && isMap;\r\n        const innerIterator = getProto(target)[method].apply(target, args);\r\n        const wrap = isReadonly ? toReadonly : toReactive;\r\n        !isReadonly &&\r\n            track(target, \"iterate\" /* ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\r\n        // return a wrapped iterator which returns observed versions of the\r\n        // values emitted from the real iterator\r\n        return {\r\n            // iterator protocol\r\n            next() {\r\n                const { value, done } = innerIterator.next();\r\n                return done\r\n                    ? { value, done }\r\n                    : {\r\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n                        done\r\n                    };\r\n            },\r\n            // iterable protocol\r\n            [Symbol.iterator]() {\r\n                return this;\r\n            }\r\n        };\r\n    };\r\n}\r\nfunction createReadonlyMethod(type) {\r\n    return function (...args) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const key = args[0] ? `on key \"${args[0]}\" ` : ``;\r\n            console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\r\n        }\r\n        return type === \"delete\" /* DELETE */ ? false : this;\r\n    };\r\n}\r\nconst mutableInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, toReactive);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false)\r\n};\r\nconst readonlyInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, toReadonly);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add: createReadonlyMethod(\"add\" /* ADD */),\r\n    set: createReadonlyMethod(\"set\" /* SET */),\r\n    delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n    clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n    forEach: createForEach(true)\r\n};\r\nconst iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\r\niteratorMethods.forEach(method => {\r\n    mutableInstrumentations[method] = createIterableMethod(method, false);\r\n    readonlyInstrumentations[method] = createIterableMethod(method, true);\r\n});\r\nfunction createInstrumentationGetter(instrumentations) {\r\n    return (target, key, receiver) => Reflect.get(hasOwn(instrumentations, key) && key in target\r\n        ? instrumentations\r\n        : target, key, receiver);\r\n}\r\nconst mutableCollectionHandlers = {\r\n    get: createInstrumentationGetter(mutableInstrumentations)\r\n};\r\nconst readonlyCollectionHandlers = {\r\n    get: createInstrumentationGetter(readonlyInstrumentations)\r\n};\r\nfunction checkIdentityKeys(target, has, key) {\r\n    const rawKey = toRaw(key);\r\n    if (rawKey !== key && has.call(target, rawKey)) {\r\n        const type = toRawType(target);\r\n        console.warn(`Reactive ${type} contains both the raw and reactive ` +\r\n            `versions of the same object${type === `Map` ? `as keys` : ``}, ` +\r\n            `which can lead to inconsistencies. ` +\r\n            `Avoid differentiating between the raw and reactive versions ` +\r\n            `of an object and only use the reactive version if possible.`);\r\n    }\r\n}\n\n// WeakMaps that store {raw <-> observed} pairs.\r\nconst rawToReactive = new WeakMap();\r\nconst reactiveToRaw = new WeakMap();\r\nconst rawToReadonly = new WeakMap();\r\nconst readonlyToRaw = new WeakMap();\r\n// WeakSets for values that are marked readonly or non-reactive during\r\n// observable creation.\r\nconst rawValues = new WeakSet();\r\nconst collectionTypes = new Set([Set, Map, WeakMap, WeakSet]);\r\nconst isObservableType = /*#__PURE__*/ makeMap('Object,Array,Map,Set,WeakMap,WeakSet');\r\nconst canObserve = (value) => {\r\n    return (!value._isVue &&\r\n        !value._isVNode &&\r\n        isObservableType(toRawType(value)) &&\r\n        !rawValues.has(value) &&\r\n        !Object.isFrozen(value));\r\n};\r\nfunction reactive(target) {\r\n    // if trying to observe a readonly proxy, return the readonly version.\r\n    if (readonlyToRaw.has(target)) {\r\n        return target;\r\n    }\r\n    return createReactiveObject(target, rawToReactive, reactiveToRaw, mutableHandlers, mutableCollectionHandlers);\r\n}\r\n// Return a reactive-copy of the original object, where only the root level\r\n// properties are reactive, and does NOT unwrap refs nor recursively convert\r\n// returned properties.\r\nfunction shallowReactive(target) {\r\n    return createReactiveObject(target, rawToReactive, reactiveToRaw, shallowReactiveHandlers, mutableCollectionHandlers);\r\n}\r\nfunction readonly(target) {\r\n    return createReactiveObject(target, rawToReadonly, readonlyToRaw, readonlyHandlers, readonlyCollectionHandlers);\r\n}\r\n// Return a reactive-copy of the original object, where only the root level\r\n// properties are readonly, and does NOT unwrap refs nor recursively convert\r\n// returned properties.\r\n// This is used for creating the props proxy object for stateful components.\r\nfunction shallowReadonly(target) {\r\n    return createReactiveObject(target, rawToReadonly, readonlyToRaw, shallowReadonlyHandlers, readonlyCollectionHandlers);\r\n}\r\nfunction createReactiveObject(target, toProxy, toRaw, baseHandlers, collectionHandlers) {\r\n    if (!isObject(target)) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`value cannot be made reactive: ${String(target)}`);\r\n        }\r\n        return target;\r\n    }\r\n    // target already has corresponding Proxy\r\n    let observed = toProxy.get(target);\r\n    if (observed !== void 0) {\r\n        return observed;\r\n    }\r\n    // target is already a Proxy\r\n    if (toRaw.has(target)) {\r\n        return target;\r\n    }\r\n    // only a whitelist of value types can be observed.\r\n    if (!canObserve(target)) {\r\n        return target;\r\n    }\r\n    const handlers = collectionTypes.has(target.constructor)\r\n        ? collectionHandlers\r\n        : baseHandlers;\r\n    observed = new Proxy(target, handlers);\r\n    toProxy.set(target, observed);\r\n    toRaw.set(observed, target);\r\n    return observed;\r\n}\r\nfunction isReactive(value) {\r\n    value = readonlyToRaw.get(value) || value;\r\n    return reactiveToRaw.has(value);\r\n}\r\nfunction isReadonly(value) {\r\n    return readonlyToRaw.has(value);\r\n}\r\nfunction isProxy(value) {\r\n    return readonlyToRaw.has(value) || reactiveToRaw.has(value);\r\n}\r\nfunction toRaw(observed) {\r\n    observed = readonlyToRaw.get(observed) || observed;\r\n    return reactiveToRaw.get(observed) || observed;\r\n}\r\nfunction markRaw(value) {\r\n    rawValues.add(value);\r\n    return value;\r\n}\n\nconst convert = (val) => isObject(val) ? reactive(val) : val;\r\nfunction isRef(r) {\r\n    return r ? r._isRef === true : false;\r\n}\r\nfunction ref(value) {\r\n    return createRef(value);\r\n}\r\nfunction shallowRef(value) {\r\n    return createRef(value, true);\r\n}\r\nfunction createRef(value, shallow = false) {\r\n    if (isRef(value)) {\r\n        return value;\r\n    }\r\n    if (!shallow) {\r\n        value = convert(value);\r\n    }\r\n    const r = {\r\n        _isRef: true,\r\n        get value() {\r\n            track(r, \"get\" /* GET */, 'value');\r\n            return value;\r\n        },\r\n        set value(newVal) {\r\n            value = shallow ? newVal : convert(newVal);\r\n            trigger(r, \"set\" /* SET */, 'value', (process.env.NODE_ENV !== 'production') ? { newValue: newVal } : void 0);\r\n        }\r\n    };\r\n    return r;\r\n}\r\nfunction unref(ref) {\r\n    return isRef(ref) ? ref.value : ref;\r\n}\r\nfunction customRef(factory) {\r\n    const { get, set } = factory(() => track(r, \"get\" /* GET */, 'value'), () => trigger(r, \"set\" /* SET */, 'value'));\r\n    const r = {\r\n        _isRef: true,\r\n        get value() {\r\n            return get();\r\n        },\r\n        set value(v) {\r\n            set(v);\r\n        }\r\n    };\r\n    return r;\r\n}\r\nfunction toRefs(object) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isProxy(object)) {\r\n        console.warn(`toRefs() expects a reactive object but received a plain one.`);\r\n    }\r\n    const ret = {};\r\n    for (const key in object) {\r\n        ret[key] = toRef(object, key);\r\n    }\r\n    return ret;\r\n}\r\nfunction toRef(object, key) {\r\n    return {\r\n        _isRef: true,\r\n        get value() {\r\n            return object[key];\r\n        },\r\n        set value(newVal) {\r\n            object[key] = newVal;\r\n        }\r\n    };\r\n}\n\nfunction computed(getterOrOptions) {\r\n    let getter;\r\n    let setter;\r\n    if (isFunction(getterOrOptions)) {\r\n        getter = getterOrOptions;\r\n        setter = (process.env.NODE_ENV !== 'production')\r\n            ? () => {\r\n                console.warn('Write operation failed: computed value is readonly');\r\n            }\r\n            : NOOP;\r\n    }\r\n    else {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    }\r\n    let dirty = true;\r\n    let value;\r\n    let computed;\r\n    const runner = effect(getter, {\r\n        lazy: true,\r\n        // mark effect as computed so that it gets priority during trigger\r\n        computed: true,\r\n        scheduler: () => {\r\n            if (!dirty) {\r\n                dirty = true;\r\n                trigger(computed, \"set\" /* SET */, 'value');\r\n            }\r\n        }\r\n    });\r\n    computed = {\r\n        _isRef: true,\r\n        // expose effect so computed can be stopped\r\n        effect: runner,\r\n        get value() {\r\n            if (dirty) {\r\n                value = runner();\r\n                dirty = false;\r\n            }\r\n            track(computed, \"get\" /* GET */, 'value');\r\n            return value;\r\n        },\r\n        set value(newValue) {\r\n            setter(newValue);\r\n        }\r\n    };\r\n    return computed;\r\n}\n\nexport { ITERATE_KEY, computed, customRef, effect, enableTracking, isProxy, isReactive, isReadonly, isRef, markRaw, pauseTracking, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, track, trigger, unref };\n","import { pauseTracking, resetTracking, isRef, toRaw, isProxy, shallowReactive, effect, stop, reactive, shallowReadonly, computed as computed$1, ref } from '@vue/reactivity';\nexport { customRef, isProxy, isReactive, isReadonly, isRef, markRaw, reactive, readonly, ref, shallowReactive, shallowReadonly, shallowRef, toRaw, toRef, toRefs, unref } from '@vue/reactivity';\nimport { isString, isFunction, isPromise, isArray, isOn, EMPTY_ARR, extend, normalizeClass, isObject, normalizeStyle, EMPTY_OBJ, capitalize, hyphenate, def, hasOwn, camelize, isReservedProp, toRawType, makeMap, NO, invokeArrayFns, NOOP, remove, hasChanged, isGloballyWhitelisted } from '@vue/shared';\nexport { camelize, toDisplayString } from '@vue/shared';\n\nconst stack = [];\r\nfunction pushWarningContext(vnode) {\r\n    stack.push(vnode);\r\n}\r\nfunction popWarningContext() {\r\n    stack.pop();\r\n}\r\nfunction warn(msg, ...args) {\r\n    // avoid props formatting or warn handler tracking deps that might be mutated\r\n    // during patch, leading to infinite recursion.\r\n    pauseTracking();\r\n    const instance = stack.length ? stack[stack.length - 1].component : null;\r\n    const appWarnHandler = instance && instance.appContext.config.warnHandler;\r\n    const trace = getComponentTrace();\r\n    if (appWarnHandler) {\r\n        callWithErrorHandling(appWarnHandler, instance, 11 /* APP_WARN_HANDLER */, [\r\n            msg + args.join(''),\r\n            instance && instance.proxy,\r\n            trace\r\n                .map(({ vnode }) => `at <${formatComponentName(vnode.type)}>`)\r\n                .join('\\n'),\r\n            trace\r\n        ]);\r\n    }\r\n    else {\r\n        const warnArgs = [`[Vue warn]: ${msg}`, ...args];\r\n        if (trace.length &&\r\n            // avoid spamming console during tests\r\n            !false) {\r\n            warnArgs.push(`\\n`, ...formatTrace(trace));\r\n        }\r\n        console.warn(...warnArgs);\r\n    }\r\n    resetTracking();\r\n}\r\nfunction getComponentTrace() {\r\n    let currentVNode = stack[stack.length - 1];\r\n    if (!currentVNode) {\r\n        return [];\r\n    }\r\n    // we can't just use the stack because it will be incomplete during updates\r\n    // that did not start from the root. Re-construct the parent chain using\r\n    // instance parent pointers.\r\n    const normalizedStack = [];\r\n    while (currentVNode) {\r\n        const last = normalizedStack[0];\r\n        if (last && last.vnode === currentVNode) {\r\n            last.recurseCount++;\r\n        }\r\n        else {\r\n            normalizedStack.push({\r\n                vnode: currentVNode,\r\n                recurseCount: 0\r\n            });\r\n        }\r\n        const parentInstance = currentVNode.component\r\n            .parent;\r\n        currentVNode = parentInstance && parentInstance.vnode;\r\n    }\r\n    return normalizedStack;\r\n}\r\nfunction formatTrace(trace) {\r\n    const logs = [];\r\n    trace.forEach((entry, i) => {\r\n        logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry));\r\n    });\r\n    return logs;\r\n}\r\nfunction formatTraceEntry({ vnode, recurseCount }) {\r\n    const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\r\n    const isRoot = vnode.component.parent == null;\r\n    const open = ` at <${formatComponentName(vnode.type, isRoot)}`;\r\n    const close = `>` + postfix;\r\n    return vnode.props\r\n        ? [open, ...formatProps(vnode.props), close]\r\n        : [open + close];\r\n}\r\nfunction formatProps(props) {\r\n    const res = [];\r\n    const keys = Object.keys(props);\r\n    keys.slice(0, 3).forEach(key => {\r\n        res.push(...formatProp(key, props[key]));\r\n    });\r\n    if (keys.length > 3) {\r\n        res.push(` ...`);\r\n    }\r\n    return res;\r\n}\r\nfunction formatProp(key, value, raw) {\r\n    if (isString(value)) {\r\n        value = JSON.stringify(value);\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (typeof value === 'number' ||\r\n        typeof value === 'boolean' ||\r\n        value == null) {\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (isRef(value)) {\r\n        value = formatProp(key, toRaw(value.value), true);\r\n        return raw ? value : [`${key}=Ref<`, value, `>`];\r\n    }\r\n    else if (isFunction(value)) {\r\n        return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\r\n    }\r\n    else {\r\n        value = toRaw(value);\r\n        return raw ? value : [`${key}=`, value];\r\n    }\r\n}\n\nconst ErrorTypeStrings = {\r\n    [\"bc\" /* BEFORE_CREATE */]: 'beforeCreate hook',\r\n    [\"c\" /* CREATED */]: 'created hook',\r\n    [\"bm\" /* BEFORE_MOUNT */]: 'beforeMount hook',\r\n    [\"m\" /* MOUNTED */]: 'mounted hook',\r\n    [\"bu\" /* BEFORE_UPDATE */]: 'beforeUpdate hook',\r\n    [\"u\" /* UPDATED */]: 'updated',\r\n    [\"bum\" /* BEFORE_UNMOUNT */]: 'beforeUnmount hook',\r\n    [\"um\" /* UNMOUNTED */]: 'unmounted hook',\r\n    [\"a\" /* ACTIVATED */]: 'activated hook',\r\n    [\"da\" /* DEACTIVATED */]: 'deactivated hook',\r\n    [\"ec\" /* ERROR_CAPTURED */]: 'errorCaptured hook',\r\n    [\"rtc\" /* RENDER_TRACKED */]: 'renderTracked hook',\r\n    [\"rtg\" /* RENDER_TRIGGERED */]: 'renderTriggered hook',\r\n    [0 /* SETUP_FUNCTION */]: 'setup function',\r\n    [1 /* RENDER_FUNCTION */]: 'render function',\r\n    [2 /* WATCH_GETTER */]: 'watcher getter',\r\n    [3 /* WATCH_CALLBACK */]: 'watcher callback',\r\n    [4 /* WATCH_CLEANUP */]: 'watcher cleanup function',\r\n    [5 /* NATIVE_EVENT_HANDLER */]: 'native event handler',\r\n    [6 /* COMPONENT_EVENT_HANDLER */]: 'component event handler',\r\n    [7 /* VNODE_HOOK */]: 'vnode hook',\r\n    [8 /* DIRECTIVE_HOOK */]: 'directive hook',\r\n    [9 /* TRANSITION_HOOK */]: 'transition hook',\r\n    [10 /* APP_ERROR_HANDLER */]: 'app errorHandler',\r\n    [11 /* APP_WARN_HANDLER */]: 'app warnHandler',\r\n    [12 /* FUNCTION_REF */]: 'ref function',\r\n    [13 /* ASYNC_COMPONENT_LOADER */]: 'async component loader',\r\n    [14 /* SCHEDULER */]: 'scheduler flush. This is likely a Vue internals bug. ' +\r\n        'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-next'\r\n};\r\nfunction callWithErrorHandling(fn, instance, type, args) {\r\n    let res;\r\n    try {\r\n        res = args ? fn(...args) : fn();\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, type);\r\n    }\r\n    return res;\r\n}\r\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\r\n    if (isFunction(fn)) {\r\n        const res = callWithErrorHandling(fn, instance, type, args);\r\n        if (res && !res._isVue && isPromise(res)) {\r\n            res.catch(err => {\r\n                handleError(err, instance, type);\r\n            });\r\n        }\r\n        return res;\r\n    }\r\n    const values = [];\r\n    for (let i = 0; i < fn.length; i++) {\r\n        values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\r\n    }\r\n    return values;\r\n}\r\nfunction handleError(err, instance, type) {\r\n    const contextVNode = instance ? instance.vnode : null;\r\n    if (instance) {\r\n        let cur = instance.parent;\r\n        // the exposed instance is the render proxy to keep it consistent with 2.x\r\n        const exposedInstance = instance.proxy;\r\n        // in production the hook receives only the error code\r\n        const errorInfo = (process.env.NODE_ENV !== 'production') ? ErrorTypeStrings[type] : type;\r\n        while (cur) {\r\n            const errorCapturedHooks = cur.ec;\r\n            if (errorCapturedHooks) {\r\n                for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n                    if (errorCapturedHooks[i](err, exposedInstance, errorInfo)) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            cur = cur.parent;\r\n        }\r\n        // app-level handling\r\n        const appErrorHandler = instance.appContext.config.errorHandler;\r\n        if (appErrorHandler) {\r\n            callWithErrorHandling(appErrorHandler, null, 10 /* APP_ERROR_HANDLER */, [err, exposedInstance, errorInfo]);\r\n            return;\r\n        }\r\n    }\r\n    logError(err, type, contextVNode);\r\n}\r\nfunction logError(err, type, contextVNode) {\r\n    // default behavior is crash in prod & test, recover in dev.\r\n    if ((process.env.NODE_ENV !== 'production') && ( !false)) {\r\n        const info = ErrorTypeStrings[type];\r\n        if (contextVNode) {\r\n            pushWarningContext(contextVNode);\r\n        }\r\n        warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\r\n        console.error(err);\r\n        if (contextVNode) {\r\n            popWarningContext();\r\n        }\r\n    }\r\n    else {\r\n        throw err;\r\n    }\r\n}\n\nconst queue = [];\r\nconst postFlushCbs = [];\r\nconst p = Promise.resolve();\r\nlet isFlushing = false;\r\nlet isFlushPending = false;\r\nconst RECURSION_LIMIT = 100;\r\nfunction nextTick(fn) {\r\n    return fn ? p.then(fn) : p;\r\n}\r\nfunction queueJob(job) {\r\n    if (!queue.includes(job)) {\r\n        queue.push(job);\r\n        queueFlush();\r\n    }\r\n}\r\nfunction invalidateJob(job) {\r\n    const i = queue.indexOf(job);\r\n    if (i > -1) {\r\n        queue[i] = null;\r\n    }\r\n}\r\nfunction queuePostFlushCb(cb) {\r\n    if (!isArray(cb)) {\r\n        postFlushCbs.push(cb);\r\n    }\r\n    else {\r\n        postFlushCbs.push(...cb);\r\n    }\r\n    queueFlush();\r\n}\r\nfunction queueFlush() {\r\n    if (!isFlushing && !isFlushPending) {\r\n        isFlushPending = true;\r\n        nextTick(flushJobs);\r\n    }\r\n}\r\nfunction flushPostFlushCbs(seen) {\r\n    if (postFlushCbs.length) {\r\n        const cbs = [...new Set(postFlushCbs)];\r\n        postFlushCbs.length = 0;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        for (let i = 0; i < cbs.length; i++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, cbs[i]);\r\n            }\r\n            cbs[i]();\r\n        }\r\n    }\r\n}\r\nconst getId = (job) => (job.id == null ? Infinity : job.id);\r\nfunction flushJobs(seen) {\r\n    isFlushPending = false;\r\n    isFlushing = true;\r\n    let job;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        seen = seen || new Map();\r\n    }\r\n    // Sort queue before flush.\r\n    // This ensures that:\r\n    // 1. Components are updated from parent to child. (because parent is always\r\n    //    created before the child so its render effect will have smaller\r\n    //    priority number)\r\n    // 2. If a component is unmounted during a parent component's update,\r\n    //    its update can be skipped.\r\n    // Jobs can never be null before flush starts, since they are only invalidated\r\n    // during execution of another flushed job.\r\n    queue.sort((a, b) => getId(a) - getId(b));\r\n    while ((job = queue.shift()) !== undefined) {\r\n        if (job === null) {\r\n            continue;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            checkRecursiveUpdates(seen, job);\r\n        }\r\n        callWithErrorHandling(job, null, 14 /* SCHEDULER */);\r\n    }\r\n    flushPostFlushCbs(seen);\r\n    isFlushing = false;\r\n    // some postFlushCb queued jobs!\r\n    // keep flushing until it drains.\r\n    if (queue.length || postFlushCbs.length) {\r\n        flushJobs(seen);\r\n    }\r\n}\r\nfunction checkRecursiveUpdates(seen, fn) {\r\n    if (!seen.has(fn)) {\r\n        seen.set(fn, 1);\r\n    }\r\n    else {\r\n        const count = seen.get(fn);\r\n        if (count > RECURSION_LIMIT) {\r\n            throw new Error('Maximum recursive updates exceeded. ' +\r\n                \"You may have code that is mutating state in your component's \" +\r\n                'render function or updated hook or watcher source function.');\r\n        }\r\n        else {\r\n            seen.set(fn, count + 1);\r\n        }\r\n    }\r\n}\n\n// mark the current rendering instance for asset resolution (e.g.\r\n// resolveComponent, resolveDirective) during render\r\nlet currentRenderingInstance = null;\r\nfunction setCurrentRenderingInstance(instance) {\r\n    currentRenderingInstance = instance;\r\n}\r\n// dev only flag to track whether $attrs was used during render.\r\n// If $attrs was used during render then the warning for failed attrs\r\n// fallthrough can be suppressed.\r\nlet accessedAttrs = false;\r\nfunction markAttrsAccessed() {\r\n    accessedAttrs = true;\r\n}\r\nfunction renderComponentRoot(instance) {\r\n    const { type: Component, parent, vnode, proxy, withProxy, props, slots, attrs, emit, renderCache } = instance;\r\n    let result;\r\n    currentRenderingInstance = instance;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        accessedAttrs = false;\r\n    }\r\n    try {\r\n        let fallthroughAttrs;\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            // withProxy is a proxy with a different `has` trap only for\r\n            // runtime-compiled render functions using `with` block.\r\n            const proxyToUse = withProxy || proxy;\r\n            result = normalizeVNode(instance.render.call(proxyToUse, proxyToUse, renderCache));\r\n            fallthroughAttrs = attrs;\r\n        }\r\n        else {\r\n            // functional\r\n            const render = Component;\r\n            // in dev, mark attrs accessed if optional props (attrs === props)\r\n            if ((process.env.NODE_ENV !== 'production') && attrs === props) {\r\n                markAttrsAccessed();\r\n            }\r\n            result = normalizeVNode(render.length > 1\r\n                ? render(props, (process.env.NODE_ENV !== 'production')\r\n                    ? {\r\n                        get attrs() {\r\n                            markAttrsAccessed();\r\n                            return attrs;\r\n                        },\r\n                        slots,\r\n                        emit\r\n                    }\r\n                    : { attrs, slots, emit })\r\n                : render(props, null /* we know it doesn't need it */));\r\n            fallthroughAttrs = Component.props ? attrs : getFallthroughAttrs(attrs);\r\n        }\r\n        // attr merging\r\n        // in dev mode, comments are preserved, and it's possible for a template\r\n        // to have comments along side the root element which makes it a fragment\r\n        let root = result;\r\n        let setRoot = undefined;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            ;\r\n            [root, setRoot] = getChildRoot(result);\r\n        }\r\n        if (Component.inheritAttrs !== false &&\r\n            fallthroughAttrs &&\r\n            Object.keys(fallthroughAttrs).length) {\r\n            if (root.shapeFlag & 1 /* ELEMENT */ ||\r\n                root.shapeFlag & 6 /* COMPONENT */) {\r\n                root = cloneVNode(root, fallthroughAttrs);\r\n                // If the child root node is a compiler optimized vnode, make sure it\r\n                // force update full props to account for the merged attrs.\r\n                if (root.dynamicChildren) {\r\n                    root.patchFlag |= 16 /* FULL_PROPS */;\r\n                }\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production') && !accessedAttrs && root.type !== Comment) {\r\n                const allAttrs = Object.keys(attrs);\r\n                const eventAttrs = [];\r\n                const extraAttrs = [];\r\n                for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n                    const key = allAttrs[i];\r\n                    if (isOn(key)) {\r\n                        // remove `on`, lowercase first letter to reflect event casing accurately\r\n                        eventAttrs.push(key[2].toLowerCase() + key.slice(3));\r\n                    }\r\n                    else {\r\n                        extraAttrs.push(key);\r\n                    }\r\n                }\r\n                if (extraAttrs.length) {\r\n                    warn(`Extraneous non-props attributes (` +\r\n                        `${extraAttrs.join(', ')}) ` +\r\n                        `were passed to component but could not be automatically inherited ` +\r\n                        `because component renders fragment or text root nodes.`);\r\n                }\r\n                if (eventAttrs.length) {\r\n                    warn(`Extraneous non-emits event listeners (` +\r\n                        `${eventAttrs.join(', ')}) ` +\r\n                        `were passed to component but could not be automatically inherited ` +\r\n                        `because component renders fragment or text root nodes. ` +\r\n                        `If the listener is intended to be a component custom event listener only, ` +\r\n                        `declare it using the \"emits\" option.`);\r\n                }\r\n            }\r\n        }\r\n        // inherit scopeId\r\n        const parentScopeId = parent && parent.type.__scopeId;\r\n        if (parentScopeId) {\r\n            root = cloneVNode(root, { [parentScopeId]: '' });\r\n        }\r\n        // inherit directives\r\n        if (vnode.dirs) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Runtime directive used on component with non-element root node. ` +\r\n                    `The directives will not function as intended.`);\r\n            }\r\n            root.dirs = vnode.dirs;\r\n        }\r\n        // inherit transition data\r\n        if (vnode.transition) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Component inside <Transition> renders non-element root node ` +\r\n                    `that cannot be animated.`);\r\n            }\r\n            root.transition = vnode.transition;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && setRoot) {\r\n            setRoot(root);\r\n        }\r\n        else {\r\n            result = root;\r\n        }\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, 1 /* RENDER_FUNCTION */);\r\n        result = createVNode(Comment);\r\n    }\r\n    currentRenderingInstance = null;\r\n    return result;\r\n}\r\nconst getChildRoot = (vnode) => {\r\n    if (vnode.type !== Fragment) {\r\n        return [vnode, undefined];\r\n    }\r\n    const rawChildren = vnode.children;\r\n    const dynamicChildren = vnode.dynamicChildren;\r\n    const children = rawChildren.filter(child => {\r\n        return !(isVNode(child) && child.type === Comment);\r\n    });\r\n    if (children.length !== 1) {\r\n        return [vnode, undefined];\r\n    }\r\n    const childRoot = children[0];\r\n    const index = rawChildren.indexOf(childRoot);\r\n    const dynamicIndex = dynamicChildren\r\n        ? dynamicChildren.indexOf(childRoot)\r\n        : null;\r\n    const setRoot = (updatedRoot) => {\r\n        rawChildren[index] = updatedRoot;\r\n        if (dynamicIndex !== null)\r\n            dynamicChildren[dynamicIndex] = updatedRoot;\r\n    };\r\n    return [normalizeVNode(childRoot), setRoot];\r\n};\r\nconst getFallthroughAttrs = (attrs) => {\r\n    let res;\r\n    for (const key in attrs) {\r\n        if (key === 'class' || key === 'style' || isOn(key)) {\r\n            (res || (res = {}))[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst isElementRoot = (vnode) => {\r\n    return (vnode.shapeFlag & 6 /* COMPONENT */ ||\r\n        vnode.shapeFlag & 1 /* ELEMENT */ ||\r\n        vnode.type === Comment // potential v-if branch switch\r\n    );\r\n};\r\nfunction shouldUpdateComponent(prevVNode, nextVNode, parentComponent, optimized) {\r\n    const { props: prevProps, children: prevChildren } = prevVNode;\r\n    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\r\n    // Parent component's render function was hot-updated. Since this may have\r\n    // caused the child component's slots content to have changed, we need to\r\n    // force the child to update as well.\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        (prevChildren || nextChildren) &&\r\n        parentComponent &&\r\n        parentComponent.renderUpdated) {\r\n        return true;\r\n    }\r\n    // force child update for runtime directive or transition on component vnode.\r\n    if (nextVNode.dirs || nextVNode.transition) {\r\n        return true;\r\n    }\r\n    if (patchFlag > 0) {\r\n        if (patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n            // slot content that references values that might have changed,\r\n            // e.g. in a v-for\r\n            return true;\r\n        }\r\n        if (patchFlag & 16 /* FULL_PROPS */) {\r\n            // presence of this flag indicates props are always non-null\r\n            return hasPropsChanged(prevProps, nextProps);\r\n        }\r\n        else if (patchFlag & 8 /* PROPS */) {\r\n            const dynamicProps = nextVNode.dynamicProps;\r\n            for (let i = 0; i < dynamicProps.length; i++) {\r\n                const key = dynamicProps[i];\r\n                if (nextProps[key] !== prevProps[key]) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (!optimized) {\r\n        // this path is only taken by manually written render functions\r\n        // so presence of any children leads to a forced update\r\n        if (prevChildren || nextChildren) {\r\n            if (!nextChildren || !nextChildren.$stable) {\r\n                return true;\r\n            }\r\n        }\r\n        if (prevProps === nextProps) {\r\n            return false;\r\n        }\r\n        if (!prevProps) {\r\n            return !!nextProps;\r\n        }\r\n        if (!nextProps) {\r\n            return true;\r\n        }\r\n        return hasPropsChanged(prevProps, nextProps);\r\n    }\r\n    return false;\r\n}\r\nfunction hasPropsChanged(prevProps, nextProps) {\r\n    const nextKeys = Object.keys(nextProps);\r\n    if (nextKeys.length !== Object.keys(prevProps).length) {\r\n        return true;\r\n    }\r\n    for (let i = 0; i < nextKeys.length; i++) {\r\n        const key = nextKeys[i];\r\n        if (nextProps[key] !== prevProps[key]) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction updateHOCHostEl({ vnode, parent }, el // HostNode\r\n) {\r\n    while (parent && parent.subTree === vnode) {\r\n        (vnode = parent.vnode).el = el;\r\n        parent = parent.parent;\r\n    }\r\n}\n\nconst isSuspense = (type) => type.__isSuspense;\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nconst SuspenseImpl = {\r\n    // In order to make Suspense tree-shakable, we need to avoid importing it\r\n    // directly in the renderer. The renderer checks for the __isSuspense flag\r\n    // on a vnode's type and calls the `process` method, passing in renderer\r\n    // internals.\r\n    __isSuspense: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, \r\n    // platform-specific impl passed from renderer\r\n    rendererInternals) {\r\n        if (n1 == null) {\r\n            mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, rendererInternals);\r\n        }\r\n        else {\r\n            patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, optimized, rendererInternals);\r\n        }\r\n    },\r\n    hydrate: hydrateSuspense\r\n};\r\n// Force-casted public typing for h and TSX props inference\r\nconst Suspense = ( SuspenseImpl\r\n    );\r\nfunction mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, rendererInternals) {\r\n    const { p: patch, o: { createElement } } = rendererInternals;\r\n    const hiddenContainer = createElement('div');\r\n    const suspense = (n2.suspense = createSuspenseBoundary(n2, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, optimized, rendererInternals));\r\n    // start mounting the content subtree in an off-dom container\r\n    patch(null, suspense.subTree, hiddenContainer, null, parentComponent, suspense, isSVG, optimized);\r\n    // now check if we have encountered any async deps\r\n    if (suspense.deps > 0) {\r\n        // mount the fallback tree\r\n        patch(null, suspense.fallbackTree, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n        isSVG, optimized);\r\n        n2.el = suspense.fallbackTree.el;\r\n    }\r\n    else {\r\n        // Suspense has no async deps. Just resolve.\r\n        suspense.resolve();\r\n    }\r\n}\r\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, optimized, { p: patch }) {\r\n    const suspense = (n2.suspense = n1.suspense);\r\n    suspense.vnode = n2;\r\n    const { content, fallback } = normalizeSuspenseChildren(n2);\r\n    const oldSubTree = suspense.subTree;\r\n    const oldFallbackTree = suspense.fallbackTree;\r\n    if (!suspense.isResolved) {\r\n        patch(oldSubTree, content, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, optimized);\r\n        if (suspense.deps > 0) {\r\n            // still pending. patch the fallback tree.\r\n            patch(oldFallbackTree, fallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n            isSVG, optimized);\r\n            n2.el = fallback.el;\r\n        }\r\n        // If deps somehow becomes 0 after the patch it means the patch caused an\r\n        // async dep component to unmount and removed its dep. It will cause the\r\n        // suspense to resolve and we don't need to do anything here.\r\n    }\r\n    else {\r\n        // just normal patch inner content as a fragment\r\n        patch(oldSubTree, content, container, anchor, parentComponent, suspense, isSVG, optimized);\r\n        n2.el = content.el;\r\n    }\r\n    suspense.subTree = content;\r\n    suspense.fallbackTree = fallback;\r\n}\r\nfunction createSuspenseBoundary(vnode, parent, parentComponent, container, hiddenContainer, anchor, isSVG, optimized, rendererInternals, isHydrating = false) {\r\n    const { p: patch, m: move, um: unmount, n: next, o: { parentNode } } = rendererInternals;\r\n    const getCurrentTree = () => suspense.isResolved || suspense.isHydrating\r\n        ? suspense.subTree\r\n        : suspense.fallbackTree;\r\n    const { content, fallback } = normalizeSuspenseChildren(vnode);\r\n    const suspense = {\r\n        vnode,\r\n        parent,\r\n        parentComponent,\r\n        isSVG,\r\n        optimized,\r\n        container,\r\n        hiddenContainer,\r\n        anchor,\r\n        deps: 0,\r\n        subTree: content,\r\n        fallbackTree: fallback,\r\n        isHydrating,\r\n        isResolved: false,\r\n        isUnmounted: false,\r\n        effects: [],\r\n        resolve() {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (suspense.isResolved) {\r\n                    throw new Error(`resolveSuspense() is called on an already resolved suspense boundary.`);\r\n                }\r\n                if (suspense.isUnmounted) {\r\n                    throw new Error(`resolveSuspense() is called on an already unmounted suspense boundary.`);\r\n                }\r\n            }\r\n            const { vnode, subTree, fallbackTree, effects, parentComponent, container } = suspense;\r\n            if (suspense.isHydrating) {\r\n                suspense.isHydrating = false;\r\n            }\r\n            else {\r\n                // this is initial anchor on mount\r\n                let { anchor } = suspense;\r\n                // unmount fallback tree\r\n                if (fallbackTree.el) {\r\n                    // if the fallback tree was mounted, it may have been moved\r\n                    // as part of a parent suspense. get the latest anchor for insertion\r\n                    anchor = next(fallbackTree);\r\n                    unmount(fallbackTree, parentComponent, suspense, true);\r\n                }\r\n                // move content from off-dom container to actual container\r\n                move(subTree, container, anchor, 0 /* ENTER */);\r\n            }\r\n            const el = (vnode.el = subTree.el);\r\n            // suspense as the root node of a component...\r\n            if (parentComponent && parentComponent.subTree === vnode) {\r\n                parentComponent.vnode.el = el;\r\n                updateHOCHostEl(parentComponent, el);\r\n            }\r\n            // check if there is a pending parent suspense\r\n            let parent = suspense.parent;\r\n            let hasUnresolvedAncestor = false;\r\n            while (parent) {\r\n                if (!parent.isResolved) {\r\n                    // found a pending parent suspense, merge buffered post jobs\r\n                    // into that parent\r\n                    parent.effects.push(...effects);\r\n                    hasUnresolvedAncestor = true;\r\n                    break;\r\n                }\r\n                parent = parent.parent;\r\n            }\r\n            // no pending parent suspense, flush all jobs\r\n            if (!hasUnresolvedAncestor) {\r\n                queuePostFlushCb(effects);\r\n            }\r\n            suspense.isResolved = true;\r\n            suspense.effects = [];\r\n            // invoke @resolve event\r\n            const onResolve = vnode.props && vnode.props.onResolve;\r\n            if (isFunction(onResolve)) {\r\n                onResolve();\r\n            }\r\n        },\r\n        recede() {\r\n            suspense.isResolved = false;\r\n            const { vnode, subTree, fallbackTree, parentComponent, container, hiddenContainer, isSVG, optimized } = suspense;\r\n            // move content tree back to the off-dom container\r\n            const anchor = next(subTree);\r\n            move(subTree, hiddenContainer, null, 1 /* LEAVE */);\r\n            // remount the fallback tree\r\n            patch(null, fallbackTree, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n            isSVG, optimized);\r\n            const el = (vnode.el = fallbackTree.el);\r\n            // suspense as the root node of a component...\r\n            if (parentComponent && parentComponent.subTree === vnode) {\r\n                parentComponent.vnode.el = el;\r\n                updateHOCHostEl(parentComponent, el);\r\n            }\r\n            // invoke @recede event\r\n            const onRecede = vnode.props && vnode.props.onRecede;\r\n            if (isFunction(onRecede)) {\r\n                onRecede();\r\n            }\r\n        },\r\n        move(container, anchor, type) {\r\n            move(getCurrentTree(), container, anchor, type);\r\n            suspense.container = container;\r\n        },\r\n        next() {\r\n            return next(getCurrentTree());\r\n        },\r\n        registerDep(instance, setupRenderEffect) {\r\n            // suspense is already resolved, need to recede.\r\n            // use queueJob so it's handled synchronously after patching the current\r\n            // suspense tree\r\n            if (suspense.isResolved) {\r\n                queueJob(() => {\r\n                    suspense.recede();\r\n                });\r\n            }\r\n            const hydratedEl = instance.vnode.el;\r\n            suspense.deps++;\r\n            instance\r\n                .asyncDep.catch(err => {\r\n                handleError(err, instance, 0 /* SETUP_FUNCTION */);\r\n            })\r\n                .then(asyncSetupResult => {\r\n                // retry when the setup() promise resolves.\r\n                // component may have been unmounted before resolve.\r\n                if (instance.isUnmounted || suspense.isUnmounted) {\r\n                    return;\r\n                }\r\n                suspense.deps--;\r\n                // retry from this component\r\n                instance.asyncResolved = true;\r\n                const { vnode } = instance;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(vnode);\r\n                }\r\n                handleSetupResult(instance, asyncSetupResult);\r\n                if (hydratedEl) {\r\n                    // vnode may have been replaced if an update happened before the\r\n                    // async dep is reoslved.\r\n                    vnode.el = hydratedEl;\r\n                }\r\n                setupRenderEffect(instance, vnode, \r\n                // component may have been moved before resolve.\r\n                // if this is not a hydration, instance.subTree will be the comment\r\n                // placeholder.\r\n                hydratedEl\r\n                    ? parentNode(hydratedEl)\r\n                    : parentNode(instance.subTree.el), \r\n                // anchor will not be used if this is hydration, so only need to\r\n                // consider the comment placeholder case.\r\n                hydratedEl ? null : next(instance.subTree), suspense, isSVG, optimized);\r\n                updateHOCHostEl(instance, vnode.el);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                if (suspense.deps === 0) {\r\n                    suspense.resolve();\r\n                }\r\n            });\r\n        },\r\n        unmount(parentSuspense, doRemove) {\r\n            suspense.isUnmounted = true;\r\n            unmount(suspense.subTree, parentComponent, parentSuspense, doRemove);\r\n            if (!suspense.isResolved) {\r\n                unmount(suspense.fallbackTree, parentComponent, parentSuspense, doRemove);\r\n            }\r\n        }\r\n    };\r\n    return suspense;\r\n}\r\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, optimized, rendererInternals, hydrateNode) {\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, node.parentNode, document.createElement('div'), null, isSVG, optimized, rendererInternals, true /* hydrating */));\r\n    // there are two possible scenarios for server-rendered suspense:\r\n    // - success: ssr content should be fully resolved\r\n    // - failure: ssr content should be the fallback branch.\r\n    // however, on the client we don't really know if it has failed or not\r\n    // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n    // need to construct a suspense boundary first\r\n    const result = hydrateNode(node, suspense.subTree, parentComponent, suspense, optimized);\r\n    if (suspense.deps === 0) {\r\n        suspense.resolve();\r\n    }\r\n    return result;\r\n}\r\nfunction normalizeSuspenseChildren(vnode) {\r\n    const { shapeFlag, children } = vnode;\r\n    if (shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const { default: d, fallback } = children;\r\n        return {\r\n            content: normalizeVNode(isFunction(d) ? d() : d),\r\n            fallback: normalizeVNode(isFunction(fallback) ? fallback() : fallback)\r\n        };\r\n    }\r\n    else {\r\n        return {\r\n            content: normalizeVNode(children),\r\n            fallback: normalizeVNode(null)\r\n        };\r\n    }\r\n}\r\nfunction queueEffectWithSuspense(fn, suspense) {\r\n    if (suspense && !suspense.isResolved) {\r\n        if (isArray(fn)) {\r\n            suspense.effects.push(...fn);\r\n        }\r\n        else {\r\n            suspense.effects.push(fn);\r\n        }\r\n    }\r\n    else {\r\n        queuePostFlushCb(fn);\r\n    }\r\n}\n\nfunction withCtx(fn, ctx = currentRenderingInstance) {\r\n    if (!ctx)\r\n        return fn;\r\n    return function renderFnWithContext() {\r\n        const owner = currentRenderingInstance;\r\n        setCurrentRenderingInstance(ctx);\r\n        const res = fn.apply(null, arguments);\r\n        setCurrentRenderingInstance(owner);\r\n        return res;\r\n    };\r\n}\n\n// SFC scoped style ID management.\r\nlet currentScopeId = null;\r\nconst scopeIdStack = [];\r\nfunction pushScopeId(id) {\r\n    scopeIdStack.push((currentScopeId = id));\r\n}\r\nfunction popScopeId() {\r\n    scopeIdStack.pop();\r\n    currentScopeId = scopeIdStack[scopeIdStack.length - 1] || null;\r\n}\r\nfunction withScopeId(id) {\r\n    return ((fn) => withCtx(function () {\r\n        pushScopeId(id);\r\n        const res = fn.apply(this, arguments);\r\n        popScopeId();\r\n        return res;\r\n    }));\r\n}\n\nconst isTeleport = (type) => type.__isTeleport;\r\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === '');\r\nconst resolveTarget = (props, select) => {\r\n    const targetSelector = props && props.to;\r\n    if (isString(targetSelector)) {\r\n        if (!select) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current renderer does not support string target for Teleports. ` +\r\n                    `(missing querySelector renderer option)`);\r\n            return null;\r\n        }\r\n        else {\r\n            const target = select(targetSelector);\r\n            if (!target) {\r\n                (process.env.NODE_ENV !== 'production') &&\r\n                    warn(`Failed to locate Teleport target with selector \"${targetSelector}\".`);\r\n            }\r\n            return target;\r\n        }\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && !targetSelector) {\r\n            warn(`Invalid Teleport target: ${targetSelector}`);\r\n        }\r\n        return targetSelector;\r\n    }\r\n};\r\nconst TeleportImpl = {\r\n    __isTeleport: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals) {\r\n        const { mc: mountChildren, pc: patchChildren, pbc: patchBlockChildren, o: { insert, querySelector, createText, createComment } } = internals;\r\n        const disabled = isTeleportDisabled(n2.props);\r\n        const { shapeFlag, children } = n2;\r\n        if (n1 == null) {\r\n            // insert anchors in the main view\r\n            const placeholder = (n2.el = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport start')\r\n                : createText(''));\r\n            const mainAnchor = (n2.anchor = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport end')\r\n                : createText(''));\r\n            insert(placeholder, container, anchor);\r\n            insert(mainAnchor, container, anchor);\r\n            const target = (n2.target = resolveTarget(n2.props, querySelector));\r\n            const targetAnchor = (n2.targetAnchor = createText(''));\r\n            if (target) {\r\n                insert(targetAnchor, target);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn('Invalid Teleport target on mount:', target, `(${typeof target})`);\r\n            }\r\n            const mount = (container, anchor) => {\r\n                // Teleport *always* has Array children. This is enforced in both the\r\n                // compiler and vnode children normalization.\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(children, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n            };\r\n            if (disabled) {\r\n                mount(container, mainAnchor);\r\n            }\r\n            else if (target) {\r\n                mount(target, targetAnchor);\r\n            }\r\n        }\r\n        else {\r\n            // update content\r\n            n2.el = n1.el;\r\n            const mainAnchor = (n2.anchor = n1.anchor);\r\n            const target = (n2.target = n1.target);\r\n            const targetAnchor = (n2.targetAnchor = n1.targetAnchor);\r\n            const wasDisabled = isTeleportDisabled(n1.props);\r\n            const currentContainer = wasDisabled ? container : target;\r\n            const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\r\n            if (n2.dynamicChildren) {\r\n                // fast path when the teleport happens to be a block root\r\n                patchBlockChildren(n1.dynamicChildren, n2.dynamicChildren, currentContainer, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else if (!optimized) {\r\n                patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            if (disabled) {\r\n                if (!wasDisabled) {\r\n                    // enabled -> disabled\r\n                    // move into main container\r\n                    moveTeleport(n2, container, mainAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n            else {\r\n                // target changed\r\n                if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n                    const nextTarget = (n2.target = resolveTarget(n2.props, querySelector));\r\n                    if (nextTarget) {\r\n                        moveTeleport(n2, nextTarget, null, internals, 0 /* TARGET_CHANGE */);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Invalid Teleport target on update:', target, `(${typeof target})`);\r\n                    }\r\n                }\r\n                else if (wasDisabled) {\r\n                    // disabled -> enabled\r\n                    // move into teleport target\r\n                    moveTeleport(n2, target, targetAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    remove(vnode, { r: remove, o: { remove: hostRemove } }) {\r\n        const { shapeFlag, children, anchor } = vnode;\r\n        hostRemove(anchor);\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                remove(children[i]);\r\n            }\r\n        }\r\n    },\r\n    move: moveTeleport,\r\n    hydrate: hydrateTeleport\r\n};\r\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2 /* REORDER */) {\r\n    // move target anchor if this is a target change.\r\n    if (moveType === 0 /* TARGET_CHANGE */) {\r\n        insert(vnode.targetAnchor, container, parentAnchor);\r\n    }\r\n    const { el, anchor, shapeFlag, children, props } = vnode;\r\n    const isReorder = moveType === 2 /* REORDER */;\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(el, container, parentAnchor);\r\n    }\r\n    // if this is a re-order and teleport is enabled (content is in target)\r\n    // do not move children. So the opposite is: only move children if this\r\n    // is not a reorder, or the teleport is disabled\r\n    if (!isReorder || isTeleportDisabled(props)) {\r\n        // Teleport has either Array children or no children.\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, parentAnchor, 2 /* REORDER */);\r\n            }\r\n        }\r\n    }\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(anchor, container, parentAnchor);\r\n    }\r\n}\r\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, optimized, { o: { nextSibling, parentNode, querySelector } }, hydrateChildren) {\r\n    const target = (vnode.target = resolveTarget(vnode.props, querySelector));\r\n    if (target) {\r\n        // if multiple teleports rendered to the same target element, we need to\r\n        // pick up from where the last teleport finished instead of the first node\r\n        const targetNode = target._lpa || target.firstChild;\r\n        if (vnode.shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            if (isTeleportDisabled(vnode.props)) {\r\n                vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, optimized);\r\n                vnode.targetAnchor = targetNode;\r\n            }\r\n            else {\r\n                vnode.anchor = nextSibling(node);\r\n                vnode.targetAnchor = hydrateChildren(targetNode, vnode, target, parentComponent, parentSuspense, optimized);\r\n            }\r\n            target._lpa = nextSibling(vnode.targetAnchor);\r\n        }\r\n    }\r\n    return vnode.anchor && nextSibling(vnode.anchor);\r\n}\r\n// Force-casted public typing for h and TSX props inference\r\nconst Teleport = TeleportImpl;\n\nconst Fragment = Symbol((process.env.NODE_ENV !== 'production') ? 'Fragment' : undefined);\r\nconst Text = Symbol((process.env.NODE_ENV !== 'production') ? 'Text' : undefined);\r\nconst Comment = Symbol((process.env.NODE_ENV !== 'production') ? 'Comment' : undefined);\r\nconst Static = Symbol((process.env.NODE_ENV !== 'production') ? 'Static' : undefined);\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nconst blockStack = [];\r\nlet currentBlock = null;\r\n// Open a block.\r\n// This must be called before `createBlock`. It cannot be part of `createBlock`\r\n// because the children of the block are evaluated before `createBlock` itself\r\n// is called. The generated code typically looks like this:\r\n//\r\n//   function render() {\r\n//     return (openBlock(),createBlock('div', null, [...]))\r\n//   }\r\n//\r\n// disableTracking is true when creating a fragment block, since a fragment\r\n// always diffs its children.\r\nfunction openBlock(disableTracking = false) {\r\n    blockStack.push((currentBlock = disableTracking ? null : []));\r\n}\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nlet shouldTrack = 1;\r\n// Block tracking sometimes needs to be disabled, for example during the\r\n// creation of a tree that needs to be cached by v-once. The compiler generates\r\n// code like this:\r\n//   _cache[1] || (\r\n//     setBlockTracking(-1),\r\n//     _cache[1] = createVNode(...),\r\n//     setBlockTracking(1),\r\n//     _cache[1]\r\n//   )\r\nfunction setBlockTracking(value) {\r\n    shouldTrack += value;\r\n}\r\n// Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n// A block root keeps track of dynamic nodes within the block in the\r\n// `dynamicChildren` array.\r\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\r\n    // avoid a block with patchFlag tracking itself\r\n    shouldTrack--;\r\n    const vnode = createVNode(type, props, children, patchFlag, dynamicProps);\r\n    shouldTrack++;\r\n    // save current block children on the block vnode\r\n    vnode.dynamicChildren = currentBlock || EMPTY_ARR;\r\n    // close block\r\n    blockStack.pop();\r\n    currentBlock = blockStack[blockStack.length - 1] || null;\r\n    // a block is always going to be patched, so track it as a child of its\r\n    // parent block\r\n    if (currentBlock) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction isVNode(value) {\r\n    return value ? value._isVNode === true : false;\r\n}\r\nfunction isSameVNodeType(n1, n2) {\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        n2.shapeFlag & 6 /* COMPONENT */ &&\r\n        n2.type.__hmrUpdated) {\r\n        // HMR only: if the component has been hot-updated, force a reload.\r\n        return false;\r\n    }\r\n    return n1.type === n2.type && n1.key === n2.key;\r\n}\r\nlet vnodeArgsTransformer;\r\n// Internal API for registering an arguments transform for createVNode\r\n// used for creating stubs in the test-utils\r\nfunction transformVNodeArgs(transformer) {\r\n    vnodeArgsTransformer = transformer;\r\n}\r\nconst createVNodeWithArgsTransform = (...args) => {\r\n    return _createVNode(...(vnodeArgsTransformer\r\n        ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n        : args));\r\n};\r\nconst InternalObjectKey = `__vInternal`;\r\nconst createVNode = ((process.env.NODE_ENV !== 'production')\r\n    ? createVNodeWithArgsTransform\r\n    : _createVNode);\r\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null) {\r\n    if (!type) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Invalid vnode type when creating vnode: ${type}.`);\r\n        }\r\n        type = Comment;\r\n    }\r\n    // class component normalization.\r\n    if (isFunction(type) && '__vccOpts' in type) {\r\n        type = type.__vccOpts;\r\n    }\r\n    // class & style normalization.\r\n    if (props) {\r\n        // for reactive or proxy objects, we need to clone it to enable mutation.\r\n        if (isProxy(props) || InternalObjectKey in props) {\r\n            props = extend({}, props);\r\n        }\r\n        let { class: klass, style } = props;\r\n        if (klass && !isString(klass)) {\r\n            props.class = normalizeClass(klass);\r\n        }\r\n        if (isObject(style)) {\r\n            // reactive state objects need to be cloned since they are likely to be\r\n            // mutated\r\n            if (isProxy(style) && !isArray(style)) {\r\n                style = extend({}, style);\r\n            }\r\n            props.style = normalizeStyle(style);\r\n        }\r\n    }\r\n    // encode the vnode type information into a bitmap\r\n    const shapeFlag = isString(type)\r\n        ? 1 /* ELEMENT */\r\n        :  isSuspense(type)\r\n            ? 128 /* SUSPENSE */\r\n            : isTeleport(type)\r\n                ? 64 /* TELEPORT */\r\n                : isObject(type)\r\n                    ? 4 /* STATEFUL_COMPONENT */\r\n                    : isFunction(type)\r\n                        ? 2 /* FUNCTIONAL_COMPONENT */\r\n                        : 0;\r\n    if ((process.env.NODE_ENV !== 'production') && shapeFlag & 4 /* STATEFUL_COMPONENT */ && isProxy(type)) {\r\n        type = toRaw(type);\r\n        warn(`Vue received a Component which was made a reactive object. This can ` +\r\n            `lead to unnecessary performance overhead, and should be avoided by ` +\r\n            `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n            `instead of \\`ref\\`.`, `\\nComponent that was made reactive: `, type);\r\n    }\r\n    const vnode = {\r\n        _isVNode: true,\r\n        type,\r\n        props,\r\n        key: props && props.key !== undefined ? props.key : null,\r\n        ref: props && props.ref !== undefined\r\n            ? [currentRenderingInstance, props.ref]\r\n            : null,\r\n        scopeId: currentScopeId,\r\n        children: null,\r\n        component: null,\r\n        suspense: null,\r\n        dirs: null,\r\n        transition: null,\r\n        el: null,\r\n        anchor: null,\r\n        target: null,\r\n        targetAnchor: null,\r\n        shapeFlag,\r\n        patchFlag,\r\n        dynamicProps,\r\n        dynamicChildren: null,\r\n        appContext: null\r\n    };\r\n    normalizeChildren(vnode, children);\r\n    // presence of a patch flag indicates this node needs patching on updates.\r\n    // component nodes also should always be patched, because even if the\r\n    // component doesn't need to update, it needs to persist the instance on to\r\n    // the next vnode so that it can be properly unmounted later.\r\n    if (shouldTrack > 0 &&\r\n        currentBlock &&\r\n        // the EVENTS flag is only for hydration and if it is the only flag, the\r\n        // vnode should not be considered dynamic due to handler caching.\r\n        patchFlag !== 32 /* HYDRATE_EVENTS */ &&\r\n        (patchFlag > 0 ||\r\n            shapeFlag & 128 /* SUSPENSE */ ||\r\n            shapeFlag & 4 /* STATEFUL_COMPONENT */ ||\r\n            shapeFlag & 2 /* FUNCTIONAL_COMPONENT */)) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction cloneVNode(vnode, extraProps) {\r\n    // This is intentionally NOT using spread or extend to avoid the runtime\r\n    // key enumeration cost.\r\n    return {\r\n        _isVNode: true,\r\n        type: vnode.type,\r\n        props: extraProps\r\n            ? vnode.props\r\n                ? mergeProps(vnode.props, extraProps)\r\n                : extend({}, extraProps)\r\n            : vnode.props,\r\n        key: vnode.key,\r\n        ref: vnode.ref,\r\n        scopeId: vnode.scopeId,\r\n        children: vnode.children,\r\n        target: vnode.target,\r\n        targetAnchor: vnode.targetAnchor,\r\n        shapeFlag: vnode.shapeFlag,\r\n        patchFlag: vnode.patchFlag,\r\n        dynamicProps: vnode.dynamicProps,\r\n        dynamicChildren: vnode.dynamicChildren,\r\n        appContext: vnode.appContext,\r\n        dirs: vnode.dirs,\r\n        transition: vnode.transition,\r\n        // These should technically only be non-null on mounted VNodes. However,\r\n        // they *should* be copied for kept-alive vnodes. So we just always copy\r\n        // them since them being non-null during a mount doesn't affect the logic as\r\n        // they will simply be overwritten.\r\n        component: vnode.component,\r\n        suspense: vnode.suspense,\r\n        el: vnode.el,\r\n        anchor: vnode.anchor\r\n    };\r\n}\r\nfunction createTextVNode(text = ' ', flag = 0) {\r\n    return createVNode(Text, null, text, flag);\r\n}\r\nfunction createStaticVNode(content) {\r\n    return createVNode(Static, null, content);\r\n}\r\nfunction createCommentVNode(text = '', \r\n// when used as the v-else branch, the comment node must be created as a\r\n// block to ensure correct updates.\r\nasBlock = false) {\r\n    return asBlock\r\n        ? (openBlock(), createBlock(Comment, null, text))\r\n        : createVNode(Comment, null, text);\r\n}\r\nfunction normalizeVNode(child) {\r\n    if (child == null || typeof child === 'boolean') {\r\n        // empty placeholder\r\n        return createVNode(Comment);\r\n    }\r\n    else if (isArray(child)) {\r\n        // fragment\r\n        return createVNode(Fragment, null, child);\r\n    }\r\n    else if (typeof child === 'object') {\r\n        // already vnode, this should be the most common since compiled templates\r\n        // always produce all-vnode children arrays\r\n        return child.el === null ? child : cloneVNode(child);\r\n    }\r\n    else {\r\n        // strings and numbers\r\n        return createVNode(Text, null, String(child));\r\n    }\r\n}\r\n// optimized normalization for template-compiled render fns\r\nfunction cloneIfMounted(child) {\r\n    return child.el === null ? child : cloneVNode(child);\r\n}\r\nfunction normalizeChildren(vnode, children) {\r\n    let type = 0;\r\n    const { shapeFlag } = vnode;\r\n    if (children == null) {\r\n        children = null;\r\n    }\r\n    else if (isArray(children)) {\r\n        type = 16 /* ARRAY_CHILDREN */;\r\n    }\r\n    else if (typeof children === 'object') {\r\n        // Normalize slot to plain children\r\n        if ((shapeFlag & 1 /* ELEMENT */ || shapeFlag & 64 /* TELEPORT */) &&\r\n            children.default) {\r\n            normalizeChildren(vnode, children.default());\r\n            return;\r\n        }\r\n        else {\r\n            type = 32 /* SLOTS_CHILDREN */;\r\n            if (!children._ && !(InternalObjectKey in children)) {\r\n                children._ctx = currentRenderingInstance;\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(children)) {\r\n        children = { default: children, _ctx: currentRenderingInstance };\r\n        type = 32 /* SLOTS_CHILDREN */;\r\n    }\r\n    else {\r\n        children = String(children);\r\n        // force teleport children to array so it can be moved around\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type = 16 /* ARRAY_CHILDREN */;\r\n            children = [createTextVNode(children)];\r\n        }\r\n        else {\r\n            type = 8 /* TEXT_CHILDREN */;\r\n        }\r\n    }\r\n    vnode.children = children;\r\n    vnode.shapeFlag |= type;\r\n}\r\nconst handlersRE = /^on|^vnode/;\r\nfunction mergeProps(...args) {\r\n    const ret = {};\r\n    extend(ret, args[0]);\r\n    for (let i = 1; i < args.length; i++) {\r\n        const toMerge = args[i];\r\n        for (const key in toMerge) {\r\n            if (key === 'class') {\r\n                if (ret.class !== toMerge.class) {\r\n                    ret.class = normalizeClass([ret.class, toMerge.class]);\r\n                }\r\n            }\r\n            else if (key === 'style') {\r\n                ret.style = normalizeStyle([ret.style, toMerge.style]);\r\n            }\r\n            else if (handlersRE.test(key)) {\r\n                // on*, vnode*\r\n                const existing = ret[key];\r\n                const incoming = toMerge[key];\r\n                if (existing !== incoming) {\r\n                    ret[key] = existing\r\n                        ? [].concat(existing, toMerge[key])\r\n                        : incoming;\r\n                }\r\n            }\r\n            else {\r\n                ret[key] = toMerge[key];\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nfunction emit(instance, event, ...args) {\r\n    const props = instance.vnode.props || EMPTY_OBJ;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const options = normalizeEmitsOptions(instance.type.emits);\r\n        if (options) {\r\n            if (!(event in options)) {\r\n                const propsOptions = normalizePropsOptions(instance.type.props)[0];\r\n                if (!propsOptions || !(`on` + capitalize(event) in propsOptions)) {\r\n                    warn(`Component emitted event \"${event}\" but it is neither declared in ` +\r\n                        `the emits option nor as an \"on${capitalize(event)}\" prop.`);\r\n                }\r\n            }\r\n            else {\r\n                const validator = options[event];\r\n                if (isFunction(validator)) {\r\n                    const isValid = validator(...args);\r\n                    if (!isValid) {\r\n                        warn(`Invalid event arguments: event validation failed for event \"${event}\".`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let handler = props[`on${capitalize(event)}`];\r\n    // for v-model update:xxx events, also trigger kebab-case equivalent\r\n    // for props passed via kebab-case\r\n    if (!handler && event.startsWith('update:')) {\r\n        event = hyphenate(event);\r\n        handler = props[`on${capitalize(event)}`];\r\n    }\r\n    if (handler) {\r\n        callWithAsyncErrorHandling(handler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n}\r\nfunction normalizeEmitsOptions(options) {\r\n    if (!options) {\r\n        return;\r\n    }\r\n    else if (isArray(options)) {\r\n        if (options._n) {\r\n            return options._n;\r\n        }\r\n        const normalized = {};\r\n        options.forEach(key => (normalized[key] = null));\r\n        def(options, '_n', normalized);\r\n        return normalized;\r\n    }\r\n    else {\r\n        return options;\r\n    }\r\n}\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nfunction isEmitListener(emits, key) {\r\n    return (isOn(key) &&\r\n        (hasOwn((emits = normalizeEmitsOptions(emits)), key[2].toLowerCase() + key.slice(3)) ||\r\n            hasOwn(emits, key.slice(2))));\r\n}\n\nfunction initProps(instance, rawProps, isStateful, // result of bitwise flag comparison\r\nisSSR = false) {\r\n    const props = {};\r\n    const attrs = {};\r\n    def(attrs, InternalObjectKey, 1);\r\n    setFullProps(instance, rawProps, props, attrs);\r\n    const options = instance.type.props;\r\n    // validation\r\n    if ((process.env.NODE_ENV !== 'production') && options && rawProps) {\r\n        validateProps(props, options);\r\n    }\r\n    if (isStateful) {\r\n        // stateful\r\n        instance.props = isSSR ? props : shallowReactive(props);\r\n    }\r\n    else {\r\n        if (!options) {\r\n            // functional w/ optional props, props === attrs\r\n            instance.props = attrs;\r\n        }\r\n        else {\r\n            // functional w/ declared props\r\n            instance.props = props;\r\n        }\r\n    }\r\n    instance.attrs = attrs;\r\n}\r\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\r\n    const { props, attrs, vnode: { patchFlag } } = instance;\r\n    const rawOptions = instance.type.props;\r\n    const rawCurrentProps = toRaw(props);\r\n    const { 0: options } = normalizePropsOptions(rawOptions);\r\n    if ((optimized || patchFlag > 0) && !(patchFlag & 16 /* FULL_PROPS */)) {\r\n        if (patchFlag & 8 /* PROPS */) {\r\n            // Compiler-generated props & no keys change, just set the updated\r\n            // the props.\r\n            const propsToUpdate = instance.vnode.dynamicProps;\r\n            for (let i = 0; i < propsToUpdate.length; i++) {\r\n                const key = propsToUpdate[i];\r\n                // PROPS flag guarantees rawProps to be non-null\r\n                const value = rawProps[key];\r\n                if (options) {\r\n                    // attr / props separation was done on init and will be consistent\r\n                    // in this code path, so just check if attrs have it.\r\n                    if (hasOwn(attrs, key)) {\r\n                        attrs[key] = value;\r\n                    }\r\n                    else {\r\n                        const camelizedKey = camelize(key);\r\n                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value);\r\n                    }\r\n                }\r\n                else {\r\n                    attrs[key] = value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // full props update.\r\n        setFullProps(instance, rawProps, props, attrs);\r\n        // in case of dynamic props, check if we need to delete keys from\r\n        // the props object\r\n        let kebabKey;\r\n        for (const key in rawCurrentProps) {\r\n            if (!rawProps ||\r\n                (!hasOwn(rawProps, key) &&\r\n                    // it's possible the original props was passed in as kebab-case\r\n                    // and converted to camelCase (#955)\r\n                    ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))) {\r\n                if (options) {\r\n                    if (rawPrevProps && rawPrevProps[kebabKey] !== undefined) {\r\n                        props[key] = resolvePropValue(options, rawProps || EMPTY_OBJ, key, undefined);\r\n                    }\r\n                }\r\n                else {\r\n                    delete props[key];\r\n                }\r\n            }\r\n        }\r\n        // in the case of functional component w/o props declaration, props and\r\n        // attrs point to the same object so it should already have been updated.\r\n        if (attrs !== rawCurrentProps) {\r\n            for (const key in attrs) {\r\n                if (!rawProps || !hasOwn(rawProps, key)) {\r\n                    delete attrs[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && rawOptions && rawProps) {\r\n        validateProps(props, rawOptions);\r\n    }\r\n}\r\nfunction setFullProps(instance, rawProps, props, attrs) {\r\n    const { 0: options, 1: needCastKeys } = normalizePropsOptions(instance.type.props);\r\n    const emits = instance.type.emits;\r\n    if (rawProps) {\r\n        for (const key in rawProps) {\r\n            const value = rawProps[key];\r\n            // key, ref are reserved and never passed down\r\n            if (isReservedProp(key)) {\r\n                continue;\r\n            }\r\n            // prop option names are camelized during normalization, so to support\r\n            // kebab -> camel conversion here we need to camelize the key.\r\n            let camelKey;\r\n            if (options && hasOwn(options, (camelKey = camelize(key)))) {\r\n                props[camelKey] = value;\r\n            }\r\n            else if (!emits || !isEmitListener(emits, key)) {\r\n                // Any non-declared (either as a prop or an emitted event) props are put\r\n                // into a separate `attrs` object for spreading. Make sure to preserve\r\n                // original key casing\r\n                attrs[key] = value;\r\n            }\r\n        }\r\n    }\r\n    if (needCastKeys) {\r\n        const rawCurrentProps = toRaw(props);\r\n        for (let i = 0; i < needCastKeys.length; i++) {\r\n            const key = needCastKeys[i];\r\n            props[key] = resolvePropValue(options, rawCurrentProps, key, rawCurrentProps[key]);\r\n        }\r\n    }\r\n}\r\nfunction resolvePropValue(options, props, key, value) {\r\n    const opt = options[key];\r\n    if (opt != null) {\r\n        const hasDefault = hasOwn(opt, 'default');\r\n        // default values\r\n        if (hasDefault && value === undefined) {\r\n            const defaultValue = opt.default;\r\n            value = isFunction(defaultValue) ? defaultValue() : defaultValue;\r\n        }\r\n        // boolean casting\r\n        if (opt[0 /* shouldCast */]) {\r\n            if (!hasOwn(props, key) && !hasDefault) {\r\n                value = false;\r\n            }\r\n            else if (opt[1 /* shouldCastTrue */] &&\r\n                (value === '' || value === hyphenate(key))) {\r\n                value = true;\r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\nfunction normalizePropsOptions(raw) {\r\n    if (!raw) {\r\n        return EMPTY_ARR;\r\n    }\r\n    if (raw._n) {\r\n        return raw._n;\r\n    }\r\n    const normalized = {};\r\n    const needCastKeys = [];\r\n    if (isArray(raw)) {\r\n        for (let i = 0; i < raw.length; i++) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isString(raw[i])) {\r\n                warn(`props must be strings when using array syntax.`, raw[i]);\r\n            }\r\n            const normalizedKey = camelize(raw[i]);\r\n            if (validatePropName(normalizedKey)) {\r\n                normalized[normalizedKey] = EMPTY_OBJ;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && !isObject(raw)) {\r\n            warn(`invalid props options`, raw);\r\n        }\r\n        for (const key in raw) {\r\n            const normalizedKey = camelize(key);\r\n            if (validatePropName(normalizedKey)) {\r\n                const opt = raw[key];\r\n                const prop = (normalized[normalizedKey] =\r\n                    isArray(opt) || isFunction(opt) ? { type: opt } : opt);\r\n                if (prop) {\r\n                    const booleanIndex = getTypeIndex(Boolean, prop.type);\r\n                    const stringIndex = getTypeIndex(String, prop.type);\r\n                    prop[0 /* shouldCast */] = booleanIndex > -1;\r\n                    prop[1 /* shouldCastTrue */] =\r\n                        stringIndex < 0 || booleanIndex < stringIndex;\r\n                    // if the prop needs boolean casting or default value\r\n                    if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n                        needCastKeys.push(normalizedKey);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const normalizedEntry = [normalized, needCastKeys];\r\n    def(raw, '_n', normalizedEntry);\r\n    return normalizedEntry;\r\n}\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor) {\r\n    const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/);\r\n    return match ? match[1] : '';\r\n}\r\nfunction isSameType(a, b) {\r\n    return getType(a) === getType(b);\r\n}\r\nfunction getTypeIndex(type, expectedTypes) {\r\n    if (isArray(expectedTypes)) {\r\n        for (let i = 0, len = expectedTypes.length; i < len; i++) {\r\n            if (isSameType(expectedTypes[i], type)) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(expectedTypes)) {\r\n        return isSameType(expectedTypes, type) ? 0 : -1;\r\n    }\r\n    return -1;\r\n}\r\nfunction validateProps(props, rawOptions) {\r\n    const rawValues = toRaw(props);\r\n    const options = normalizePropsOptions(rawOptions)[0];\r\n    for (const key in options) {\r\n        let opt = options[key];\r\n        if (opt == null)\r\n            continue;\r\n        validateProp(key, rawValues[key], opt, !hasOwn(rawValues, key));\r\n    }\r\n}\r\nfunction validatePropName(key) {\r\n    if (key[0] !== '$') {\r\n        return true;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid prop name: \"${key}\" is a reserved property.`);\r\n    }\r\n    return false;\r\n}\r\nfunction validateProp(name, value, prop, isAbsent) {\r\n    const { type, required, validator } = prop;\r\n    // required!\r\n    if (required && isAbsent) {\r\n        warn('Missing required prop: \"' + name + '\"');\r\n        return;\r\n    }\r\n    // missing but optional\r\n    if (value == null && !prop.required) {\r\n        return;\r\n    }\r\n    // type check\r\n    if (type != null && type !== true) {\r\n        let isValid = false;\r\n        const types = isArray(type) ? type : [type];\r\n        const expectedTypes = [];\r\n        // value is valid as long as one of the specified types match\r\n        for (let i = 0; i < types.length && !isValid; i++) {\r\n            const { valid, expectedType } = assertType(value, types[i]);\r\n            expectedTypes.push(expectedType || '');\r\n            isValid = valid;\r\n        }\r\n        if (!isValid) {\r\n            warn(getInvalidTypeMessage(name, value, expectedTypes));\r\n            return;\r\n        }\r\n    }\r\n    // custom validator\r\n    if (validator && !validator(value)) {\r\n        warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\r\n    }\r\n}\r\nconst isSimpleType = /*#__PURE__*/ makeMap('String,Number,Boolean,Function,Symbol');\r\nfunction assertType(value, type) {\r\n    let valid;\r\n    const expectedType = getType(type);\r\n    if (isSimpleType(expectedType)) {\r\n        const t = typeof value;\r\n        valid = t === expectedType.toLowerCase();\r\n        // for primitive wrapper objects\r\n        if (!valid && t === 'object') {\r\n            valid = value instanceof type;\r\n        }\r\n    }\r\n    else if (expectedType === 'Object') {\r\n        valid = toRawType(value) === 'Object';\r\n    }\r\n    else if (expectedType === 'Array') {\r\n        valid = isArray(value);\r\n    }\r\n    else {\r\n        valid = value instanceof type;\r\n    }\r\n    return {\r\n        valid,\r\n        expectedType\r\n    };\r\n}\r\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\r\n    let message = `Invalid prop: type check failed for prop \"${name}\".` +\r\n        ` Expected ${expectedTypes.map(capitalize).join(', ')}`;\r\n    const expectedType = expectedTypes[0];\r\n    const receivedType = toRawType(value);\r\n    const expectedValue = styleValue(value, expectedType);\r\n    const receivedValue = styleValue(value, receivedType);\r\n    // check if we need to specify expected value\r\n    if (expectedTypes.length === 1 &&\r\n        isExplicable(expectedType) &&\r\n        !isBoolean(expectedType, receivedType)) {\r\n        message += ` with value ${expectedValue}`;\r\n    }\r\n    message += `, got ${receivedType} `;\r\n    // check if we need to specify received value\r\n    if (isExplicable(receivedType)) {\r\n        message += `with value ${receivedValue}.`;\r\n    }\r\n    return message;\r\n}\r\nfunction styleValue(value, type) {\r\n    if (type === 'String') {\r\n        return `\"${value}\"`;\r\n    }\r\n    else if (type === 'Number') {\r\n        return `${Number(value)}`;\r\n    }\r\n    else {\r\n        return `${value}`;\r\n    }\r\n}\r\nfunction isExplicable(type) {\r\n    const explicitTypes = ['string', 'number', 'boolean'];\r\n    return explicitTypes.some(elem => type.toLowerCase() === elem);\r\n}\r\nfunction isBoolean(...args) {\r\n    return args.some(elem => elem.toLowerCase() === 'boolean');\r\n}\n\nconst isInternalKey = (key) => key[0] === '_' || key === '$stable';\r\nconst normalizeSlotValue = (value) => isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value)];\r\nconst normalizeSlot = (key, rawSlot, ctx) => withCtx((props) => {\r\n    if ((process.env.NODE_ENV !== 'production') && currentInstance) {\r\n        warn(`Slot \"${key}\" invoked outside of the render function: ` +\r\n            `this will not track dependencies used in the slot. ` +\r\n            `Invoke the slot function inside the render function instead.`);\r\n    }\r\n    return normalizeSlotValue(rawSlot(props));\r\n}, ctx);\r\nconst normalizeObjectSlots = (rawSlots, slots) => {\r\n    const ctx = rawSlots._ctx;\r\n    for (const key in rawSlots) {\r\n        if (isInternalKey(key))\r\n            continue;\r\n        const value = rawSlots[key];\r\n        if (isFunction(value)) {\r\n            slots[key] = normalizeSlot(key, value, ctx);\r\n        }\r\n        else if (value != null) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Non-function value encountered for slot \"${key}\". ` +\r\n                    `Prefer function slots for better performance.`);\r\n            }\r\n            const normalized = normalizeSlotValue(value);\r\n            slots[key] = () => normalized;\r\n        }\r\n    }\r\n};\r\nconst normalizeVNodeSlots = (instance, children) => {\r\n    if ((process.env.NODE_ENV !== 'production') && !isKeepAlive(instance.vnode)) {\r\n        warn(`Non-function value encountered for default slot. ` +\r\n            `Prefer function slots for better performance.`);\r\n    }\r\n    const normalized = normalizeSlotValue(children);\r\n    instance.slots.default = () => normalized;\r\n};\r\nconst initSlots = (instance, children) => {\r\n    if (instance.vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        if (children._ === 1) {\r\n            instance.slots = children;\r\n        }\r\n        else {\r\n            normalizeObjectSlots(children, (instance.slots = {}));\r\n        }\r\n    }\r\n    else {\r\n        instance.slots = {};\r\n        if (children) {\r\n            normalizeVNodeSlots(instance, children);\r\n        }\r\n    }\r\n    def(instance.slots, InternalObjectKey, 1);\r\n};\r\nconst updateSlots = (instance, children) => {\r\n    const { vnode, slots } = instance;\r\n    let needDeletionCheck = true;\r\n    let deletionComparisonTarget = EMPTY_OBJ;\r\n    if (vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        if (children._ === 1) {\r\n            // compiled slots.\r\n            if (\r\n            // bail on dynamic slots (v-if, v-for, reference of scope variables)\r\n            !(vnode.patchFlag & 1024 /* DYNAMIC_SLOTS */) &&\r\n                // bail on HRM updates\r\n                !((process.env.NODE_ENV !== 'production') && instance.parent && instance.parent.renderUpdated)) {\r\n                // compiled AND static.\r\n                // no need to update, and skip stale slots removal.\r\n                needDeletionCheck = false;\r\n            }\r\n            else {\r\n                // compiled but dynamic - update slots, but skip normalization.\r\n                extend(slots, children);\r\n            }\r\n        }\r\n        else {\r\n            needDeletionCheck = !children.$stable;\r\n            normalizeObjectSlots(children, slots);\r\n        }\r\n        deletionComparisonTarget = children;\r\n    }\r\n    else if (children) {\r\n        // non slot object children (direct value) passed to a component\r\n        normalizeVNodeSlots(instance, children);\r\n        deletionComparisonTarget = { default: 1 };\r\n    }\r\n    // delete stale slots\r\n    if (needDeletionCheck) {\r\n        for (const key in slots) {\r\n            if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n                delete slots[key];\r\n            }\r\n        }\r\n    }\r\n};\n\n/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\nconst isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text');\r\nfunction validateDirectiveName(name) {\r\n    if (isBuiltInDirective(name)) {\r\n        warn('Do not use built-in directive ids as custom directive id: ' + name);\r\n    }\r\n}\r\nfunction withDirectives(vnode, directives) {\r\n    const internalInstance = currentRenderingInstance;\r\n    if (internalInstance === null) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`withDirectives can only be used inside render functions.`);\r\n        return vnode;\r\n    }\r\n    const instance = internalInstance.proxy;\r\n    const bindings = vnode.dirs || (vnode.dirs = []);\r\n    for (let i = 0; i < directives.length; i++) {\r\n        let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];\r\n        if (isFunction(dir)) {\r\n            dir = {\r\n                mounted: dir,\r\n                updated: dir\r\n            };\r\n        }\r\n        bindings.push({\r\n            dir,\r\n            instance,\r\n            value,\r\n            oldValue: void 0,\r\n            arg,\r\n            modifiers\r\n        });\r\n    }\r\n    return vnode;\r\n}\r\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\r\n    const bindings = vnode.dirs;\r\n    const oldBindings = prevVNode && prevVNode.dirs;\r\n    for (let i = 0; i < bindings.length; i++) {\r\n        const binding = bindings[i];\r\n        if (oldBindings) {\r\n            binding.oldValue = oldBindings[i].value;\r\n        }\r\n        const hook = binding.dir[name];\r\n        if (hook) {\r\n            callWithAsyncErrorHandling(hook, instance, 8 /* DIRECTIVE_HOOK */, [\r\n                vnode.el,\r\n                binding,\r\n                vnode,\r\n                prevVNode\r\n            ]);\r\n        }\r\n    }\r\n}\n\nfunction createAppContext() {\r\n    return {\r\n        config: {\r\n            isNativeTag: NO,\r\n            devtools: true,\r\n            performance: false,\r\n            globalProperties: {},\r\n            optionMergeStrategies: {},\r\n            isCustomElement: NO,\r\n            errorHandler: undefined,\r\n            warnHandler: undefined\r\n        },\r\n        mixins: [],\r\n        components: {},\r\n        directives: {},\r\n        provides: Object.create(null)\r\n    };\r\n}\r\nfunction createAppAPI(render, hydrate) {\r\n    return function createApp(rootComponent, rootProps = null) {\r\n        if (rootProps != null && !isObject(rootProps)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`root props passed to app.mount() must be an object.`);\r\n            rootProps = null;\r\n        }\r\n        const context = createAppContext();\r\n        const installedPlugins = new Set();\r\n        let isMounted = false;\r\n        const app = {\r\n            _component: rootComponent,\r\n            _props: rootProps,\r\n            _container: null,\r\n            _context: context,\r\n            get config() {\r\n                return context.config;\r\n            },\r\n            set config(v) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`app.config cannot be replaced. Modify individual options instead.`);\r\n                }\r\n            },\r\n            use(plugin, ...options) {\r\n                if (installedPlugins.has(plugin)) {\r\n                    (process.env.NODE_ENV !== 'production') && warn(`Plugin has already been applied to target app.`);\r\n                }\r\n                else if (plugin && isFunction(plugin.install)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin.install(app, ...options);\r\n                }\r\n                else if (isFunction(plugin)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin(app, ...options);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`A plugin must either be a function or an object with an \"install\" ` +\r\n                        `function.`);\r\n                }\r\n                return app;\r\n            },\r\n            mixin(mixin) {\r\n                {\r\n                    if (!context.mixins.includes(mixin)) {\r\n                        context.mixins.push(mixin);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Mixin has already been applied to target app' +\r\n                            (mixin.name ? `: ${mixin.name}` : ''));\r\n                    }\r\n                }\r\n                return app;\r\n            },\r\n            component(name, component) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateComponentName(name, context.config);\r\n                }\r\n                if (!component) {\r\n                    return context.components[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.components[name]) {\r\n                    warn(`Component \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.components[name] = component;\r\n                return app;\r\n            },\r\n            directive(name, directive) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateDirectiveName(name);\r\n                }\r\n                if (!directive) {\r\n                    return context.directives[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.directives[name]) {\r\n                    warn(`Directive \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.directives[name] = directive;\r\n                return app;\r\n            },\r\n            mount(rootContainer, isHydrate) {\r\n                if (!isMounted) {\r\n                    const vnode = createVNode(rootComponent, rootProps);\r\n                    // store app context on the root VNode.\r\n                    // this will be set on the root instance on initial mount.\r\n                    vnode.appContext = context;\r\n                    // HMR root reload\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        context.reload = () => {\r\n                            render(cloneVNode(vnode), rootContainer);\r\n                        };\r\n                    }\r\n                    if (isHydrate && hydrate) {\r\n                        hydrate(vnode, rootContainer);\r\n                    }\r\n                    else {\r\n                        render(vnode, rootContainer);\r\n                    }\r\n                    isMounted = true;\r\n                    app._container = rootContainer;\r\n                    return vnode.component.proxy;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`App has already been mounted. Create a new app instance instead.`);\r\n                }\r\n            },\r\n            unmount() {\r\n                if (isMounted) {\r\n                    render(null, app._container);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`Cannot unmount an app that is not mounted.`);\r\n                }\r\n            },\r\n            provide(key, value) {\r\n                if ((process.env.NODE_ENV !== 'production') && key in context.provides) {\r\n                    warn(`App already provides property with key \"${key}\". ` +\r\n                        `It will be overwritten with the new value.`);\r\n                }\r\n                // TypeScript doesn't allow symbols as index type\r\n                // https://github.com/Microsoft/TypeScript/issues/24587\r\n                context.provides[key] = value;\r\n                return app;\r\n            }\r\n        };\r\n        return app;\r\n    };\r\n}\n\n// Expose the HMR runtime on the global object\r\n// This makes it entirely tree-shakable without polluting the exports and makes\r\n// it easier to be used in toolings like vue-loader\r\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\r\n// to be set so that its instances can be registered / removed.\r\nif ((process.env.NODE_ENV !== 'production')) {\r\n    const globalObject = typeof global !== 'undefined'\r\n        ? global\r\n        : typeof self !== 'undefined'\r\n            ? self\r\n            : typeof window !== 'undefined'\r\n                ? window\r\n                : {};\r\n    globalObject.__VUE_HMR_RUNTIME__ = {\r\n        createRecord: tryWrap(createRecord),\r\n        rerender: tryWrap(rerender),\r\n        reload: tryWrap(reload)\r\n    };\r\n}\r\nconst map = new Map();\r\nfunction registerHMR(instance) {\r\n    const id = instance.type.__hmrId;\r\n    let record = map.get(id);\r\n    if (!record) {\r\n        createRecord(id, instance.type);\r\n        record = map.get(id);\r\n    }\r\n    record.instances.add(instance);\r\n}\r\nfunction unregisterHMR(instance) {\r\n    map.get(instance.type.__hmrId).instances.delete(instance);\r\n}\r\nfunction createRecord(id, comp) {\r\n    if (map.has(id)) {\r\n        return false;\r\n    }\r\n    map.set(id, {\r\n        comp,\r\n        instances: new Set()\r\n    });\r\n    return true;\r\n}\r\nfunction rerender(id, newRender) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    Array.from(record.instances).forEach(instance => {\r\n        if (newRender) {\r\n            instance.render = newRender;\r\n        }\r\n        instance.renderCache = [];\r\n        // this flag forces child components with slot content to update\r\n        instance.renderUpdated = true;\r\n        instance.update();\r\n        instance.renderUpdated = false;\r\n    });\r\n}\r\nfunction reload(id, newComp) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    // 1. Update existing comp definition to match new one\r\n    const comp = record.comp;\r\n    Object.assign(comp, newComp);\r\n    for (const key in comp) {\r\n        if (!(key in newComp)) {\r\n            delete comp[key];\r\n        }\r\n    }\r\n    // 2. Mark component dirty. This forces the renderer to replace the component\r\n    // on patch.\r\n    comp.__hmrUpdated = true;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    Array.from(record.instances).forEach(instance => {\r\n        if (instance.parent) {\r\n            // 3. Force the parent instance to re-render. This will cause all updated\r\n            // components to be unmounted and re-mounted. Queue the update so that we\r\n            // don't end up forcing the same parent to re-render multiple times.\r\n            queueJob(instance.parent.update);\r\n        }\r\n        else if (instance.appContext.reload) {\r\n            // root instance mounted via createApp() has a reload method\r\n            instance.appContext.reload();\r\n        }\r\n        else if (typeof window !== 'undefined') {\r\n            // root instance inside tree created via raw render(). Force reload.\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');\r\n        }\r\n    });\r\n    // 4. Make sure to unmark the component after the reload.\r\n    queuePostFlushCb(() => {\r\n        comp.__hmrUpdated = false;\r\n    });\r\n}\r\nfunction tryWrap(fn) {\r\n    return (id, arg) => {\r\n        try {\r\n            return fn(id, arg);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` +\r\n                `Full reload required.`);\r\n        }\r\n    };\r\n}\n\nlet hasMismatch = false;\r\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== 'foreignObject';\r\nconst isComment = (node) => node.nodeType === 8 /* COMMENT */;\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nfunction createHydrationFunctions(rendererInternals) {\r\n    const { mt: mountComponent, p: patch, o: { patchProp, nextSibling, parentNode, remove, insert, createComment } } = rendererInternals;\r\n    const hydrate = (vnode, container) => {\r\n        if ((process.env.NODE_ENV !== 'production') && !container.hasChildNodes()) {\r\n            warn(`Attempting to hydrate existing markup but container is empty. ` +\r\n                `Performing full mount instead.`);\r\n            patch(null, vnode, container);\r\n            return;\r\n        }\r\n        hasMismatch = false;\r\n        hydrateNode(container.firstChild, vnode, null, null);\r\n        flushPostFlushCbs();\r\n        if (hasMismatch && !false) {\r\n            // this error should show up in production\r\n            console.error(`Hydration completed but contains mismatches.`);\r\n        }\r\n    };\r\n    const hydrateNode = (node, vnode, parentComponent, parentSuspense, optimized = false) => {\r\n        const isFragmentStart = isComment(node) && node.data === '[';\r\n        const onMismatch = () => handleMismtach(node, vnode, parentComponent, parentSuspense, isFragmentStart);\r\n        const { type, shapeFlag } = vnode;\r\n        const domType = node.nodeType;\r\n        vnode.el = node;\r\n        switch (type) {\r\n            case Text:\r\n                if (domType !== 3 /* TEXT */) {\r\n                    return onMismatch();\r\n                }\r\n                if (node.data !== vnode.children) {\r\n                    hasMismatch = true;\r\n                    (process.env.NODE_ENV !== 'production') &&\r\n                        warn(`Hydration text mismatch:` +\r\n                            `\\n- Client: ${JSON.stringify(vnode.children)}`, `\\n- Server: ${JSON.stringify(node.data)}`);\r\n                    node.data = vnode.children;\r\n                }\r\n                return nextSibling(node);\r\n            case Comment:\r\n                if (domType !== 8 /* COMMENT */ || isFragmentStart) {\r\n                    return onMismatch();\r\n                }\r\n                return nextSibling(node);\r\n            case Static:\r\n                if (domType !== 1 /* ELEMENT */) {\r\n                    return onMismatch();\r\n                }\r\n                return nextSibling(node);\r\n            case Fragment:\r\n                if (!isFragmentStart) {\r\n                    return onMismatch();\r\n                }\r\n                return hydrateFragment(node, vnode, parentComponent, parentSuspense, optimized);\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    if (domType !== 1 /* ELEMENT */ ||\r\n                        vnode.type !== node.tagName.toLowerCase()) {\r\n                        return onMismatch();\r\n                    }\r\n                    return hydrateElement(node, vnode, parentComponent, parentSuspense, optimized);\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    // when setting up the render effect, if the initial vnode already\r\n                    // has .el set, the component will perform hydration instead of mount\r\n                    // on its sub-tree.\r\n                    const container = parentNode(node);\r\n                    const hydrateComponent = () => {\r\n                        mountComponent(vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), optimized);\r\n                    };\r\n                    // async component\r\n                    const loadAsync = vnode.type.__asyncLoader;\r\n                    if (loadAsync) {\r\n                        loadAsync().then(hydrateComponent);\r\n                    }\r\n                    else {\r\n                        hydrateComponent();\r\n                    }\r\n                    // component may be async, so in the case of fragments we cannot rely\r\n                    // on component's rendered output to determine the end of the fragment\r\n                    // instead, we do a lookahead to find the end anchor node.\r\n                    return isFragmentStart\r\n                        ? locateClosingAsyncAnchor(node)\r\n                        : nextSibling(node);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    if (domType !== 8 /* COMMENT */) {\r\n                        return onMismatch();\r\n                    }\r\n                    return vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, optimized, rendererInternals, hydrateChildren);\r\n                }\r\n                else if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                    return vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, isSVGContainer(parentNode(node)), optimized, rendererInternals, hydrateNode);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid HostVNode type:', type, `(${typeof type})`);\r\n                }\r\n                return null;\r\n        }\r\n    };\r\n    const hydrateElement = (el, vnode, parentComponent, parentSuspense, optimized) => {\r\n        optimized = optimized || !!vnode.dynamicChildren;\r\n        const { props, patchFlag, shapeFlag, dirs } = vnode;\r\n        // skip props & children if this is hoisted static nodes\r\n        if (patchFlag !== -1 /* HOISTED */) {\r\n            // props\r\n            if (props) {\r\n                if (!optimized ||\r\n                    (patchFlag & 16 /* FULL_PROPS */ ||\r\n                        patchFlag & 32 /* HYDRATE_EVENTS */)) {\r\n                    for (const key in props) {\r\n                        if (!isReservedProp(key) && isOn(key)) {\r\n                            patchProp(el, key, null, props[key]);\r\n                        }\r\n                    }\r\n                }\r\n                else if (props.onClick) {\r\n                    // Fast path for click listeners (which is most often) to avoid\r\n                    // iterating through props.\r\n                    patchProp(el, 'onClick', null, props.onClick);\r\n                }\r\n            }\r\n            // vnode / directive hooks\r\n            let vnodeHooks;\r\n            if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n                invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n            }\r\n            if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n                queueEffectWithSuspense(() => {\r\n                    vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n                    dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n                }, parentSuspense);\r\n            }\r\n            // children\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */ &&\r\n                // skip if element has innerHTML / textContent\r\n                !(props && (props.innerHTML || props.textContent))) {\r\n                let next = hydrateChildren(el.firstChild, vnode, el, parentComponent, parentSuspense, optimized);\r\n                let hasWarned = false;\r\n                while (next) {\r\n                    hasMismatch = true;\r\n                    if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                        warn(`Hydration children mismatch in <${vnode.type}>: ` +\r\n                            `server rendered element contains more child nodes than client vdom.`);\r\n                        hasWarned = true;\r\n                    }\r\n                    // The SSRed DOM contains more nodes than it should. Remove them.\r\n                    const cur = next;\r\n                    next = next.nextSibling;\r\n                    remove(cur);\r\n                }\r\n            }\r\n            else if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                if (el.textContent !== vnode.children) {\r\n                    hasMismatch = true;\r\n                    (process.env.NODE_ENV !== 'production') &&\r\n                        warn(`Hydration text content mismatch in <${vnode.type}>:\\n` +\r\n                            `- Client: ${el.textContent}\\n` +\r\n                            `- Server: ${vnode.children}`);\r\n                    el.textContent = vnode.children;\r\n                }\r\n            }\r\n        }\r\n        return el.nextSibling;\r\n    };\r\n    const hydrateChildren = (node, vnode, container, parentComponent, parentSuspense, optimized) => {\r\n        optimized = optimized || !!vnode.dynamicChildren;\r\n        const children = vnode.children;\r\n        const l = children.length;\r\n        let hasWarned = false;\r\n        for (let i = 0; i < l; i++) {\r\n            const vnode = optimized\r\n                ? children[i]\r\n                : (children[i] = normalizeVNode(children[i]));\r\n            if (node) {\r\n                node = hydrateNode(node, vnode, parentComponent, parentSuspense, optimized);\r\n            }\r\n            else {\r\n                hasMismatch = true;\r\n                if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                    warn(`Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n                        `server rendered element contains fewer child nodes than client vdom.`);\r\n                    hasWarned = true;\r\n                }\r\n                // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n                patch(null, vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container));\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    const hydrateFragment = (node, vnode, parentComponent, parentSuspense, optimized) => {\r\n        const container = parentNode(node);\r\n        const next = hydrateChildren(nextSibling(node), vnode, container, parentComponent, parentSuspense, optimized);\r\n        if (next && isComment(next) && next.data === ']') {\r\n            return nextSibling((vnode.anchor = next));\r\n        }\r\n        else {\r\n            // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n            // back. This should have led to node/children mismatch warnings.\r\n            hasMismatch = true;\r\n            // since the anchor is missing, we need to create one and insert it\r\n            insert((vnode.anchor = createComment(`]`)), container, next);\r\n            return next;\r\n        }\r\n    };\r\n    const handleMismtach = (node, vnode, parentComponent, parentSuspense, isFragment) => {\r\n        hasMismatch = true;\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`Hydration node mismatch:\\n- Client vnode:`, vnode.type, `\\n- Server rendered DOM:`, node, node.nodeType === 3 /* TEXT */\r\n                ? `(text)`\r\n                : isComment(node) && node.data === '['\r\n                    ? `(start of fragment)`\r\n                    : ``);\r\n        vnode.el = null;\r\n        if (isFragment) {\r\n            // remove excessive fragment nodes\r\n            const end = locateClosingAsyncAnchor(node);\r\n            while (true) {\r\n                const next = nextSibling(node);\r\n                if (next && next !== end) {\r\n                    remove(next);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const next = nextSibling(node);\r\n        const container = parentNode(node);\r\n        remove(node);\r\n        patch(null, vnode, container, next, parentComponent, parentSuspense, isSVGContainer(container));\r\n        return next;\r\n    };\r\n    const locateClosingAsyncAnchor = (node) => {\r\n        let match = 0;\r\n        while (node) {\r\n            node = nextSibling(node);\r\n            if (node && isComment(node)) {\r\n                if (node.data === '[')\r\n                    match++;\r\n                if (node.data === ']') {\r\n                    if (match === 0) {\r\n                        return nextSibling(node);\r\n                    }\r\n                    else {\r\n                        match--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    return [hydrate, hydrateNode];\r\n}\n\nlet supported;\r\nlet perf;\r\nfunction startMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        perf.mark(`vue-${type}-${instance.uid}`);\r\n    }\r\n}\r\nfunction endMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        const startTag = `vue-${type}-${instance.uid}`;\r\n        const endTag = startTag + `:end`;\r\n        perf.mark(endTag);\r\n        perf.measure(`<${formatComponentName(instance.type)}> ${type}`, startTag, endTag);\r\n        perf.clearMarks(startTag);\r\n        perf.clearMarks(endTag);\r\n    }\r\n}\r\nfunction isSupported() {\r\n    if (supported !== undefined) {\r\n        return supported;\r\n    }\r\n    if (typeof window !== 'undefined' && window.performance) {\r\n        supported = true;\r\n        perf = window.performance;\r\n    }\r\n    else {\r\n        supported = false;\r\n    }\r\n    return supported;\r\n}\n\nconst prodEffectOptions = {\r\n    scheduler: queueJob\r\n};\r\nfunction createDevEffectOptions(instance) {\r\n    return {\r\n        scheduler: queueJob,\r\n        onTrack: instance.rtc ? e => invokeArrayFns(instance.rtc, e) : void 0,\r\n        onTrigger: instance.rtg ? e => invokeArrayFns(instance.rtg, e) : void 0\r\n    };\r\n}\r\nconst queuePostRenderEffect =  queueEffectWithSuspense\r\n    ;\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nfunction createRenderer(options) {\r\n    return baseCreateRenderer(options);\r\n}\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nfunction createHydrationRenderer(options) {\r\n    return baseCreateRenderer(options, createHydrationFunctions);\r\n}\r\n// implementation\r\nfunction baseCreateRenderer(options, createHydrationFns) {\r\n    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = NOOP, cloneNode: hostCloneNode, insertStaticContent: hostInsertStaticContent } = options;\r\n    // Note: functions inside this closure should use `const xxx = () => {}`\r\n    // style in order to prevent being inlined by minifiers.\r\n    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, optimized = false) => {\r\n        // patching & not same type, unmount old tree\r\n        if (n1 && !isSameVNodeType(n1, n2)) {\r\n            anchor = getNextHostNode(n1);\r\n            unmount(n1, parentComponent, parentSuspense, true);\r\n            n1 = null;\r\n        }\r\n        const { type, ref, shapeFlag } = n2;\r\n        switch (type) {\r\n            case Text:\r\n                processText(n1, n2, container, anchor);\r\n                break;\r\n            case Comment:\r\n                processCommentNode(n1, n2, container, anchor);\r\n                break;\r\n            case Static:\r\n                if (n1 == null) {\r\n                    mountStaticNode(n2, container, anchor, isSVG);\r\n                } // static nodes are noop on patch\r\n                break;\r\n            case Fragment:\r\n                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);\r\n                }\r\n                else if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid VNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        // set ref\r\n        if (ref != null && parentComponent) {\r\n            const refValue = shapeFlag & 4 /* STATEFUL_COMPONENT */ ? n2.component.proxy : n2.el;\r\n            setRef(ref, n1 && n1.ref, parentComponent, refValue);\r\n        }\r\n    };\r\n    const processText = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateText(n2.children)), container, anchor);\r\n        }\r\n        else {\r\n            const el = (n2.el = n1.el);\r\n            if (n2.children !== n1.children) {\r\n                hostSetText(el, n2.children);\r\n            }\r\n        }\r\n    };\r\n    const processCommentNode = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateComment(n2.children || '')), container, anchor);\r\n        }\r\n        else {\r\n            // there's no support for dynamic comments\r\n            n2.el = n1.el;\r\n        }\r\n    };\r\n    const mountStaticNode = (n2, container, anchor, isSVG) => {\r\n        if (n2.el && hostCloneNode !== undefined) {\r\n            hostInsert(hostCloneNode(n2.el), container, anchor);\r\n        }\r\n        else {\r\n            // static nodes are only present when used with compiler-dom/runtime-dom\r\n            // which guarantees presence of hostInsertStaticContent.\r\n            n2.el = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n        }\r\n    };\r\n    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        isSVG = isSVG || n2.type === 'svg';\r\n        if (n1 == null) {\r\n            mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        else {\r\n            patchElement(n1, n2, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n    };\r\n    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        let el;\r\n        let vnodeHook;\r\n        const { type, props, shapeFlag, transition, scopeId, patchFlag, dirs } = vnode;\r\n        if (vnode.el &&\r\n            hostCloneNode !== undefined &&\r\n            patchFlag === -1 /* HOISTED */) {\r\n            // If a vnode has non-null el, it means it's being reused.\r\n            // Only static vnodes can be reused, so its mounted DOM nodes should be\r\n            // exactly the same, and we can simply do a clone here.\r\n            el = vnode.el = hostCloneNode(vnode.el);\r\n        }\r\n        else {\r\n            el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is);\r\n            // props\r\n            if (props) {\r\n                for (const key in props) {\r\n                    if (!isReservedProp(key)) {\r\n                        hostPatchProp(el, key, null, props[key], isSVG);\r\n                    }\r\n                }\r\n                if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                }\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n            }\r\n            // scopeId\r\n            if (scopeId) {\r\n                hostSetScopeId(el, scopeId);\r\n            }\r\n            const treeOwnerId = parentComponent && parentComponent.type.__scopeId;\r\n            // vnode's own scopeId and the current patched component's scopeId is\r\n            // different - this is a slot content node.\r\n            if (treeOwnerId && treeOwnerId !== scopeId) {\r\n                hostSetScopeId(el, treeOwnerId + '-s');\r\n            }\r\n            // children\r\n            if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                hostSetElementText(el, vnode.children);\r\n            }\r\n            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', optimized || !!vnode.dynamicChildren);\r\n            }\r\n            if (transition && !transition.persisted) {\r\n                transition.beforeEnter(el);\r\n            }\r\n        }\r\n        hostInsert(el, container, anchor);\r\n        if ((vnodeHook = props && props.onVnodeMounted) ||\r\n            (transition && !transition.persisted) ||\r\n            dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                transition && !transition.persisted && transition.enter(el);\r\n                dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, optimized, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            const child = (children[i] = optimized\r\n                ? cloneIfMounted(children[i])\r\n                : normalizeVNode(children[i]));\r\n            patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n    };\r\n    const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const el = (n2.el = n1.el);\r\n        let { patchFlag, dynamicChildren, dirs } = n2;\r\n        const oldProps = (n1 && n1.props) || EMPTY_OBJ;\r\n        const newProps = n2.props || EMPTY_OBJ;\r\n        let vnodeHook;\r\n        if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.renderUpdated) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (patchFlag > 0) {\r\n            // the presence of a patchFlag means this element's render code was\r\n            // generated by the compiler and can take the fast path.\r\n            // in this path old node and new node are guaranteed to have the same shape\r\n            // (i.e. at the exact same position in the source template)\r\n            if (patchFlag & 16 /* FULL_PROPS */) {\r\n                // element props contain dynamic keys, full diff needed\r\n                patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else {\r\n                // class\r\n                // this flag is matched when the element has dynamic class bindings.\r\n                if (patchFlag & 2 /* CLASS */) {\r\n                    if (oldProps.class !== newProps.class) {\r\n                        hostPatchProp(el, 'class', null, newProps.class, isSVG);\r\n                    }\r\n                }\r\n                // style\r\n                // this flag is matched when the element has dynamic style bindings\r\n                if (patchFlag & 4 /* STYLE */) {\r\n                    hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);\r\n                }\r\n                // props\r\n                // This flag is matched when the element has dynamic prop/attr bindings\r\n                // other than class and style. The keys of dynamic prop/attrs are saved for\r\n                // faster iteration.\r\n                // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n                // bail out and go through a full diff because we need to unset the old key\r\n                if (patchFlag & 8 /* PROPS */) {\r\n                    // if the flag is present then dynamicProps must be non-null\r\n                    const propsToUpdate = n2.dynamicProps;\r\n                    for (let i = 0; i < propsToUpdate.length; i++) {\r\n                        const key = propsToUpdate[i];\r\n                        const prev = oldProps[key];\r\n                        const next = newProps[key];\r\n                        if (prev !== next) {\r\n                            hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // text\r\n            // This flag is matched when the element has only dynamic text children.\r\n            if (patchFlag & 1 /* TEXT */) {\r\n                if (n1.children !== n2.children) {\r\n                    hostSetElementText(el, n2.children);\r\n                }\r\n            }\r\n        }\r\n        else if (!optimized && dynamicChildren == null) {\r\n            // unoptimized, full diff\r\n            patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n        }\r\n        const areChildrenSVG = isSVG && n2.type !== 'foreignObject';\r\n        if (dynamicChildren) {\r\n            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG);\r\n        }\r\n        else if (!optimized) {\r\n            // full diff\r\n            patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG);\r\n        }\r\n        if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n                dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    // The fast path for blocks.\r\n    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG) => {\r\n        for (let i = 0; i < newChildren.length; i++) {\r\n            const oldVNode = oldChildren[i];\r\n            const newVNode = newChildren[i];\r\n            // Determine the container (parent element) for the patch.\r\n            const container = \r\n            // - In the case of a Fragment, we need to provide the actual parent\r\n            // of the Fragment itself so it can move its children.\r\n            oldVNode.type === Fragment ||\r\n                // - In the case of different nodes, there is going to be a replacement\r\n                // which also requires the correct parent container\r\n                !isSameVNodeType(oldVNode, newVNode) ||\r\n                // - In the case of a component, it could contain anything.\r\n                oldVNode.shapeFlag & 6 /* COMPONENT */\r\n                ? hostParentNode(oldVNode.el)\r\n                : // In other cases, the parent container is not actually used so we\r\n                    // just pass the block element here to avoid a DOM parentNode call.\r\n                    fallbackContainer;\r\n            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, true);\r\n        }\r\n    };\r\n    const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\r\n        if (oldProps !== newProps) {\r\n            for (const key in newProps) {\r\n                if (isReservedProp(key))\r\n                    continue;\r\n                const next = newProps[key];\r\n                const prev = oldProps[key];\r\n                if (next !== prev) {\r\n                    hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                }\r\n            }\r\n            if (oldProps !== EMPTY_OBJ) {\r\n                for (const key in oldProps) {\r\n                    if (!isReservedProp(key) && !(key in newProps)) {\r\n                        hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''));\r\n        const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''));\r\n        let { patchFlag, dynamicChildren } = n2;\r\n        if (patchFlag > 0) {\r\n            optimized = true;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.renderUpdated) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            hostInsert(fragmentStartAnchor, container, anchor);\r\n            hostInsert(fragmentEndAnchor, container, anchor);\r\n            // a fragment can only have array children\r\n            // since they are either generated by the compiler, or implicitly created\r\n            // from arrays.\r\n            mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        else {\r\n            if (patchFlag & 64 /* STABLE_FRAGMENT */ && dynamicChildren) {\r\n                // a stable fragment (template root or <template v-for>) doesn't need to\r\n                // patch children order, but it may contain dynamicChildren.\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else {\r\n                // keyed / unkeyed, or manual fragments.\r\n                // for keyed & unkeyed, since they are compiler generated from v-for,\r\n                // each child is guaranteed to be a block so the fragment will never\r\n                // have dynamicChildren.\r\n                patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n    };\r\n    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        if (n1 == null) {\r\n            if (n2.shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n                parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);\r\n            }\r\n            else {\r\n                mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n        else {\r\n            updateComponent(n1, n2, parentComponent, optimized);\r\n        }\r\n    };\r\n    const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense));\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            registerHMR(instance);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            pushWarningContext(initialVNode);\r\n            startMeasure(instance, `mount`);\r\n        }\r\n        // inject renderer internals for keepAlive\r\n        if (isKeepAlive(initialVNode)) {\r\n            instance.ctx.renderer = internals;\r\n        }\r\n        // resolve props and slots for setup context\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            startMeasure(instance, `init`);\r\n        }\r\n        setupComponent(instance);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            endMeasure(instance, `init`);\r\n        }\r\n        // setup() is async. This component relies on async logic to be resolved\r\n        // before proceeding\r\n        if ( instance.asyncDep) {\r\n            if (!parentSuspense) {\r\n                if ((process.env.NODE_ENV !== 'production'))\r\n                    warn('async setup() is used without a suspense boundary!');\r\n                return;\r\n            }\r\n            parentSuspense.registerDep(instance, setupRenderEffect);\r\n            // Give it a placeholder if this is not hydration\r\n            if (!initialVNode.el) {\r\n                const placeholder = (instance.subTree = createVNode(Comment));\r\n                processCommentNode(null, placeholder, container, anchor);\r\n            }\r\n            return;\r\n        }\r\n        setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            popWarningContext();\r\n            endMeasure(instance, `mount`);\r\n        }\r\n    };\r\n    const updateComponent = (n1, n2, parentComponent, optimized) => {\r\n        const instance = (n2.component = n1.component);\r\n        if (shouldUpdateComponent(n1, n2, parentComponent, optimized)) {\r\n            if (\r\n                instance.asyncDep &&\r\n                !instance.asyncResolved) {\r\n                // async & still pending - just update props and slots\r\n                // since the component's reactive effect for render isn't set-up yet\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(n2);\r\n                }\r\n                updateComponentPreRender(instance, n2, optimized);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                // normal update\r\n                instance.next = n2;\r\n                // in case the child component is also queued, remove it to avoid\r\n                // double updating the same child component in the same flush.\r\n                invalidateJob(instance.update);\r\n                // instance.update is the reactive effect runner.\r\n                instance.update();\r\n            }\r\n        }\r\n        else {\r\n            // no update needed. just copy over properties\r\n            n2.component = n1.component;\r\n            n2.el = n1.el;\r\n        }\r\n    };\r\n    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\r\n        // create reactive effect for rendering\r\n        instance.update = effect(function componentEffect() {\r\n            if (!instance.isMounted) {\r\n                let vnodeHook;\r\n                const { el, props } = initialVNode;\r\n                const { bm, m, a, parent } = instance;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const subTree = (instance.subTree = renderComponentRoot(instance));\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                // beforeMount hook\r\n                if (bm) {\r\n                    invokeArrayFns(bm);\r\n                }\r\n                // onVnodeBeforeMount\r\n                if ((vnodeHook = props && props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                }\r\n                if (el && hydrateNode) {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `hydrate`);\r\n                    }\r\n                    // vnode has adopted host node - perform hydration instead of mount.\r\n                    hydrateNode(initialVNode.el, subTree, instance, parentSuspense);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `hydrate`);\r\n                    }\r\n                }\r\n                else {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `patch`);\r\n                    }\r\n                    patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `patch`);\r\n                    }\r\n                    initialVNode.el = subTree.el;\r\n                }\r\n                // mounted hook\r\n                if (m) {\r\n                    queuePostRenderEffect(m, parentSuspense);\r\n                }\r\n                // onVnodeMounted\r\n                if ((vnodeHook = props && props.onVnodeMounted)) {\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                    }, parentSuspense);\r\n                }\r\n                // activated hook for keep-alive roots.\r\n                if (a &&\r\n                    initialVNode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n                    queuePostRenderEffect(a, parentSuspense);\r\n                }\r\n                instance.isMounted = true;\r\n            }\r\n            else {\r\n                // updateComponent\r\n                // This is triggered by mutation of component's own state (next: null)\r\n                // OR parent calling processComponent (next: VNode)\r\n                let { next, bu, u, parent, vnode } = instance;\r\n                let vnodeHook;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(next || instance.vnode);\r\n                }\r\n                if (next) {\r\n                    updateComponentPreRender(instance, next, optimized);\r\n                }\r\n                else {\r\n                    next = vnode;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const nextTree = renderComponentRoot(instance);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                const prevTree = instance.subTree;\r\n                instance.subTree = nextTree;\r\n                next.el = vnode.el;\r\n                // beforeUpdate hook\r\n                if (bu) {\r\n                    invokeArrayFns(bu);\r\n                }\r\n                // onVnodeBeforeUpdate\r\n                if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n                    invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                }\r\n                // reset refs\r\n                // only needed if previous patch had refs\r\n                if (instance.refs !== EMPTY_OBJ) {\r\n                    instance.refs = {};\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `patch`);\r\n                }\r\n                patch(prevTree, nextTree, \r\n                // parent may have changed if it's in a teleport\r\n                hostParentNode(prevTree.el), \r\n                // anchor may have changed if it's in a fragment\r\n                getNextHostNode(prevTree), instance, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `patch`);\r\n                }\r\n                next.el = nextTree.el;\r\n                if (next === null) {\r\n                    // self-triggered update. In case of HOC, update parent component\r\n                    // vnode el. HOC is indicated by parent instance's subTree pointing\r\n                    // to child component's vnode\r\n                    updateHOCHostEl(instance, nextTree.el);\r\n                }\r\n                // updated hook\r\n                if (u) {\r\n                    queuePostRenderEffect(u, parentSuspense);\r\n                }\r\n                // onVnodeUpdated\r\n                if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                    }, parentSuspense);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n            }\r\n        }, (process.env.NODE_ENV !== 'production') ? createDevEffectOptions(instance) : prodEffectOptions);\r\n    };\r\n    const updateComponentPreRender = (instance, nextVNode, optimized) => {\r\n        nextVNode.component = instance;\r\n        const prevProps = instance.vnode.props;\r\n        instance.vnode = nextVNode;\r\n        instance.next = null;\r\n        updateProps(instance, nextVNode.props, prevProps, optimized);\r\n        updateSlots(instance, nextVNode.children);\r\n    };\r\n    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized = false) => {\r\n        const c1 = n1 && n1.children;\r\n        const prevShapeFlag = n1 ? n1.shapeFlag : 0;\r\n        const c2 = n2.children;\r\n        const { patchFlag, shapeFlag } = n2;\r\n        if (patchFlag === -2 /* BAIL */) {\r\n            optimized = false;\r\n        }\r\n        // fast path\r\n        if (patchFlag > 0) {\r\n            if (patchFlag & 128 /* KEYED_FRAGMENT */) {\r\n                // this could be either fully-keyed or mixed (some keyed some not)\r\n                // presence of patchFlag means children are guaranteed to be arrays\r\n                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                return;\r\n            }\r\n            else if (patchFlag & 256 /* UNKEYED_FRAGMENT */) {\r\n                // unkeyed\r\n                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                return;\r\n            }\r\n        }\r\n        // children has 3 possibilities: text, array or no children.\r\n        if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n            // text children fast path\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                unmountChildren(c1, parentComponent, parentSuspense);\r\n            }\r\n            if (c2 !== c1) {\r\n                hostSetElementText(container, c2);\r\n            }\r\n        }\r\n        else {\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                // prev children was array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    // two arrays, cannot assume anything, do full diff\r\n                    patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else {\r\n                    // no new children, just unmount old\r\n                    unmountChildren(c1, parentComponent, parentSuspense, true);\r\n                }\r\n            }\r\n            else {\r\n                // prev children was text OR null\r\n                // new children is array OR null\r\n                if (prevShapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                    hostSetElementText(container, '');\r\n                }\r\n                // mount new if array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        c1 = c1 || EMPTY_ARR;\r\n        c2 = c2 || EMPTY_ARR;\r\n        const oldLength = c1.length;\r\n        const newLength = c2.length;\r\n        const commonLength = Math.min(oldLength, newLength);\r\n        let i;\r\n        for (i = 0; i < commonLength; i++) {\r\n            const nextChild = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        if (oldLength > newLength) {\r\n            // remove old\r\n            unmountChildren(c1, parentComponent, parentSuspense, true, commonLength);\r\n        }\r\n        else {\r\n            // mount new\r\n            mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, commonLength);\r\n        }\r\n    };\r\n    // can be all-keyed or mixed\r\n    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        let i = 0;\r\n        const l2 = c2.length;\r\n        let e1 = c1.length - 1; // prev ending index\r\n        let e2 = l2 - 1; // next ending index\r\n        // 1. sync from start\r\n        // (a b) c\r\n        // (a b) d e\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[i];\r\n            const n2 = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, parentAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        // 2. sync from end\r\n        // a (b c)\r\n        // d e (b c)\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[e1];\r\n            const n2 = (c2[e2] = optimized\r\n                ? cloneIfMounted(c2[e2])\r\n                : normalizeVNode(c2[e2]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, parentAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            e1--;\r\n            e2--;\r\n        }\r\n        // 3. common sequence + mount\r\n        // (a b)\r\n        // (a b) c\r\n        // i = 2, e1 = 1, e2 = 2\r\n        // (a b)\r\n        // c (a b)\r\n        // i = 0, e1 = -1, e2 = 0\r\n        if (i > e1) {\r\n            if (i <= e2) {\r\n                const nextPos = e2 + 1;\r\n                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\r\n                while (i <= e2) {\r\n                    patch(null, (c2[i] = optimized\r\n                        ? cloneIfMounted(c2[i])\r\n                        : normalizeVNode(c2[i])), container, anchor, parentComponent, parentSuspense, isSVG);\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n        // 4. common sequence + unmount\r\n        // (a b) c\r\n        // (a b)\r\n        // i = 2, e1 = 2, e2 = 1\r\n        // a (b c)\r\n        // (b c)\r\n        // i = 0, e1 = 0, e2 = -1\r\n        else if (i > e2) {\r\n            while (i <= e1) {\r\n                unmount(c1[i], parentComponent, parentSuspense, true);\r\n                i++;\r\n            }\r\n        }\r\n        // 5. unknown sequence\r\n        // [i ... e1 + 1]: a b [c d e] f g\r\n        // [i ... e2 + 1]: a b [e d c h] f g\r\n        // i = 2, e1 = 4, e2 = 5\r\n        else {\r\n            const s1 = i; // prev starting index\r\n            const s2 = i; // next starting index\r\n            // 5.1 build key:index map for newChildren\r\n            const keyToNewIndexMap = new Map();\r\n            for (i = s2; i <= e2; i++) {\r\n                const nextChild = (c2[i] = optimized\r\n                    ? cloneIfMounted(c2[i])\r\n                    : normalizeVNode(c2[i]));\r\n                if (nextChild.key != null) {\r\n                    if ((process.env.NODE_ENV !== 'production') && keyToNewIndexMap.has(nextChild.key)) {\r\n                        warn(`Duplicate keys found during update:`, JSON.stringify(nextChild.key), `Make sure keys are unique.`);\r\n                    }\r\n                    keyToNewIndexMap.set(nextChild.key, i);\r\n                }\r\n            }\r\n            // 5.2 loop through old children left to be patched and try to patch\r\n            // matching nodes & remove nodes that are no longer present\r\n            let j;\r\n            let patched = 0;\r\n            const toBePatched = e2 - s2 + 1;\r\n            let moved = false;\r\n            // used to track whether any node has moved\r\n            let maxNewIndexSoFar = 0;\r\n            // works as Map<newIndex, oldIndex>\r\n            // Note that oldIndex is offset by +1\r\n            // and oldIndex = 0 is a special value indicating the new node has\r\n            // no corresponding old node.\r\n            // used for determining longest stable subsequence\r\n            const newIndexToOldIndexMap = new Array(toBePatched);\r\n            for (i = 0; i < toBePatched; i++)\r\n                newIndexToOldIndexMap[i] = 0;\r\n            for (i = s1; i <= e1; i++) {\r\n                const prevChild = c1[i];\r\n                if (patched >= toBePatched) {\r\n                    // all new children have been patched so this can only be a removal\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                    continue;\r\n                }\r\n                let newIndex;\r\n                if (prevChild.key != null) {\r\n                    newIndex = keyToNewIndexMap.get(prevChild.key);\r\n                }\r\n                else {\r\n                    // key-less node, try to locate a key-less node of the same type\r\n                    for (j = s2; j <= e2; j++) {\r\n                        if (newIndexToOldIndexMap[j - s2] === 0 &&\r\n                            isSameVNodeType(prevChild, c2[j])) {\r\n                            newIndex = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (newIndex === undefined) {\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                }\r\n                else {\r\n                    newIndexToOldIndexMap[newIndex - s2] = i + 1;\r\n                    if (newIndex >= maxNewIndexSoFar) {\r\n                        maxNewIndexSoFar = newIndex;\r\n                    }\r\n                    else {\r\n                        moved = true;\r\n                    }\r\n                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n                    patched++;\r\n                }\r\n            }\r\n            // 5.3 move and mount\r\n            // generate longest stable subsequence only when nodes have moved\r\n            const increasingNewIndexSequence = moved\r\n                ? getSequence(newIndexToOldIndexMap)\r\n                : EMPTY_ARR;\r\n            j = increasingNewIndexSequence.length - 1;\r\n            // looping backwards so that we can use last patched node as anchor\r\n            for (i = toBePatched - 1; i >= 0; i--) {\r\n                const nextIndex = s2 + i;\r\n                const nextChild = c2[nextIndex];\r\n                const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\r\n                if (newIndexToOldIndexMap[i] === 0) {\r\n                    // mount new\r\n                    patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG);\r\n                }\r\n                else if (moved) {\r\n                    // move if:\r\n                    // There is no stable subsequence (e.g. a reverse)\r\n                    // OR current node is not among the stable sequence\r\n                    if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n                        move(nextChild, container, anchor, 2 /* REORDER */);\r\n                    }\r\n                    else {\r\n                        j--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\r\n        const { el, type, transition, children, shapeFlag } = vnode;\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            move(vnode.component.subTree, container, anchor, moveType);\r\n            return;\r\n        }\r\n        if ( shapeFlag & 128 /* SUSPENSE */) {\r\n            vnode.suspense.move(container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type.move(vnode, container, anchor, internals);\r\n            return;\r\n        }\r\n        if (type === Fragment) {\r\n            hostInsert(el, container, anchor);\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, anchor, moveType);\r\n            }\r\n            hostInsert(vnode.anchor, container, anchor);\r\n            return;\r\n        }\r\n        // single nodes\r\n        const needTransition = moveType !== 2 /* REORDER */ &&\r\n            shapeFlag & 1 /* ELEMENT */ &&\r\n            transition;\r\n        if (needTransition) {\r\n            if (moveType === 0 /* ENTER */) {\r\n                transition.beforeEnter(el);\r\n                hostInsert(el, container, anchor);\r\n                queuePostRenderEffect(() => transition.enter(el), parentSuspense);\r\n            }\r\n            else {\r\n                const { leave, delayLeave, afterLeave } = transition;\r\n                const remove = () => hostInsert(el, container, anchor);\r\n                const performLeave = () => {\r\n                    leave(el, () => {\r\n                        remove();\r\n                        afterLeave && afterLeave();\r\n                    });\r\n                };\r\n                if (delayLeave) {\r\n                    delayLeave(el, remove, performLeave);\r\n                }\r\n                else {\r\n                    performLeave();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            hostInsert(el, container, anchor);\r\n        }\r\n    };\r\n    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false) => {\r\n        const { props, ref, children, dynamicChildren, shapeFlag, dirs } = vnode;\r\n        const shouldInvokeDirs = shapeFlag & 1 /* ELEMENT */ && dirs;\r\n        let vnodeHook;\r\n        // unset ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, null, parentComponent, null);\r\n        }\r\n        if ((vnodeHook = props && props.onVnodeBeforeUnmount)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n        }\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n                parentComponent.ctx.deactivate(vnode);\r\n            }\r\n            else {\r\n                unmountComponent(vnode.component, parentSuspense, doRemove);\r\n            }\r\n        }\r\n        else {\r\n            if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                vnode.suspense.unmount(parentSuspense, doRemove);\r\n                return;\r\n            }\r\n            if (shouldInvokeDirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');\r\n            }\r\n            if (dynamicChildren) {\r\n                // fast path for block nodes: only need to unmount dynamic children.\r\n                unmountChildren(dynamicChildren, parentComponent, parentSuspense);\r\n            }\r\n            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                unmountChildren(children, parentComponent, parentSuspense);\r\n            }\r\n            // an unmounted teleport should always remove its children\r\n            if (shapeFlag & 64 /* TELEPORT */) {\r\n                vnode.type.remove(vnode, internals);\r\n            }\r\n            if (doRemove) {\r\n                remove(vnode);\r\n            }\r\n        }\r\n        if ((vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                shouldInvokeDirs &&\r\n                    invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const remove = vnode => {\r\n        const { type, el, anchor, transition } = vnode;\r\n        if (type === Fragment) {\r\n            removeFragment(el, anchor);\r\n            return;\r\n        }\r\n        const performRemove = () => {\r\n            hostRemove(el);\r\n            if (transition && !transition.persisted && transition.afterLeave) {\r\n                transition.afterLeave();\r\n            }\r\n        };\r\n        if (vnode.shapeFlag & 1 /* ELEMENT */ &&\r\n            transition &&\r\n            !transition.persisted) {\r\n            const { leave, delayLeave } = transition;\r\n            const performLeave = () => leave(el, performRemove);\r\n            if (delayLeave) {\r\n                delayLeave(vnode.el, performRemove, performLeave);\r\n            }\r\n            else {\r\n                performLeave();\r\n            }\r\n        }\r\n        else {\r\n            performRemove();\r\n        }\r\n    };\r\n    const removeFragment = (cur, end) => {\r\n        // For fragments, directly remove all contained DOM nodes.\r\n        // (fragment child nodes cannot have transition)\r\n        let next;\r\n        while (cur !== end) {\r\n            next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(end);\r\n    };\r\n    const unmountComponent = (instance, parentSuspense, doRemove) => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            unregisterHMR(instance);\r\n        }\r\n        const { bum, effects, update, subTree, um, da, isDeactivated } = instance;\r\n        // beforeUnmount hook\r\n        if (bum) {\r\n            invokeArrayFns(bum);\r\n        }\r\n        if (effects) {\r\n            for (let i = 0; i < effects.length; i++) {\r\n                stop(effects[i]);\r\n            }\r\n        }\r\n        // update may be null if a component is unmounted before its async\r\n        // setup has resolved.\r\n        if (update) {\r\n            stop(update);\r\n            unmount(subTree, instance, parentSuspense, doRemove);\r\n        }\r\n        // unmounted hook\r\n        if (um) {\r\n            queuePostRenderEffect(um, parentSuspense);\r\n        }\r\n        // deactivated hook\r\n        if (da &&\r\n            !isDeactivated &&\r\n            instance.vnode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n            queuePostRenderEffect(da, parentSuspense);\r\n        }\r\n        queuePostFlushCb(() => {\r\n            instance.isUnmounted = true;\r\n        });\r\n        // A component with async dep inside a pending suspense is unmounted before\r\n        // its async dep resolves. This should remove the dep from the suspense, and\r\n        // cause the suspense to resolve immediately if that was the last dep.\r\n        if (\r\n            parentSuspense &&\r\n            !parentSuspense.isResolved &&\r\n            !parentSuspense.isUnmounted &&\r\n            instance.asyncDep &&\r\n            !instance.asyncResolved) {\r\n            parentSuspense.deps--;\r\n            if (parentSuspense.deps === 0) {\r\n                parentSuspense.resolve();\r\n            }\r\n        }\r\n    };\r\n    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            unmount(children[i], parentComponent, parentSuspense, doRemove);\r\n        }\r\n    };\r\n    const getNextHostNode = vnode => {\r\n        if (vnode.shapeFlag & 6 /* COMPONENT */) {\r\n            return getNextHostNode(vnode.component.subTree);\r\n        }\r\n        if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n            return vnode.suspense.next();\r\n        }\r\n        return hostNextSibling((vnode.anchor || vnode.el));\r\n    };\r\n    const setRef = (rawRef, oldRawRef, parent, value) => {\r\n        const [owner, ref] = rawRef;\r\n        if ((process.env.NODE_ENV !== 'production') && !owner) {\r\n            warn(`Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n                `A vnode with ref must be created inside the render function.`);\r\n            return;\r\n        }\r\n        const oldRef = oldRawRef && oldRawRef[1];\r\n        const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs;\r\n        const setupState = owner.setupState;\r\n        // unset old ref\r\n        if (oldRef != null && oldRef !== ref) {\r\n            if (isString(oldRef)) {\r\n                refs[oldRef] = null;\r\n                if (hasOwn(setupState, oldRef)) {\r\n                    setupState[oldRef] = null;\r\n                }\r\n            }\r\n            else if (isRef(oldRef)) {\r\n                oldRef.value = null;\r\n            }\r\n        }\r\n        if (isString(ref)) {\r\n            refs[ref] = value;\r\n            if (hasOwn(setupState, ref)) {\r\n                setupState[ref] = value;\r\n            }\r\n        }\r\n        else if (isRef(ref)) {\r\n            ref.value = value;\r\n        }\r\n        else if (isFunction(ref)) {\r\n            callWithErrorHandling(ref, parent, 12 /* FUNCTION_REF */, [value, refs]);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn('Invalid template ref type:', value, `(${typeof value})`);\r\n        }\r\n    };\r\n    const render = (vnode, container) => {\r\n        if (vnode == null) {\r\n            if (container._vnode) {\r\n                unmount(container._vnode, null, null, true);\r\n            }\r\n        }\r\n        else {\r\n            patch(container._vnode || null, vnode, container);\r\n        }\r\n        flushPostFlushCbs();\r\n        container._vnode = vnode;\r\n    };\r\n    const internals = {\r\n        p: patch,\r\n        um: unmount,\r\n        m: move,\r\n        r: remove,\r\n        mt: mountComponent,\r\n        mc: mountChildren,\r\n        pc: patchChildren,\r\n        pbc: patchBlockChildren,\r\n        n: getNextHostNode,\r\n        o: options\r\n    };\r\n    let hydrate;\r\n    let hydrateNode;\r\n    if (createHydrationFns) {\r\n        [hydrate, hydrateNode] = createHydrationFns(internals);\r\n    }\r\n    return {\r\n        render,\r\n        hydrate,\r\n        createApp: createAppAPI(render, hydrate)\r\n    };\r\n}\r\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\r\n    callWithAsyncErrorHandling(hook, instance, 7 /* VNODE_HOOK */, [\r\n        vnode,\r\n        prevVNode\r\n    ]);\r\n}\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr) {\r\n    const p = arr.slice();\r\n    const result = [0];\r\n    let i, j, u, v, c;\r\n    const len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        const arrI = arr[i];\r\n        if (arrI !== 0) {\r\n            j = result[result.length - 1];\r\n            if (arr[j] < arrI) {\r\n                p[i] = j;\r\n                result.push(i);\r\n                continue;\r\n            }\r\n            u = 0;\r\n            v = result.length - 1;\r\n            while (u < v) {\r\n                c = ((u + v) / 2) | 0;\r\n                if (arr[result[c]] < arrI) {\r\n                    u = c + 1;\r\n                }\r\n                else {\r\n                    v = c;\r\n                }\r\n            }\r\n            if (arrI < arr[result[u]]) {\r\n                if (u > 0) {\r\n                    p[i] = result[u - 1];\r\n                }\r\n                result[u] = i;\r\n            }\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\n\nfunction useTransitionState() {\r\n    const state = {\r\n        isMounted: false,\r\n        isLeaving: false,\r\n        isUnmounting: false,\r\n        leavingVNodes: new Map()\r\n    };\r\n    onMounted(() => {\r\n        state.isMounted = true;\r\n    });\r\n    onBeforeUnmount(() => {\r\n        state.isUnmounting = true;\r\n    });\r\n    return state;\r\n}\r\nconst BaseTransitionImpl = {\r\n    name: `BaseTransition`,\r\n    props: {\r\n        mode: String,\r\n        appear: Boolean,\r\n        persisted: Boolean,\r\n        // enter\r\n        onBeforeEnter: Function,\r\n        onEnter: Function,\r\n        onAfterEnter: Function,\r\n        onEnterCancelled: Function,\r\n        // leave\r\n        onBeforeLeave: Function,\r\n        onLeave: Function,\r\n        onAfterLeave: Function,\r\n        onLeaveCancelled: Function\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        return () => {\r\n            const children = slots.default && slots.default();\r\n            if (!children || !children.length) {\r\n                return;\r\n            }\r\n            // warn multiple elements\r\n            if ((process.env.NODE_ENV !== 'production') && children.length > 1) {\r\n                warn('<transition> can only be used on a single element or component. Use ' +\r\n                    '<transition-group> for lists.');\r\n            }\r\n            // there's no need to track reactivity for these props so use the raw\r\n            // props for a bit better perf\r\n            const rawProps = toRaw(props);\r\n            const { mode } = rawProps;\r\n            // check mode\r\n            if ((process.env.NODE_ENV !== 'production') && mode && !['in-out', 'out-in', 'default'].includes(mode)) {\r\n                warn(`invalid <transition> mode: ${mode}`);\r\n            }\r\n            // at this point children has a guaranteed length of 1.\r\n            const child = children[0];\r\n            if (state.isLeaving) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            // in the case of <transition><keep-alive/></transition>, we need to\r\n            // compare the type of the kept-alive children.\r\n            const innerChild = getKeepAliveChild(child);\r\n            if (!innerChild) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            const enterHooks = (innerChild.transition = resolveTransitionHooks(innerChild, rawProps, state, instance));\r\n            const oldChild = instance.subTree;\r\n            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\r\n            // handle mode\r\n            if (oldInnerChild &&\r\n                oldInnerChild.type !== Comment &&\r\n                !isSameVNodeType(innerChild, oldInnerChild)) {\r\n                const prevHooks = oldInnerChild.transition;\r\n                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);\r\n                // update old tree's hooks in case of dynamic transition\r\n                setTransitionHooks(oldInnerChild, leavingHooks);\r\n                // switching between different views\r\n                if (mode === 'out-in') {\r\n                    state.isLeaving = true;\r\n                    // return placeholder node and queue update when leave finishes\r\n                    leavingHooks.afterLeave = () => {\r\n                        state.isLeaving = false;\r\n                        instance.update();\r\n                    };\r\n                    return emptyPlaceholder(child);\r\n                }\r\n                else if (mode === 'in-out') {\r\n                    delete prevHooks.delayedLeave;\r\n                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\r\n                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\r\n                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\r\n                        // early removal callback\r\n                        el._leaveCb = () => {\r\n                            earlyRemove();\r\n                            el._leaveCb = undefined;\r\n                            delete enterHooks.delayedLeave;\r\n                        };\r\n                        enterHooks.delayedLeave = delayedLeave;\r\n                    };\r\n                }\r\n            }\r\n            return child;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst BaseTransition = BaseTransitionImpl;\r\nfunction getLeavingNodesForType(state, vnode) {\r\n    const { leavingVNodes } = state;\r\n    let leavingVNodesCache = leavingVNodes.get(vnode.type);\r\n    if (!leavingVNodesCache) {\r\n        leavingVNodesCache = Object.create(null);\r\n        leavingVNodes.set(vnode.type, leavingVNodesCache);\r\n    }\r\n    return leavingVNodesCache;\r\n}\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nfunction resolveTransitionHooks(vnode, { appear, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled }, state, instance) {\r\n    const key = String(vnode.key);\r\n    const leavingVNodesCache = getLeavingNodesForType(state, vnode);\r\n    const callHook = (hook, args) => {\r\n        hook &&\r\n            callWithAsyncErrorHandling(hook, instance, 9 /* TRANSITION_HOOK */, args);\r\n    };\r\n    const hooks = {\r\n        persisted,\r\n        beforeEnter(el) {\r\n            if (!appear && !state.isMounted) {\r\n                return;\r\n            }\r\n            // for same element (v-show)\r\n            if (el._leaveCb) {\r\n                el._leaveCb(true /* cancelled */);\r\n            }\r\n            // for toggled element with same key (v-if)\r\n            const leavingVNode = leavingVNodesCache[key];\r\n            if (leavingVNode &&\r\n                isSameVNodeType(vnode, leavingVNode) &&\r\n                leavingVNode.el._leaveCb) {\r\n                // force early removal (not cancelled)\r\n                leavingVNode.el._leaveCb();\r\n            }\r\n            callHook(onBeforeEnter, [el]);\r\n        },\r\n        enter(el) {\r\n            if (!appear && !state.isMounted) {\r\n                return;\r\n            }\r\n            let called = false;\r\n            const afterEnter = (el._enterCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                if (cancelled) {\r\n                    callHook(onEnterCancelled, [el]);\r\n                }\r\n                else {\r\n                    callHook(onAfterEnter, [el]);\r\n                }\r\n                if (hooks.delayedLeave) {\r\n                    hooks.delayedLeave();\r\n                }\r\n                el._enterCb = undefined;\r\n            });\r\n            if (onEnter) {\r\n                onEnter(el, afterEnter);\r\n            }\r\n            else {\r\n                afterEnter();\r\n            }\r\n        },\r\n        leave(el, remove) {\r\n            const key = String(vnode.key);\r\n            if (el._enterCb) {\r\n                el._enterCb(true /* cancelled */);\r\n            }\r\n            if (state.isUnmounting) {\r\n                return remove();\r\n            }\r\n            callHook(onBeforeLeave, [el]);\r\n            let called = false;\r\n            const afterLeave = (el._leaveCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                remove();\r\n                if (cancelled) {\r\n                    callHook(onLeaveCancelled, [el]);\r\n                }\r\n                else {\r\n                    callHook(onAfterLeave, [el]);\r\n                }\r\n                el._leaveCb = undefined;\r\n                if (leavingVNodesCache[key] === vnode) {\r\n                    delete leavingVNodesCache[key];\r\n                }\r\n            });\r\n            leavingVNodesCache[key] = vnode;\r\n            if (onLeave) {\r\n                onLeave(el, afterLeave);\r\n            }\r\n            else {\r\n                afterLeave();\r\n            }\r\n        }\r\n    };\r\n    return hooks;\r\n}\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode) {\r\n    if (isKeepAlive(vnode)) {\r\n        vnode = cloneVNode(vnode);\r\n        vnode.children = null;\r\n        return vnode;\r\n    }\r\n}\r\nfunction getKeepAliveChild(vnode) {\r\n    return isKeepAlive(vnode)\r\n        ? vnode.children\r\n            ? vnode.children[0]\r\n            : undefined\r\n        : vnode;\r\n}\r\nfunction setTransitionHooks(vnode, hooks) {\r\n    if (vnode.shapeFlag & 6 /* COMPONENT */ && vnode.component) {\r\n        setTransitionHooks(vnode.component.subTree, hooks);\r\n    }\r\n    else {\r\n        vnode.transition = hooks;\r\n    }\r\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\r\nconst KeepAliveImpl = {\r\n    name: `KeepAlive`,\r\n    // Marker for special handling inside the renderer. We are not using a ===\r\n    // check directly on KeepAlive in the renderer, because importing it directly\r\n    // would prevent it from being tree-shaken.\r\n    __isKeepAlive: true,\r\n    props: {\r\n        include: [String, RegExp, Array],\r\n        exclude: [String, RegExp, Array],\r\n        max: [String, Number]\r\n    },\r\n    setup(props, { slots }) {\r\n        const cache = new Map();\r\n        const keys = new Set();\r\n        let current = null;\r\n        const instance = getCurrentInstance();\r\n        const parentSuspense = instance.suspense;\r\n        // KeepAlive communicates with the instantiated renderer via the\r\n        // ctx where the renderer passes in its internals,\r\n        // and the KeepAlive instance exposes activate/deactivate implementations.\r\n        // The whole point of this is to avoid importing KeepAlive directly in the\r\n        // renderer to facilitate tree-shaking.\r\n        const sharedContext = instance.ctx;\r\n        const { renderer: { p: patch, m: move, um: _unmount, o: { createElement } } } = sharedContext;\r\n        const storageContainer = createElement('div');\r\n        sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n            const child = vnode.component;\r\n            move(vnode, container, anchor, 0 /* ENTER */, parentSuspense);\r\n            // in case props have changed\r\n            patch(child.vnode, vnode, container, anchor, instance, parentSuspense, isSVG, optimized);\r\n            queuePostRenderEffect(() => {\r\n                child.isDeactivated = false;\r\n                if (child.a) {\r\n                    invokeArrayFns(child.a);\r\n                }\r\n            }, parentSuspense);\r\n        };\r\n        sharedContext.deactivate = (vnode) => {\r\n            move(vnode, storageContainer, null, 1 /* LEAVE */, parentSuspense);\r\n            queuePostRenderEffect(() => {\r\n                const component = vnode.component;\r\n                if (component.da) {\r\n                    invokeArrayFns(component.da);\r\n                }\r\n                component.isDeactivated = true;\r\n            }, parentSuspense);\r\n        };\r\n        function unmount(vnode) {\r\n            // reset the shapeFlag so it can be properly unmounted\r\n            vnode.shapeFlag = 4 /* STATEFUL_COMPONENT */;\r\n            _unmount(vnode, instance, parentSuspense);\r\n        }\r\n        function pruneCache(filter) {\r\n            cache.forEach((vnode, key) => {\r\n                const name = getName(vnode.type);\r\n                if (name && (!filter || !filter(name))) {\r\n                    pruneCacheEntry(key);\r\n                }\r\n            });\r\n        }\r\n        function pruneCacheEntry(key) {\r\n            const cached = cache.get(key);\r\n            if (!current || cached.type !== current.type) {\r\n                unmount(cached);\r\n            }\r\n            else if (current) {\r\n                // current active instance should no longer be kept-alive.\r\n                // we can't unmount it now but it might be later, so reset its flag now.\r\n                current.shapeFlag = 4 /* STATEFUL_COMPONENT */;\r\n            }\r\n            cache.delete(key);\r\n            keys.delete(key);\r\n        }\r\n        watch(() => [props.include, props.exclude], ([include, exclude]) => {\r\n            include && pruneCache(name => matches(include, name));\r\n            exclude && pruneCache(name => matches(exclude, name));\r\n        });\r\n        onBeforeUnmount(() => {\r\n            cache.forEach(unmount);\r\n        });\r\n        return () => {\r\n            if (!slots.default) {\r\n                return null;\r\n            }\r\n            const children = slots.default();\r\n            let vnode = children[0];\r\n            if (children.length > 1) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`KeepAlive should contain exactly one component child.`);\r\n                }\r\n                current = null;\r\n                return children;\r\n            }\r\n            else if (!isVNode(vnode) ||\r\n                !(vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */)) {\r\n                current = null;\r\n                return vnode;\r\n            }\r\n            const comp = vnode.type;\r\n            const name = getName(comp);\r\n            const { include, exclude, max } = props;\r\n            if ((include && (!name || !matches(include, name))) ||\r\n                (exclude && name && matches(exclude, name))) {\r\n                return vnode;\r\n            }\r\n            const key = vnode.key == null ? comp : vnode.key;\r\n            const cachedVNode = cache.get(key);\r\n            // clone vnode if it's reused because we are going to mutate it\r\n            if (vnode.el) {\r\n                vnode = cloneVNode(vnode);\r\n            }\r\n            cache.set(key, vnode);\r\n            if (cachedVNode) {\r\n                // copy over mounted state\r\n                vnode.el = cachedVNode.el;\r\n                vnode.component = cachedVNode.component;\r\n                if (vnode.transition) {\r\n                    // recursively update transition hooks on subTree\r\n                    setTransitionHooks(vnode, vnode.transition);\r\n                }\r\n                // avoid vnode being mounted as fresh\r\n                vnode.shapeFlag |= 512 /* COMPONENT_KEPT_ALIVE */;\r\n                // make this key the freshest\r\n                keys.delete(key);\r\n                keys.add(key);\r\n            }\r\n            else {\r\n                keys.add(key);\r\n                // prune oldest entry\r\n                if (max && keys.size > parseInt(max, 10)) {\r\n                    pruneCacheEntry(Array.from(keys)[0]);\r\n                }\r\n            }\r\n            // avoid vnode being unmounted\r\n            vnode.shapeFlag |= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n            current = vnode;\r\n            return vnode;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst KeepAlive = KeepAliveImpl;\r\nfunction getName(comp) {\r\n    return comp.displayName || comp.name;\r\n}\r\nfunction matches(pattern, name) {\r\n    if (isArray(pattern)) {\r\n        return pattern.some((p) => matches(p, name));\r\n    }\r\n    else if (isString(pattern)) {\r\n        return pattern.split(',').indexOf(name) > -1;\r\n    }\r\n    else if (pattern.test) {\r\n        return pattern.test(name);\r\n    }\r\n    /* istanbul ignore next */\r\n    return false;\r\n}\r\nfunction onActivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"a\" /* ACTIVATED */, target);\r\n}\r\nfunction onDeactivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"da\" /* DEACTIVATED */, target);\r\n}\r\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\r\n    // cache the deactivate branch check wrapper for injected hooks so the same\r\n    // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n    // deactivation check\".\r\n    const wrappedHook = hook.__wdc ||\r\n        (hook.__wdc = () => {\r\n            // only fire the hook if the target instance is NOT in a deactivated branch.\r\n            let current = target;\r\n            while (current) {\r\n                if (current.isDeactivated) {\r\n                    return;\r\n                }\r\n                current = current.parent;\r\n            }\r\n            hook();\r\n        });\r\n    injectHook(type, wrappedHook, target);\r\n    // In addition to registering it on the target instance, we walk up the parent\r\n    // chain and register it on all ancestor instances that are keep-alive roots.\r\n    // This avoids the need to walk the entire component tree when invoking these\r\n    // hooks, and more importantly, avoids the need to track child components in\r\n    // arrays.\r\n    if (target) {\r\n        let current = target.parent;\r\n        while (current && current.parent) {\r\n            if (isKeepAlive(current.parent.vnode)) {\r\n                injectToKeepAliveRoot(wrappedHook, type, target, current);\r\n            }\r\n            current = current.parent;\r\n        }\r\n    }\r\n}\r\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\r\n    injectHook(type, hook, keepAliveRoot, true /* prepend */);\r\n    onUnmounted(() => {\r\n        remove(keepAliveRoot[type], hook);\r\n    }, target);\r\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\r\n    if (target) {\r\n        const hooks = target[type] || (target[type] = []);\r\n        // cache the error handling wrapper for injected hooks so the same hook\r\n        // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n        // handling\".\r\n        const wrappedHook = hook.__weh ||\r\n            (hook.__weh = (...args) => {\r\n                if (target.isUnmounted) {\r\n                    return;\r\n                }\r\n                // disable tracking inside all lifecycle hooks\r\n                // since they can potentially be called inside effects.\r\n                pauseTracking();\r\n                // Set currentInstance during hook invocation.\r\n                // This assumes the hook does not synchronously trigger other hooks, which\r\n                // can only be false when the user does something really funky.\r\n                setCurrentInstance(target);\r\n                const res = callWithAsyncErrorHandling(hook, target, type, args);\r\n                setCurrentInstance(null);\r\n                resetTracking();\r\n                return res;\r\n            });\r\n        if (prepend) {\r\n            hooks.unshift(wrappedHook);\r\n        }\r\n        else {\r\n            hooks.push(wrappedHook);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        const apiName = `on${capitalize(ErrorTypeStrings[type].replace(/ hook$/, ''))}`;\r\n        warn(`${apiName} is called when there is no active component instance to be ` +\r\n            `associated with. ` +\r\n            `Lifecycle injection APIs can only be used during execution of setup().` +\r\n            ( ` If you are using async setup(), make sure to register lifecycle ` +\r\n                    `hooks before the first await statement.`\r\n                ));\r\n    }\r\n}\r\nconst createHook = (lifecycle) => (hook, target = currentInstance) => \r\n// post-create lifecycle registrations are noops during SSR\r\n!isInSSRComponentSetup && injectHook(lifecycle, hook, target);\r\nconst onBeforeMount = createHook(\"bm\" /* BEFORE_MOUNT */);\r\nconst onMounted = createHook(\"m\" /* MOUNTED */);\r\nconst onBeforeUpdate = createHook(\"bu\" /* BEFORE_UPDATE */);\r\nconst onUpdated = createHook(\"u\" /* UPDATED */);\r\nconst onBeforeUnmount = createHook(\"bum\" /* BEFORE_UNMOUNT */);\r\nconst onUnmounted = createHook(\"um\" /* UNMOUNTED */);\r\nconst onRenderTriggered = createHook(\"rtg\" /* RENDER_TRIGGERED */);\r\nconst onRenderTracked = createHook(\"rtc\" /* RENDER_TRACKED */);\r\nconst onErrorCaptured = (hook, target = currentInstance) => {\r\n    injectHook(\"ec\" /* ERROR_CAPTURED */, hook, target);\r\n};\n\nconst invoke = (fn) => fn();\r\n// Simple effect.\r\nfunction watchEffect(effect, options) {\r\n    return doWatch(effect, null, options);\r\n}\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {};\r\n// implementation\r\nfunction watch(source, cb, options) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(cb)) {\r\n        warn(`\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n            `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n            `supports \\`watch(source, cb, options?) signature.`);\r\n    }\r\n    return doWatch(source, cb, options);\r\n}\r\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = EMPTY_OBJ) {\r\n    if ((process.env.NODE_ENV !== 'production') && !cb) {\r\n        if (immediate !== undefined) {\r\n            warn(`watch() \"immediate\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n        if (deep !== undefined) {\r\n            warn(`watch() \"deep\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n    }\r\n    const instance = currentInstance;\r\n    let getter;\r\n    if (isArray(source)) {\r\n        getter = () => source.map(s => isRef(s)\r\n            ? s.value\r\n            : callWithErrorHandling(s, instance, 2 /* WATCH_GETTER */));\r\n    }\r\n    else if (isRef(source)) {\r\n        getter = () => source.value;\r\n    }\r\n    else if (cb) {\r\n        // getter with cb\r\n        getter = () => callWithErrorHandling(source, instance, 2 /* WATCH_GETTER */);\r\n    }\r\n    else {\r\n        // no cb -> simple effect\r\n        getter = () => {\r\n            if (instance && instance.isUnmounted) {\r\n                return;\r\n            }\r\n            if (cleanup) {\r\n                cleanup();\r\n            }\r\n            return callWithErrorHandling(source, instance, 3 /* WATCH_CALLBACK */, [onInvalidate]);\r\n        };\r\n    }\r\n    if (cb && deep) {\r\n        const baseGetter = getter;\r\n        getter = () => traverse(baseGetter());\r\n    }\r\n    let cleanup;\r\n    const onInvalidate = (fn) => {\r\n        cleanup = runner.options.onStop = () => {\r\n            callWithErrorHandling(fn, instance, 4 /* WATCH_CLEANUP */);\r\n        };\r\n    };\r\n    let oldValue = isArray(source) ? [] : INITIAL_WATCHER_VALUE;\r\n    const applyCb = cb\r\n        ? () => {\r\n            if (instance && instance.isUnmounted) {\r\n                return;\r\n            }\r\n            const newValue = runner();\r\n            if (deep || hasChanged(newValue, oldValue)) {\r\n                // cleanup before running cb again\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                callWithAsyncErrorHandling(cb, instance, 3 /* WATCH_CALLBACK */, [\r\n                    newValue,\r\n                    // pass undefined as the old value when it's changed for the first time\r\n                    oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n                    onInvalidate\r\n                ]);\r\n                oldValue = newValue;\r\n            }\r\n        }\r\n        : void 0;\r\n    let scheduler;\r\n    if (flush === 'sync') {\r\n        scheduler = invoke;\r\n    }\r\n    else if (flush === 'pre') {\r\n        scheduler = job => {\r\n            if (!instance || instance.isMounted) {\r\n                queueJob(job);\r\n            }\r\n            else {\r\n                // with 'pre' option, the first call must happen before\r\n                // the component is mounted so it is called synchronously.\r\n                job();\r\n            }\r\n        };\r\n    }\r\n    else {\r\n        scheduler = job => queuePostRenderEffect(job, instance && instance.suspense);\r\n    }\r\n    const runner = effect(getter, {\r\n        lazy: true,\r\n        // so it runs before component update effects in pre flush mode\r\n        computed: true,\r\n        onTrack,\r\n        onTrigger,\r\n        scheduler: applyCb ? () => scheduler(applyCb) : scheduler\r\n    });\r\n    recordInstanceBoundEffect(runner);\r\n    // initial run\r\n    if (applyCb) {\r\n        if (immediate) {\r\n            applyCb();\r\n        }\r\n        else {\r\n            oldValue = runner();\r\n        }\r\n    }\r\n    else {\r\n        runner();\r\n    }\r\n    return () => {\r\n        stop(runner);\r\n        if (instance) {\r\n            remove(instance.effects, runner);\r\n        }\r\n    };\r\n}\r\n// this.$watch\r\nfunction instanceWatch(source, cb, options) {\r\n    const publicThis = this.proxy;\r\n    const getter = isString(source)\r\n        ? () => publicThis[source]\r\n        : source.bind(publicThis);\r\n    const stop = watch(getter, cb.bind(publicThis), options);\r\n    onBeforeUnmount(stop, this);\r\n    return stop;\r\n}\r\nfunction traverse(value, seen = new Set()) {\r\n    if (!isObject(value) || seen.has(value)) {\r\n        return value;\r\n    }\r\n    seen.add(value);\r\n    if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            traverse(value[i], seen);\r\n        }\r\n    }\r\n    else if (value instanceof Map) {\r\n        value.forEach((v, key) => {\r\n            // to register mutation dep for existing keys\r\n            traverse(value.get(key), seen);\r\n        });\r\n    }\r\n    else if (value instanceof Set) {\r\n        value.forEach(v => {\r\n            traverse(v, seen);\r\n        });\r\n    }\r\n    else {\r\n        for (const key in value) {\r\n            traverse(value[key], seen);\r\n        }\r\n    }\r\n    return value;\r\n}\n\nfunction provide(key, value) {\r\n    if (!currentInstance) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`provide() can only be used inside setup().`);\r\n        }\r\n    }\r\n    else {\r\n        let provides = currentInstance.provides;\r\n        // by default an instance inherits its parent's provides object\r\n        // but when it needs to provide values of its own, it creates its\r\n        // own provides object using parent provides object as prototype.\r\n        // this way in `inject` we can simply look up injections from direct\r\n        // parent and let the prototype chain do the work.\r\n        const parentProvides = currentInstance.parent && currentInstance.parent.provides;\r\n        if (parentProvides === provides) {\r\n            provides = currentInstance.provides = Object.create(parentProvides);\r\n        }\r\n        // TS doesn't allow symbol as index type\r\n        provides[key] = value;\r\n    }\r\n}\r\nfunction inject(key, defaultValue) {\r\n    // fallback to `currentRenderingInstance` so that this can be called in\r\n    // a functional component\r\n    const instance = currentInstance || currentRenderingInstance;\r\n    if (instance) {\r\n        const provides = instance.provides;\r\n        if (key in provides) {\r\n            // TS doesn't allow symbol as index type\r\n            return provides[key];\r\n        }\r\n        else if (arguments.length > 1) {\r\n            return defaultValue;\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`injection \"${String(key)}\" not found.`);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`inject() can only be used inside setup() or functional components.`);\r\n    }\r\n}\n\nfunction createDuplicateChecker() {\r\n    const cache = Object.create(null);\r\n    return (type, key) => {\r\n        if (cache[key]) {\r\n            warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\r\n        }\r\n        else {\r\n            cache[key] = type;\r\n        }\r\n    };\r\n}\r\nfunction applyOptions(instance, options, asMixin = false) {\r\n    const publicThis = instance.proxy;\r\n    const { \r\n    // composition\r\n    mixins, extends: extendsOptions, \r\n    // state\r\n    props: propsOptions, data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, \r\n    // assets\r\n    components, directives, \r\n    // lifecycle\r\n    beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeUnmount, unmounted, renderTracked, renderTriggered, errorCaptured } = options;\r\n    const ctx = instance.ctx;\r\n    const globalMixins = instance.appContext.mixins;\r\n    // call it only during dev\r\n    // applyOptions is called non-as-mixin once per instance\r\n    if (!asMixin) {\r\n        callSyncHook('beforeCreate', options, publicThis, globalMixins);\r\n        // global mixins are applied first\r\n        applyMixins(instance, globalMixins);\r\n    }\r\n    // extending a base component...\r\n    if (extendsOptions) {\r\n        applyOptions(instance, extendsOptions, true);\r\n    }\r\n    // local mixins\r\n    if (mixins) {\r\n        applyMixins(instance, mixins);\r\n    }\r\n    const checkDuplicateProperties = (process.env.NODE_ENV !== 'production') ? createDuplicateChecker() : null;\r\n    if ((process.env.NODE_ENV !== 'production') && propsOptions) {\r\n        for (const key in normalizePropsOptions(propsOptions)[0]) {\r\n            checkDuplicateProperties(\"Props\" /* PROPS */, key);\r\n        }\r\n    }\r\n    // state options\r\n    if (dataOptions) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isFunction(dataOptions)) {\r\n            warn(`The data option must be a function. ` +\r\n                `Plain object usage is no longer supported.`);\r\n        }\r\n        const data = dataOptions.call(publicThis, publicThis);\r\n        if ((process.env.NODE_ENV !== 'production') && isPromise(data)) {\r\n            warn(`data() returned a Promise - note data() cannot be async; If you ` +\r\n                `intend to perform data fetching before component renders, use ` +\r\n                `async setup() + <Suspense>.`);\r\n        }\r\n        if (!isObject(data)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`data() should return an object.`);\r\n        }\r\n        else if (instance.data === EMPTY_OBJ) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                for (const key in data) {\r\n                    checkDuplicateProperties(\"Data\" /* DATA */, key);\r\n                    // expose data on ctx during dev\r\n                    Object.defineProperty(ctx, key, {\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        get: () => data[key],\r\n                        set: NOOP\r\n                    });\r\n                }\r\n            }\r\n            instance.data = reactive(data);\r\n        }\r\n        else {\r\n            // existing data: this is a mixin or extends.\r\n            extend(instance.data, data);\r\n        }\r\n    }\r\n    if (computedOptions) {\r\n        for (const key in computedOptions) {\r\n            const opt = computedOptions[key];\r\n            const get = isFunction(opt)\r\n                ? opt.bind(publicThis, publicThis)\r\n                : isFunction(opt.get)\r\n                    ? opt.get.bind(publicThis, publicThis)\r\n                    : NOOP;\r\n            if ((process.env.NODE_ENV !== 'production') && get === NOOP) {\r\n                warn(`Computed property \"${key}\" has no getter.`);\r\n            }\r\n            const set = !isFunction(opt) && isFunction(opt.set)\r\n                ? opt.set.bind(publicThis)\r\n                : (process.env.NODE_ENV !== 'production')\r\n                    ? () => {\r\n                        warn(`Write operation failed: computed property \"${key}\" is readonly.`);\r\n                    }\r\n                    : NOOP;\r\n            const c = computed({\r\n                get,\r\n                set\r\n            });\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => c.value,\r\n                set: v => (c.value = v)\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkDuplicateProperties(\"Computed\" /* COMPUTED */, key);\r\n            }\r\n        }\r\n    }\r\n    if (methods) {\r\n        for (const key in methods) {\r\n            const methodHandler = methods[key];\r\n            if (isFunction(methodHandler)) {\r\n                ctx[key] = methodHandler.bind(publicThis);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Methods\" /* METHODS */, key);\r\n                }\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n                    `Did you reference the function correctly?`);\r\n            }\r\n        }\r\n    }\r\n    if (watchOptions) {\r\n        for (const key in watchOptions) {\r\n            createWatcher(watchOptions[key], ctx, publicThis, key);\r\n        }\r\n    }\r\n    if (provideOptions) {\r\n        const provides = isFunction(provideOptions)\r\n            ? provideOptions.call(publicThis)\r\n            : provideOptions;\r\n        for (const key in provides) {\r\n            provide(key, provides[key]);\r\n        }\r\n    }\r\n    if (injectOptions) {\r\n        if (isArray(injectOptions)) {\r\n            for (let i = 0; i < injectOptions.length; i++) {\r\n                const key = injectOptions[i];\r\n                ctx[key] = inject(key);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (const key in injectOptions) {\r\n                const opt = injectOptions[key];\r\n                if (isObject(opt)) {\r\n                    ctx[key] = inject(opt.from, opt.default);\r\n                }\r\n                else {\r\n                    ctx[key] = inject(opt);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // asset options\r\n    if (components) {\r\n        extend(instance.components, components);\r\n    }\r\n    if (directives) {\r\n        extend(instance.directives, directives);\r\n    }\r\n    // lifecycle options\r\n    if (!asMixin) {\r\n        callSyncHook('created', options, publicThis, globalMixins);\r\n    }\r\n    if (beforeMount) {\r\n        onBeforeMount(beforeMount.bind(publicThis));\r\n    }\r\n    if (mounted) {\r\n        onMounted(mounted.bind(publicThis));\r\n    }\r\n    if (beforeUpdate) {\r\n        onBeforeUpdate(beforeUpdate.bind(publicThis));\r\n    }\r\n    if (updated) {\r\n        onUpdated(updated.bind(publicThis));\r\n    }\r\n    if (activated) {\r\n        onActivated(activated.bind(publicThis));\r\n    }\r\n    if (deactivated) {\r\n        onDeactivated(deactivated.bind(publicThis));\r\n    }\r\n    if (errorCaptured) {\r\n        onErrorCaptured(errorCaptured.bind(publicThis));\r\n    }\r\n    if (renderTracked) {\r\n        onRenderTracked(renderTracked.bind(publicThis));\r\n    }\r\n    if (renderTriggered) {\r\n        onRenderTriggered(renderTriggered.bind(publicThis));\r\n    }\r\n    if (beforeUnmount) {\r\n        onBeforeUnmount(beforeUnmount.bind(publicThis));\r\n    }\r\n    if (unmounted) {\r\n        onUnmounted(unmounted.bind(publicThis));\r\n    }\r\n}\r\nfunction callSyncHook(name, options, ctx, globalMixins) {\r\n    callHookFromMixins(name, globalMixins, ctx);\r\n    const baseHook = options.extends && options.extends[name];\r\n    if (baseHook) {\r\n        baseHook.call(ctx);\r\n    }\r\n    const mixins = options.mixins;\r\n    if (mixins) {\r\n        callHookFromMixins(name, mixins, ctx);\r\n    }\r\n    const selfHook = options[name];\r\n    if (selfHook) {\r\n        selfHook.call(ctx);\r\n    }\r\n}\r\nfunction callHookFromMixins(name, mixins, ctx) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        const fn = mixins[i][name];\r\n        if (fn) {\r\n            fn.call(ctx);\r\n        }\r\n    }\r\n}\r\nfunction applyMixins(instance, mixins) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        applyOptions(instance, mixins[i], true);\r\n    }\r\n}\r\nfunction createWatcher(raw, ctx, publicThis, key) {\r\n    const getter = () => publicThis[key];\r\n    if (isString(raw)) {\r\n        const handler = ctx[raw];\r\n        if (isFunction(handler)) {\r\n            watch(getter, handler);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\r\n        }\r\n    }\r\n    else if (isFunction(raw)) {\r\n        watch(getter, raw.bind(publicThis));\r\n    }\r\n    else if (isObject(raw)) {\r\n        if (isArray(raw)) {\r\n            raw.forEach(r => createWatcher(r, ctx, publicThis, key));\r\n        }\r\n        else {\r\n            watch(getter, raw.handler.bind(publicThis), raw);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid watch option: \"${key}\"`);\r\n    }\r\n}\r\nfunction resolveMergedOptions(instance) {\r\n    const raw = instance.type;\r\n    const { __merged, mixins, extends: extendsOptions } = raw;\r\n    if (__merged)\r\n        return __merged;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (!globalMixins.length && !mixins && !extendsOptions)\r\n        return raw;\r\n    const options = {};\r\n    globalMixins.forEach(m => mergeOptions(options, m, instance));\r\n    extendsOptions && mergeOptions(options, extendsOptions, instance);\r\n    mixins && mixins.forEach(m => mergeOptions(options, m, instance));\r\n    mergeOptions(options, raw, instance);\r\n    return (raw.__merged = options);\r\n}\r\nfunction mergeOptions(to, from, instance) {\r\n    const strats = instance.appContext.config.optionMergeStrategies;\r\n    for (const key in from) {\r\n        const strat = strats && strats[key];\r\n        if (strat) {\r\n            to[key] = strat(to[key], from[key], instance.proxy, key);\r\n        }\r\n        else if (!hasOwn(to, key)) {\r\n            to[key] = from[key];\r\n        }\r\n    }\r\n}\n\nconst publicPropertiesMap = {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.props) : i.props),\r\n    $attrs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.attrs) : i.attrs),\r\n    $slots: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.slots) : i.slots),\r\n    $refs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.refs) : i.refs),\r\n    $parent: i => i.parent && i.parent.proxy,\r\n    $root: i => i.root && i.root.proxy,\r\n    $emit: i => i.emit,\r\n    $options: i => ( resolveMergedOptions(i) ),\r\n    $forceUpdate: i => () => queueJob(i.update),\r\n    $nextTick: () => nextTick,\r\n    $watch:  i => instanceWatch.bind(i) \r\n};\r\nconst PublicInstanceProxyHandlers = {\r\n    get({ _: instance }, key) {\r\n        const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\r\n        // data / props / ctx\r\n        // This getter gets called for every property access on the render context\r\n        // during render and is a major hotspot. The most expensive part of this\r\n        // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n        // access on a plain object, so we use an accessCache object (with null\r\n        // prototype) to memoize what access type a key corresponds to.\r\n        if (key[0] !== '$') {\r\n            const n = accessCache[key];\r\n            if (n !== undefined) {\r\n                switch (n) {\r\n                    case 0 /* SETUP */:\r\n                        return setupState[key];\r\n                    case 1 /* DATA */:\r\n                        return data[key];\r\n                    case 3 /* CONTEXT */:\r\n                        return ctx[key];\r\n                    case 2 /* PROPS */:\r\n                        return props[key];\r\n                    // default: just fallthrough\r\n                }\r\n            }\r\n            else if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n                accessCache[key] = 0 /* SETUP */;\r\n                return setupState[key];\r\n            }\r\n            else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n                accessCache[key] = 1 /* DATA */;\r\n                return data[key];\r\n            }\r\n            else if (\r\n            // only cache other properties when instance has declared (thus stable)\r\n            // props\r\n            type.props &&\r\n                hasOwn(normalizePropsOptions(type.props)[0], key)) {\r\n                accessCache[key] = 2 /* PROPS */;\r\n                return props[key];\r\n            }\r\n            else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n                accessCache[key] = 3 /* CONTEXT */;\r\n                return ctx[key];\r\n            }\r\n            else {\r\n                accessCache[key] = 4 /* OTHER */;\r\n            }\r\n        }\r\n        const publicGetter = publicPropertiesMap[key];\r\n        let cssModule, globalProperties;\r\n        // public $xxx properties\r\n        if (publicGetter) {\r\n            if ((process.env.NODE_ENV !== 'production') && key === '$attrs') {\r\n                markAttrsAccessed();\r\n            }\r\n            return publicGetter(instance);\r\n        }\r\n        else if (\r\n        // css module (injected by vue-loader)\r\n        (cssModule = type.__cssModules) &&\r\n            (cssModule = cssModule[key])) {\r\n            return cssModule;\r\n        }\r\n        else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n            // user may set custom properties to `this` that start with `$`\r\n            accessCache[key] = 3 /* CONTEXT */;\r\n            return ctx[key];\r\n        }\r\n        else if (\r\n        // global properties\r\n        ((globalProperties = appContext.config.globalProperties),\r\n            hasOwn(globalProperties, key))) {\r\n            return globalProperties[key];\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production') && currentRenderingInstance) {\r\n            warn(`Property ${JSON.stringify(key)} was accessed during render ` +\r\n                `but is not defined on instance.`);\r\n        }\r\n    },\r\n    set({ _: instance }, key, value) {\r\n        const { data, setupState, ctx } = instance;\r\n        if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n            setupState[key] = value;\r\n        }\r\n        else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n            data[key] = value;\r\n        }\r\n        else if (key in instance.props) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate prop \"${key}\". Props are readonly.`, instance);\r\n            return false;\r\n        }\r\n        if (key[0] === '$' && key.slice(1) in instance) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate public property \"${key}\". ` +\r\n                    `Properties starting with $ are reserved and readonly.`, instance);\r\n            return false;\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production') && key in instance.appContext.config.globalProperties) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    value\r\n                });\r\n            }\r\n            else {\r\n                ctx[key] = value;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n    has({ _: { data, setupState, accessCache, ctx, type, appContext } }, key) {\r\n        return (accessCache[key] !== undefined ||\r\n            (data !== EMPTY_OBJ && hasOwn(data, key)) ||\r\n            (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) ||\r\n            (type.props && hasOwn(normalizePropsOptions(type.props)[0], key)) ||\r\n            hasOwn(ctx, key) ||\r\n            hasOwn(publicPropertiesMap, key) ||\r\n            hasOwn(appContext.config.globalProperties, key));\r\n    }\r\n};\r\nif ((process.env.NODE_ENV !== 'production') && !false) {\r\n    PublicInstanceProxyHandlers.ownKeys = (target) => {\r\n        warn(`Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n            `The keys will be empty in production mode to avoid performance overhead.`);\r\n        return Reflect.ownKeys(target);\r\n    };\r\n}\r\nconst RuntimeCompiledPublicInstanceProxyHandlers = {\r\n    ...PublicInstanceProxyHandlers,\r\n    get(target, key) {\r\n        // fast path for unscopables when using `with` block\r\n        if (key === Symbol.unscopables) {\r\n            return;\r\n        }\r\n        return PublicInstanceProxyHandlers.get(target, key, target);\r\n    },\r\n    has(_, key) {\r\n        return key[0] !== '_' && !isGloballyWhitelisted(key);\r\n    }\r\n};\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nfunction createRenderContext(instance) {\r\n    const target = {};\r\n    // expose internal instance for proxy handlers\r\n    Object.defineProperty(target, `_`, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        get: () => instance\r\n    });\r\n    // expose public properties\r\n    Object.keys(publicPropertiesMap).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => publicPropertiesMap[key](instance),\r\n            // intercepted by the proxy so no need for implementation,\r\n            // but needed to prevent set errors\r\n            set: NOOP\r\n        });\r\n    });\r\n    // expose global properties\r\n    const { globalProperties } = instance.appContext.config;\r\n    Object.keys(globalProperties).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => globalProperties[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n    return target;\r\n}\r\n// dev only\r\nfunction exposePropsOnRenderContext(instance) {\r\n    const { ctx, type: { props: propsOptions } } = instance;\r\n    if (propsOptions) {\r\n        Object.keys(normalizePropsOptions(propsOptions)[0]).forEach(key => {\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => instance.props[key],\r\n                set: NOOP\r\n            });\r\n        });\r\n    }\r\n}\r\n// dev only\r\nfunction exposeSetupStateOnRenderContext(instance) {\r\n    const { ctx, setupState } = instance;\r\n    Object.keys(toRaw(setupState)).forEach(key => {\r\n        Object.defineProperty(ctx, key, {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: () => setupState[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n}\n\nconst emptyAppContext = createAppContext();\r\nlet uid = 0;\r\nfunction createComponentInstance(vnode, parent, suspense) {\r\n    // inherit parent app context - or - if root, adopt from root vnode\r\n    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\r\n    const instance = {\r\n        uid: uid++,\r\n        vnode,\r\n        parent,\r\n        appContext,\r\n        type: vnode.type,\r\n        root: null,\r\n        next: null,\r\n        subTree: null,\r\n        update: null,\r\n        render: null,\r\n        proxy: null,\r\n        withProxy: null,\r\n        effects: null,\r\n        provides: parent ? parent.provides : Object.create(appContext.provides),\r\n        accessCache: null,\r\n        renderCache: [],\r\n        // state\r\n        ctx: EMPTY_OBJ,\r\n        data: EMPTY_OBJ,\r\n        props: EMPTY_OBJ,\r\n        attrs: EMPTY_OBJ,\r\n        slots: EMPTY_OBJ,\r\n        refs: EMPTY_OBJ,\r\n        setupState: EMPTY_OBJ,\r\n        setupContext: null,\r\n        // per-instance asset storage (mutable during options resolution)\r\n        components: Object.create(appContext.components),\r\n        directives: Object.create(appContext.directives),\r\n        // suspense related\r\n        suspense,\r\n        asyncDep: null,\r\n        asyncResolved: false,\r\n        // lifecycle hooks\r\n        // not using enums here because it results in computed properties\r\n        isMounted: false,\r\n        isUnmounted: false,\r\n        isDeactivated: false,\r\n        bc: null,\r\n        c: null,\r\n        bm: null,\r\n        m: null,\r\n        bu: null,\r\n        u: null,\r\n        um: null,\r\n        bum: null,\r\n        da: null,\r\n        a: null,\r\n        rtg: null,\r\n        rtc: null,\r\n        ec: null,\r\n        emit: null // to be set immediately\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        instance.ctx = createRenderContext(instance);\r\n    }\r\n    else {\r\n        instance.ctx = { _: instance };\r\n    }\r\n    instance.root = parent ? parent.root : instance;\r\n    instance.emit = emit.bind(null, instance);\r\n    return instance;\r\n}\r\nlet currentInstance = null;\r\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\r\nconst setCurrentInstance = (instance) => {\r\n    currentInstance = instance;\r\n};\r\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component');\r\nfunction validateComponentName(name, config) {\r\n    const appIsNativeTag = config.isNativeTag || NO;\r\n    if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n        warn('Do not use built-in or reserved HTML elements as component id: ' + name);\r\n    }\r\n}\r\nlet isInSSRComponentSetup = false;\r\nfunction setupComponent(instance, isSSR = false) {\r\n    isInSSRComponentSetup = isSSR;\r\n    const { props, children, shapeFlag } = instance.vnode;\r\n    const isStateful = shapeFlag & 4 /* STATEFUL_COMPONENT */;\r\n    initProps(instance, props, isStateful, isSSR);\r\n    initSlots(instance, children);\r\n    const setupResult = isStateful\r\n        ? setupStatefulComponent(instance, isSSR)\r\n        : undefined;\r\n    isInSSRComponentSetup = false;\r\n    return setupResult;\r\n}\r\nfunction setupStatefulComponent(instance, isSSR) {\r\n    const Component = instance.type;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        if (Component.name) {\r\n            validateComponentName(Component.name, instance.appContext.config);\r\n        }\r\n        if (Component.components) {\r\n            const names = Object.keys(Component.components);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateComponentName(names[i], instance.appContext.config);\r\n            }\r\n        }\r\n        if (Component.directives) {\r\n            const names = Object.keys(Component.directives);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateDirectiveName(names[i]);\r\n            }\r\n        }\r\n    }\r\n    // 0. create render proxy property access cache\r\n    instance.accessCache = {};\r\n    // 1. create public instance / render proxy\r\n    instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        exposePropsOnRenderContext(instance);\r\n    }\r\n    // 2. call setup()\r\n    const { setup } = Component;\r\n    if (setup) {\r\n        const setupContext = (instance.setupContext =\r\n            setup.length > 1 ? createSetupContext(instance) : null);\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        const setupResult = callWithErrorHandling(setup, instance, 0 /* SETUP_FUNCTION */, [(process.env.NODE_ENV !== 'production') ? shallowReadonly(instance.props) : instance.props, setupContext]);\r\n        resetTracking();\r\n        currentInstance = null;\r\n        if (isPromise(setupResult)) {\r\n            if (isSSR) {\r\n                // return the promise so server-renderer can wait on it\r\n                return setupResult.then((resolvedResult) => {\r\n                    handleSetupResult(instance, resolvedResult);\r\n                });\r\n            }\r\n            else {\r\n                // async setup returned Promise.\r\n                // bail here and wait for re-entry.\r\n                instance.asyncDep = setupResult;\r\n            }\r\n        }\r\n        else {\r\n            handleSetupResult(instance, setupResult);\r\n        }\r\n    }\r\n    else {\r\n        finishComponentSetup(instance);\r\n    }\r\n}\r\nfunction handleSetupResult(instance, setupResult, isSSR) {\r\n    if (isFunction(setupResult)) {\r\n        // setup returned an inline render function\r\n        instance.render = setupResult;\r\n    }\r\n    else if (isObject(setupResult)) {\r\n        if ((process.env.NODE_ENV !== 'production') && isVNode(setupResult)) {\r\n            warn(`setup() should not return VNodes directly - ` +\r\n                `return a render function instead.`);\r\n        }\r\n        // setup returned bindings.\r\n        // assuming a render function compiled from template is present.\r\n        instance.setupState = reactive(setupResult);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            exposeSetupStateOnRenderContext(instance);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production') && setupResult !== undefined) {\r\n        warn(`setup() should return an object. Received: ${setupResult === null ? 'null' : typeof setupResult}`);\r\n    }\r\n    finishComponentSetup(instance);\r\n}\r\nlet compile;\r\n// exported method uses any to avoid d.ts relying on the compiler types.\r\nfunction registerRuntimeCompiler(_compile) {\r\n    compile = _compile;\r\n}\r\nfunction finishComponentSetup(instance, isSSR) {\r\n    const Component = instance.type;\r\n    // template / render function normalization\r\n    if (!instance.render) {\r\n        if (compile && Component.template && !Component.render) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                startMeasure(instance, `compile`);\r\n            }\r\n            Component.render = compile(Component.template, {\r\n                isCustomElement: instance.appContext.config.isCustomElement || NO\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                endMeasure(instance, `compile`);\r\n            }\r\n            Component.render._rc = true;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && !Component.render) {\r\n            /* istanbul ignore if */\r\n            if (!compile && Component.template) {\r\n                warn(`Component provided template option but ` +\r\n                    `runtime compilation is not supported in this build of Vue.` +\r\n                    ( ` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n                        ) /* should not happen */);\r\n            }\r\n            else {\r\n                warn(`Component is missing template or render function.`);\r\n            }\r\n        }\r\n        instance.render = (Component.render || NOOP);\r\n        // for runtime-compiled render functions using `with` blocks, the render\r\n        // proxy used needs a different `has` handler which is more performant and\r\n        // also only allows a whitelist of globals to fallthrough.\r\n        if (instance.render._rc) {\r\n            instance.withProxy = new Proxy(instance.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\r\n        }\r\n    }\r\n    // support for 2.x options\r\n    {\r\n        currentInstance = instance;\r\n        applyOptions(instance, Component);\r\n        currentInstance = null;\r\n    }\r\n}\r\nconst attrHandlers = {\r\n    get: (target, key) => {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            markAttrsAccessed();\r\n        }\r\n        return target[key];\r\n    },\r\n    set: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    },\r\n    deleteProperty: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    }\r\n};\r\nfunction createSetupContext(instance) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        // We use getters in dev in case libs like test-utils overwrite instance\r\n        // properties (overwrites should not be done in prod)\r\n        return Object.freeze({\r\n            get attrs() {\r\n                return new Proxy(instance.attrs, attrHandlers);\r\n            },\r\n            get slots() {\r\n                return shallowReadonly(instance.slots);\r\n            },\r\n            get emit() {\r\n                return (event, ...args) => instance.emit(event, ...args);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        return {\r\n            attrs: instance.attrs,\r\n            slots: instance.slots,\r\n            emit: instance.emit\r\n        };\r\n    }\r\n}\r\n// record effects created during a component's setup() so that they can be\r\n// stopped when the component unmounts\r\nfunction recordInstanceBoundEffect(effect) {\r\n    if (currentInstance) {\r\n        (currentInstance.effects || (currentInstance.effects = [])).push(effect);\r\n    }\r\n}\r\nconst classifyRE = /(?:^|[-_])(\\w)/g;\r\nconst classify = (str) => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\r\nfunction formatComponentName(Component, isRoot = false) {\r\n    let name = isFunction(Component)\r\n        ? Component.displayName || Component.name\r\n        : Component.name;\r\n    if (!name && Component.__file) {\r\n        const match = Component.__file.match(/([^/\\\\]+)\\.vue$/);\r\n        if (match) {\r\n            name = match[1];\r\n        }\r\n    }\r\n    return name ? classify(name) : isRoot ? `App` : `Anonymous`;\r\n}\n\nfunction computed(getterOrOptions) {\r\n    const c = computed$1(getterOrOptions);\r\n    recordInstanceBoundEffect(c.effect);\r\n    return c;\r\n}\n\n// implementation, close to no-op\r\nfunction defineComponent(options) {\r\n    return isFunction(options) ? { setup: options } : options;\r\n}\n\nfunction defineAsyncComponent(source) {\r\n    if (isFunction(source)) {\r\n        source = { loader: source };\r\n    }\r\n    const { loader, loadingComponent: loadingComponent, errorComponent: errorComponent, delay = 200, timeout, // undefined = never times out\r\n    suspensible = true, onError: userOnError } = source;\r\n    let pendingRequest = null;\r\n    let resolvedComp;\r\n    let retries = 0;\r\n    const retry = () => {\r\n        retries++;\r\n        pendingRequest = null;\r\n        return load();\r\n    };\r\n    const load = () => {\r\n        let thisRequest;\r\n        return (pendingRequest ||\r\n            (thisRequest = pendingRequest = loader()\r\n                .catch(err => {\r\n                err = err instanceof Error ? err : new Error(String(err));\r\n                if (userOnError) {\r\n                    return new Promise((resolve, reject) => {\r\n                        const userRetry = () => resolve(retry());\r\n                        const userFail = () => reject(err);\r\n                        userOnError(err, userRetry, userFail, retries + 1);\r\n                    });\r\n                }\r\n                else {\r\n                    throw err;\r\n                }\r\n            })\r\n                .then((comp) => {\r\n                if (thisRequest !== pendingRequest && pendingRequest) {\r\n                    return pendingRequest;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && !comp) {\r\n                    warn(`Async component loader resolved to undefined. ` +\r\n                        `If you are using retry(), make sure to return its return value.`);\r\n                }\r\n                // interop module default\r\n                if (comp &&\r\n                    (comp.__esModule || comp[Symbol.toStringTag] === 'Module')) {\r\n                    comp = comp.default;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && comp && !isObject(comp) && !isFunction(comp)) {\r\n                    throw new Error(`Invalid async component load result: ${comp}`);\r\n                }\r\n                resolvedComp = comp;\r\n                return comp;\r\n            })));\r\n    };\r\n    return defineComponent({\r\n        __asyncLoader: load,\r\n        name: 'AsyncComponentWrapper',\r\n        setup() {\r\n            const instance = currentInstance;\r\n            // already resolved\r\n            if (resolvedComp) {\r\n                return () => createInnerComp(resolvedComp, instance);\r\n            }\r\n            const onError = (err) => {\r\n                pendingRequest = null;\r\n                handleError(err, instance, 13 /* ASYNC_COMPONENT_LOADER */);\r\n            };\r\n            // suspense-controlled or SSR.\r\n            if (( suspensible && instance.suspense) ||\r\n                (false )) {\r\n                return load()\r\n                    .then(comp => {\r\n                    return () => createInnerComp(comp, instance);\r\n                })\r\n                    .catch(err => {\r\n                    onError(err);\r\n                    return () => errorComponent\r\n                        ? createVNode(errorComponent, { error: err })\r\n                        : null;\r\n                });\r\n            }\r\n            const loaded = ref(false);\r\n            const error = ref();\r\n            const delayed = ref(!!delay);\r\n            if (delay) {\r\n                setTimeout(() => {\r\n                    delayed.value = false;\r\n                }, delay);\r\n            }\r\n            if (timeout != null) {\r\n                setTimeout(() => {\r\n                    if (!loaded.value) {\r\n                        const err = new Error(`Async component timed out after ${timeout}ms.`);\r\n                        onError(err);\r\n                        error.value = err;\r\n                    }\r\n                }, timeout);\r\n            }\r\n            load()\r\n                .then(() => {\r\n                loaded.value = true;\r\n            })\r\n                .catch(err => {\r\n                onError(err);\r\n                error.value = err;\r\n            });\r\n            return () => {\r\n                if (loaded.value && resolvedComp) {\r\n                    return createInnerComp(resolvedComp, instance);\r\n                }\r\n                else if (error.value && errorComponent) {\r\n                    return createVNode(errorComponent, {\r\n                        error: error.value\r\n                    });\r\n                }\r\n                else if (loadingComponent && !delayed.value) {\r\n                    return createVNode(loadingComponent);\r\n                }\r\n            };\r\n        }\r\n    });\r\n}\r\nfunction createInnerComp(comp, { vnode: { props, children } }) {\r\n    return createVNode(comp, props, children);\r\n}\n\n// Actual implementation\r\nfunction h(type, propsOrChildren, children) {\r\n    if (arguments.length === 2) {\r\n        if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\r\n            // single vnode without props\r\n            if (isVNode(propsOrChildren)) {\r\n                return createVNode(type, null, [propsOrChildren]);\r\n            }\r\n            // props without children\r\n            return createVNode(type, propsOrChildren);\r\n        }\r\n        else {\r\n            // omit props\r\n            return createVNode(type, null, propsOrChildren);\r\n        }\r\n    }\r\n    else {\r\n        if (isVNode(children)) {\r\n            children = [children];\r\n        }\r\n        return createVNode(type, propsOrChildren, children);\r\n    }\r\n}\n\nconst useCSSModule = (name = '$style') => {\r\n    {\r\n        const instance = getCurrentInstance();\r\n        if (!instance) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`useCSSModule must be called inside setup()`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const modules = instance.type.__cssModules;\r\n        if (!modules) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`Current instance does not have CSS modules injected.`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const mod = modules[name];\r\n        if (!mod) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current instance does not have CSS module named \"${name}\".`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        return mod;\r\n    }\r\n};\n\nconst ssrContextKey = Symbol((process.env.NODE_ENV !== 'production') ? `ssrContext` : ``);\r\nconst useSSRContext = () => {\r\n    {\r\n        const ctx = inject(ssrContextKey);\r\n        if (!ctx) {\r\n            warn(`Server rendering context not provided. Make sure to only call ` +\r\n                `useSsrContext() conditionally in the server build.`);\r\n        }\r\n        return ctx;\r\n    }\r\n};\n\nconst COMPONENTS = 'components';\r\nconst DIRECTIVES = 'directives';\r\nfunction resolveComponent(name) {\r\n    return resolveAsset(COMPONENTS, name) || name;\r\n}\r\nfunction resolveDynamicComponent(component) {\r\n    if (!component)\r\n        return;\r\n    if (isString(component)) {\r\n        return resolveAsset(COMPONENTS, component, false) || component;\r\n    }\r\n    else if (isFunction(component) || isObject(component)) {\r\n        return component;\r\n    }\r\n}\r\nfunction resolveDirective(name) {\r\n    return resolveAsset(DIRECTIVES, name);\r\n}\r\nfunction resolveAsset(type, name, warnMissing = true) {\r\n    const instance = currentRenderingInstance || currentInstance;\r\n    if (instance) {\r\n        let camelized, capitalized;\r\n        const registry = instance[type];\r\n        let res = registry[name] ||\r\n            registry[(camelized = camelize(name))] ||\r\n            registry[(capitalized = capitalize(camelized))];\r\n        if (!res && type === COMPONENTS) {\r\n            const self = instance.type;\r\n            const selfName = self.displayName || self.name;\r\n            if (selfName &&\r\n                (selfName === name ||\r\n                    selfName === camelized ||\r\n                    selfName === capitalized)) {\r\n                res = self;\r\n            }\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            if (res) {\r\n                // in dev, infer anonymous component's name based on registered name\r\n                if (type === COMPONENTS && !res.name) {\r\n                    res.name = name;\r\n                }\r\n            }\r\n            else if (warnMissing) {\r\n                warn(`Failed to resolve ${type.slice(0, -1)}: ${name}`);\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`resolve${capitalize(type.slice(0, -1))} ` +\r\n            `can only be used in render() or setup().`);\r\n    }\r\n}\n\n// actual implementation\r\nfunction renderList(source, renderItem) {\r\n    let ret;\r\n    if (isArray(source) || isString(source)) {\r\n        ret = new Array(source.length);\r\n        for (let i = 0, l = source.length; i < l; i++) {\r\n            ret[i] = renderItem(source[i], i);\r\n        }\r\n    }\r\n    else if (typeof source === 'number') {\r\n        ret = new Array(source);\r\n        for (let i = 0; i < source; i++) {\r\n            ret[i] = renderItem(i + 1, i);\r\n        }\r\n    }\r\n    else if (isObject(source)) {\r\n        if (source[Symbol.iterator]) {\r\n            ret = Array.from(source, renderItem);\r\n        }\r\n        else {\r\n            const keys = Object.keys(source);\r\n            ret = new Array(keys.length);\r\n            for (let i = 0, l = keys.length; i < l; i++) {\r\n                const key = keys[i];\r\n                ret[i] = renderItem(source[key], key, i);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        ret = [];\r\n    }\r\n    return ret;\r\n}\n\n// For prefixing keys in v-on=\"obj\" with \"on\"\r\nfunction toHandlers(obj) {\r\n    const ret = {};\r\n    if ((process.env.NODE_ENV !== 'production') && !isObject(obj)) {\r\n        warn(`v-on with no argument expects an object value.`);\r\n        return ret;\r\n    }\r\n    for (const key in obj) {\r\n        ret[`on${key}`] = obj[key];\r\n    }\r\n    return ret;\r\n}\n\nfunction renderSlot(slots, name, props = {}, \r\n// this is not a user-facing function, so the fallback is always generated by\r\n// the compiler and guaranteed to be an array\r\nfallback) {\r\n    let slot = slots[name];\r\n    if ((process.env.NODE_ENV !== 'production') && slot && slot.length > 1) {\r\n        warn(`SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n            `function. You need to mark this component with $dynamic-slots in the ` +\r\n            `parent template.`);\r\n        slot = () => [];\r\n    }\r\n    return (openBlock(),\r\n        createBlock(Fragment, { key: props.key }, slot ? slot(props) : fallback || [], slots._ ? 64 /* STABLE_FRAGMENT */ : -2 /* BAIL */));\r\n}\n\nfunction createSlots(slots, dynamicSlots) {\r\n    for (let i = 0; i < dynamicSlots.length; i++) {\r\n        const slot = dynamicSlots[i];\r\n        // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n        if (isArray(slot)) {\r\n            for (let j = 0; j < slot.length; j++) {\r\n                slots[slot[j].name] = slot[j].fn;\r\n            }\r\n        }\r\n        else if (slot) {\r\n            // conditional single slot generated by <template v-if=\"...\" #foo>\r\n            slots[slot.name] = slot.fn;\r\n        }\r\n    }\r\n    return slots;\r\n}\n\n// Public API ------------------------------------------------------------------\r\nconst version = \"3.0.0-beta.3\";\r\nconst ssrUtils = ( null);\n\nexport { BaseTransition, Comment, Fragment, KeepAlive, Suspense, Teleport, Text, callWithAsyncErrorHandling, callWithErrorHandling, cloneVNode, computed, createBlock, createCommentVNode, createHydrationRenderer, createRenderer, createSlots, createStaticVNode, createTextVNode, createVNode, defineAsyncComponent, defineComponent, getCurrentInstance, h, handleError, inject, mergeProps, nextTick, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onUnmounted, onUpdated, openBlock, popScopeId, provide, pushScopeId, registerRuntimeCompiler, renderList, renderSlot, resolveComponent, resolveDirective, resolveDynamicComponent, resolveTransitionHooks, setBlockTracking, setTransitionHooks, ssrContextKey, ssrUtils, toHandlers, transformVNodeArgs, useCSSModule, useSSRContext, useTransitionState, version, warn, watch, watchEffect, withCtx, withDirectives, withScopeId };\n","export * from \"./renderer/c2d\";\nexport * from \"./renderer/webgl\";\nexport * from \"./textures\";\nexport * from \"./tree\";\nexport * from \"./patch\";\n","import { WebGLShader } from \"../WebGLShader\";\nimport { WebGLCoreQuadOperation } from \"../WebGLCoreQuadOperation\";\nimport { WebGLCoreRenderExecutor } from \"../WebGLCoreRenderExecutor\";\n\nexport class WebGLDefaultShader extends WebGLShader {\n    enableAttribs() {\n        // Enables the attribs in the shader program.\n        const gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            // Some shaders may ignore the color.\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    disableAttribs() {\n        // Disables the attribs in the shader program.\n        const gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    setupUniforms(operation: WebGLCoreQuadOperation) {\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv);\n    }\n\n    draw(operation: WebGLCoreQuadOperation) {\n        const gl = this.gl;\n        const length = operation.length;\n\n        const renderExecutor = this.context.renderExecutor as WebGLCoreRenderExecutor;\n        const indexType = renderExecutor.quadIndexType;\n        const indexTypeBytes = renderExecutor.quadIndexType === WebGLRenderingContext.UNSIGNED_INT ? 4 : 2;\n\n        if (length) {\n            let glTexture = operation.getTexture(0);\n            let pos = 0;\n            for (let i = 0; i < length; i++) {\n                const tx = operation.getTexture(i);\n                if (glTexture !== tx) {\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                    gl.drawElements(\n                        gl.TRIANGLES,\n                        6 * (i - pos),\n                        indexType,\n                        (pos + operation.index) * 6 * indexTypeBytes,\n                    );\n                    glTexture = tx;\n                    pos = i;\n                }\n            }\n            if (pos < length) {\n                gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                gl.drawElements(\n                    gl.TRIANGLES,\n                    6 * (length - pos),\n                    indexType,\n                    (pos + operation.index) * 6 * indexTypeBytes,\n                );\n            }\n        }\n    }\n}\n\nWebGLDefaultShader.prototype.vertexShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nWebGLDefaultShader.prototype.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\n    }\n`;\n","import { Stage } from \"./Stage\";\nimport { Element } from \"./Element\";\n\nexport class Texture {\n    private manager = this.stage.textureManager;\n\n    private id: number = Texture.id++;\n\n    public static id = 0;\n\n    // All enabled elements that use this texture object (either as texture or displayedTexture).\n    private elements = new Set<Element>();\n\n    // The number of enabled elements that are active.\n    private _activeCount: number = 0;\n\n    private _source?: TextureSource = undefined;\n\n    // Texture clipping coordinates.\n    private _x: number = 0;\n    private _y: number = 0;\n    private _w: number = 0;\n    private _h: number = 0;\n\n    // Render precision (0.5 = fuzzy, 1 = normal, 2 = sharp even when scaled twice, etc.).\n    private _pixelRatio: number = 1;\n\n    /**\n     * The (maximum) expected texture source dimensions. Used for within bounds determination while texture is not yet loaded.\n     * If not set, 2048 is used by ElementCore.update.\n     */\n    public mw: number = 0;\n    public mh: number = 0;\n\n    // Flag that indicates that this texture uses clipping.\n    private clipping: boolean = false;\n\n    // Indicates whether this texture must update (when it becomes used again).\n    private _mustUpdate: boolean = true;\n\n    constructor(protected stage: Stage) {}\n\n    get source(): TextureSource | undefined {\n        if (this._mustUpdate || this.stage.hasUpdateTexture(this)) {\n            this._performUpdateSource(true);\n            this.stage.removeUpdateTexture(this);\n        }\n        return this._source;\n    }\n\n    getSource(): TextureSource | undefined {\n        return this._source;\n    }\n\n    addElement(v: Element) {\n        if (!this.elements.has(v)) {\n            this.elements.add(v);\n\n            if (this.elements.size === 1) {\n                if (this._source) {\n                    this._source.addTexture(this);\n                }\n            }\n\n            if (v.active) {\n                this.incActiveCount();\n            }\n        }\n    }\n\n    removeElement(v: Element) {\n        if (this.elements.delete(v)) {\n            if (this.elements.size === 0) {\n                if (this._source) {\n                    this._source.removeTexture(this);\n                }\n            }\n\n            if (v.active) {\n                this.decActiveCount();\n            }\n        }\n    }\n\n    getElements() {\n        return this.elements;\n    }\n\n    incActiveCount() {\n        // Ensure that texture source's activeCount has transferred ownership.\n        const source = this.source;\n\n        if (source) {\n            this._checkForNewerReusableTextureSource();\n        }\n\n        this._activeCount++;\n        if (this._activeCount === 1) {\n            this.becomesUsed();\n        }\n    }\n\n    decActiveCount() {\n        const source = this.source; // Force updating the source.\n        this._activeCount--;\n        if (!this._activeCount) {\n            this.becomesUnused();\n        }\n    }\n\n    becomesUsed() {\n        if (this.source) {\n            this.source.incActiveTextureCount();\n        }\n    }\n\n    onLoad() {\n        this.elements.forEach((element) => {\n            if (element.active) {\n                element.onTextureSourceLoaded();\n            }\n        });\n    }\n\n    _checkForNewerReusableTextureSource() {\n        // When this source became unused and cleaned up, it may have disappeared from the reusable texture map.\n        // In the meantime another texture may have been generated loaded with the same lookup id.\n        // If this is the case, use that one instead to make sure only one active texture source per lookup id exists.\n        const source = this.source!;\n        if (!source.isLoaded()) {\n            const reusable = this._getReusableTextureSource();\n            if (reusable && reusable.isLoaded() && reusable !== source) {\n                this._replaceTextureSource(reusable);\n            }\n        }\n    }\n\n    private becomesUnused() {\n        if (this.source) {\n            this.source.decActiveTextureCount();\n        }\n    }\n\n    isUsed() {\n        return this._activeCount > 0;\n    }\n\n    // Returns the lookup id for the current texture settings, to be able to reuse it.\n    protected _getLookupId(): string | undefined {\n        // Default: do not reuse texture.\n        return undefined;\n    }\n\n    /**\n     * Generates a loader function that is able to generate the texture for the current settings of this texture.\n     * The loader itself may return a Function that is called when loading of the texture is cancelled. This can be used\n     * to stop fetching an image when it is no longer in element, for example.\n     */\n    protected _getSourceLoader(): TextureSourceLoader {\n        throw new Error(\"Texture.generate must be implemented.\");\n    }\n\n    get isValid() {\n        return this._getIsValid();\n    }\n\n    /**\n     * If texture is not 'valid', no source can be created for it.\n     */\n    protected _getIsValid(): boolean {\n        return true;\n    }\n\n    /**\n     * This must be called when the texture source must be re-generated.\n     */\n    _changed() {\n        // If no element is actively using this texture, ignore it altogether.\n        if (this.isUsed()) {\n            this._updateSource();\n        } else {\n            this._mustUpdate = true;\n        }\n    }\n\n    private _updateSource() {\n        // We delay all updateSource calls to the next drawFrame, so that we can bundle them.\n        // Otherwise we may reload a texture more often than necessary, when, for example, patching multiple text\n        // properties.\n        this.stage.addUpdateTexture(this);\n    }\n\n    _performUpdateSource(force = false) {\n        // If, in the meantime, the texture was no longer used, just remember that it must update until it becomes used\n        // again.\n        if (force || this.isUsed()) {\n            this._mustUpdate = false;\n            const source = this._getTextureSource();\n            this._replaceTextureSource(source);\n        }\n    }\n\n    private _getTextureSource(): TextureSource | undefined {\n        let source;\n        if (this._getIsValid()) {\n            const lookupId = this._getLookupId();\n            source = this._getReusableTextureSource(lookupId);\n            if (!source) {\n                source = this.manager.getTextureSource(this._getSourceLoader(), lookupId);\n            }\n        }\n        return source;\n    }\n\n    private _getReusableTextureSource(lookupId = this._getLookupId()): TextureSource | undefined {\n        if (this._getIsValid()) {\n            if (lookupId) {\n                return this.manager.getReusableTextureSource(lookupId);\n            }\n        }\n        return undefined;\n    }\n\n    private _replaceTextureSource(newSource: TextureSource | undefined) {\n        const oldSource = this._source;\n\n        this._source = newSource;\n\n        if (this.elements.size) {\n            if (oldSource) {\n                if (this._activeCount) {\n                    oldSource.decActiveTextureCount();\n                }\n\n                oldSource.removeTexture(this);\n            }\n\n            if (newSource) {\n                // Must happen before setDisplayedTexture to ensure sprite map texcoords are used.\n                newSource.addTexture(this);\n                if (this._activeCount) {\n                    newSource.incActiveTextureCount();\n                }\n            }\n        }\n\n        if (this.isUsed()) {\n            if (newSource) {\n                if (newSource.isLoaded()) {\n                    this.elements.forEach((element) => {\n                        if (element.active) {\n                            element.setDisplayedTexture(this);\n                        }\n                    });\n                } else {\n                    const loadError = newSource.loadError;\n                    if (loadError) {\n                        this.elements.forEach((element) => {\n                            if (element.active) {\n                                element.onTextureSourceLoadError(loadError);\n                            }\n                        });\n                    }\n                }\n            } else {\n                this.elements.forEach((element) => {\n                    if (element.active) {\n                        element.setDisplayedTexture(undefined);\n                    }\n                });\n            }\n        }\n    }\n\n    load() {\n        // Make sure that source is up to date.\n        if (this.source) {\n            if (!this.isLoaded()) {\n                this.source.load();\n            }\n        }\n    }\n\n    isLoaded() {\n        return this._source ? this._source.isLoaded() : false;\n    }\n\n    get loadError() {\n        return this._source ? this._source.loadError : undefined;\n    }\n\n    free() {\n        if (this._source) {\n            this._source.free();\n        }\n    }\n\n    enableClipping(x: number, y: number, w: number, h: number) {\n        x *= this._pixelRatio;\n        y *= this._pixelRatio;\n        w *= this._pixelRatio;\n        h *= this._pixelRatio;\n        if (this._x !== x || this._y !== y || this._w !== w || this._h !== h) {\n            this._x = x;\n            this._y = y;\n            this._w = w;\n            this._h = h;\n\n            this._updateClipping();\n        }\n    }\n\n    disableClipping() {\n        this._x = 0;\n        this._y = 0;\n        this._w = 0;\n        this._h = 0;\n\n        this._updateClipping();\n    }\n\n    hasClipping() {\n        return this.clipping;\n    }\n\n    private _updateClipping() {\n        this.clipping = !!(this._x || this._y || this._w || this._h);\n\n        this.elements.forEach((element) => {\n            // Ignore if not the currently displayed texture.\n            if (element.displayedTexture === this) {\n                element.onDisplayedTextureClippingChanged();\n            }\n        });\n    }\n\n    private _updatePixelRatio() {\n        this.elements.forEach((element) => {\n            // Ignore if not the currently displayed texture.\n            if (element.displayedTexture === this) {\n                element.onPixelRatioChanged();\n            }\n        });\n    }\n\n    getNonDefaults(): any {\n        const nonDefaults: Record<string, any> = {};\n        nonDefaults[\"type\"] = this.constructor.name;\n        if (this.x !== 0) nonDefaults[\"x\"] = this.x;\n        if (this.y !== 0) nonDefaults[\"y\"] = this.y;\n        if (this.w !== 0) nonDefaults[\"w\"] = this.w;\n        if (this.h !== 0) nonDefaults[\"h\"] = this.h;\n        if (this.pixelRatio !== 1) nonDefaults[\"pixelRatio\"] = this.pixelRatio;\n        return nonDefaults;\n    }\n\n    get px() {\n        return this._x * this._pixelRatio;\n    }\n\n    get py() {\n        return this._y * this._pixelRatio;\n    }\n\n    get pw() {\n        return this._w * this._pixelRatio;\n    }\n\n    get ph() {\n        return this._h * this._pixelRatio;\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(v) {\n        if (this._x !== v) {\n            this._x = v;\n            this._updateClipping();\n        }\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(v) {\n        if (this._y !== v) {\n            this._y = v;\n            this._updateClipping();\n        }\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v: number) {\n        if (this._w !== v) {\n            this._w = v;\n            this._updateClipping();\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v: number) {\n        if (this._h !== v) {\n            this._h = v;\n            this._updateClipping();\n        }\n    }\n\n    get pixelRatio() {\n        return this._pixelRatio;\n    }\n\n    set pixelRatio(v) {\n        if (this._pixelRatio !== v) {\n            this._pixelRatio = v;\n            this._updatePixelRatio();\n        }\n    }\n\n    isAutosizeTexture() {\n        return true;\n    }\n\n    getRenderWidth() {\n        if (!this.isAutosizeTexture()) {\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\n            return 0;\n        }\n\n        let w = this._w;\n        if (this._source) {\n            // Max out to edge of source texture.\n            const sourceW = this._source.getRenderWidth() / this._pixelRatio;\n            if (w) {\n                w = Math.min(sourceW, w);\n            } else {\n                w = sourceW;\n            }\n            w -= this._x;\n        } else {\n            w = 0;\n        }\n        return w;\n    }\n\n    getRenderHeight() {\n        if (!this.isAutosizeTexture()) {\n            return 0;\n        }\n\n        let h = this._h;\n        if (this._source) {\n            // Max out to edge of source texture.\n            const sourceH = this._source.getRenderHeight() / this._pixelRatio;\n            if (h) {\n                h = Math.min(sourceH, h);\n            } else {\n                h = sourceH;\n            }\n            h -= this._y;\n        } else {\n            h = 0;\n        }\n        return h;\n    }\n\n    static getLookupIdFromSettings(obj: object): string {\n        if (Array.isArray(obj)) {\n            return obj.map((o) => this.getLookupIdFromSettings(o)).join(\",\");\n        } else if (Utils.isObjectLiteral(obj)) {\n            const parts = [];\n            for (const [key, value] of Object.entries(obj)) {\n                parts.push(key + \"=\" + this.getLookupIdFromSettings(value));\n            }\n            return parts.join(\"|\");\n        } else if (obj === undefined) {\n            return \"\";\n        } else {\n            return \"\" + obj;\n        }\n    }\n}\n\nexport type TextureSourceLoader = (\n    cb: TextureSourceCallback,\n    textureSource: TextureSource,\n) => TextureSourceCancelFunction | void;\nexport type TextureSourceCallback = (error: Error | undefined, options?: TextureSourceOptions) => void;\nexport type TextureSourceCancelFunction = () => void;\nexport type TextureDrawableSource = Uint8Array | Uint8ClampedArray | WebGLTexture | TexImageSource;\nexport type TextureSourceOptions = {\n    source: TextureDrawableSource;\n    width?: number;\n    height?: number;\n    permanent?: boolean;\n    hasAlpha?: boolean;\n    premultiplyAlpha?: boolean;\n    renderInfo?: any;\n    texParams?: Record<GLenum, GLenum>;\n    texOptions?: {\n        format?: number;\n        internalFormat?: number;\n        type?: GLenum;\n    };\n};\n\nimport { TextureSource } from \"./TextureSource\";\nimport { Utils } from \"./Utils\";\n","export class Utils {\n    static isFunction(value: any): value is (...args: any) => any {\n        return typeof value === \"function\";\n    }\n\n    static isNumber(value: any): value is number {\n        return typeof value === \"number\";\n    }\n\n    static isInteger(value: any): value is number {\n        return typeof value === \"number\" && value % 1 === 0;\n    }\n\n    static isBoolean(value: any): value is boolean {\n        return value === true || value === false;\n    }\n\n    static isString(value: any): value is string {\n        return typeof value === \"string\";\n    }\n\n    static clone(v: any) {\n        if (Utils.isObjectLiteral(v) || Array.isArray(v)) {\n            return Utils.getDeepClone(v);\n        } else {\n            // Copy by value.\n            return v;\n        }\n    }\n\n    static cloneObjShallow<T extends object>(obj: T): T {\n        const keys = Object.keys(obj);\n        const clone: T = {} as T;\n        for (const k of Object.keys(obj)) {\n            (clone as any)[k] = (obj as any)[k];\n        }\n        return clone;\n    }\n\n    static merge<T extends object>(obj1: T, obj2: T): T {\n        for (const k of Object.keys(obj2)) {\n            (obj1 as any)[k] = (obj2 as any)[k];\n        }\n        return obj1;\n    }\n\n    static isObject(value: any) {\n        const type = typeof value;\n        return !!value && (type === \"object\" || type === \"function\");\n    }\n\n    static isPlainObject(value: any) {\n        const type = typeof value;\n        return !!value && type === \"object\";\n    }\n\n    static isObjectLiteral(value: any) {\n        return typeof value === \"object\" && value && value.constructor === Object;\n    }\n\n    static getArrayIndex(index: number, arr: any[]) {\n        return Utils.getModuloIndex(index, arr.length);\n    }\n\n    static getModuloIndex(index: number, len: number) {\n        if (len === 0) return index;\n        while (index < 0) {\n            index += Math.ceil(-index / len) * len;\n        }\n        index = index % len;\n        return index;\n    }\n\n    static getDeepClone<T extends object>(obj: T): T {\n        if (Utils.isFunction(obj)) {\n            // Copy functions by reference.\n            return obj;\n        }\n        if (Array.isArray(obj)) {\n            const c: any[] = [];\n            for (const key of Object.keys(obj)) {\n                const v = (obj as any)[key] as any;\n                (c as any)[key] = Utils.getDeepClone(v);\n            }\n            return c as T;\n        } else if (Utils.isObject(obj)) {\n            const c: any = {};\n            for (const key of Object.keys(obj)) {\n                const v = (obj as any)[key] as any;\n                (c as any)[key] = Utils.getDeepClone(v);\n            }\n            return c;\n        } else {\n            return obj;\n        }\n    }\n\n    static equalValues(v1: any, v2: any): boolean {\n        if (typeof v1 !== typeof v2) return false;\n        if (Utils.isObjectLiteral(v1)) {\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2);\n        } else if (Array.isArray(v1)) {\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2);\n        } else {\n            return v1 === v2;\n        }\n    }\n\n    static equalObjectLiterals<T extends object>(obj1: T, obj2: T) {\n        const keys1 = Object.keys(obj1) as (keyof T)[];\n        const keys2 = Object.keys(obj2) as (keyof T)[];\n        if (keys1.length !== keys2.length) {\n            return false;\n        }\n\n        for (let i = 0, n = keys1.length; i < n; i++) {\n            const k1 = keys1[i];\n            const k2 = keys2[i];\n            if (k1 !== k2) {\n                return false;\n            }\n\n            const v1 = obj1[k1];\n            const v2 = obj2[k2];\n\n            if (!Utils.equalValues(v1, v2)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static equalArrays<T extends any[]>(v1: T, v2: T) {\n        if (v1.length !== v2.length) {\n            return false;\n        }\n        for (let i = 0, n = v1.length; i < n; i++) {\n            if (!this.equalValues(v1[i], v2[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static setToArray<T>(s: Set<T>): T[] {\n        const result = new Array<T>();\n        s.forEach((value) => {\n            result.push(value);\n        });\n        return result;\n    }\n\n    static iteratorToArray<T>(iterator: Iterator<T, any, any>): T[] {\n        const result = [];\n        let iteratorResult = iterator.next();\n        while (!iteratorResult.done) {\n            result.push(iteratorResult.value);\n            iteratorResult = iterator.next();\n        }\n        return result;\n    }\n\n    static isUcChar(charcode: number) {\n        return charcode >= 65 && charcode <= 90;\n    }\n}\n","import { ensureBoolean, ensureFloat, Node } from \"./Node\";\nimport { Element } from \"tree2d\";\nimport { Base } from \"./Base\";\n\nexport class Container extends Node {\n    protected containerElement: Element = this.el;\n\n    appendChild(child: Base) {\n        super.appendChild(child);\n        if (child.element) {\n            this.containerElement.childList.add(child.element);\n        }\n    }\n\n    removeChild(child: Base) {\n        super.removeChild(child);\n        if (child.element) {\n            this.containerElement.childList.remove(child.element);\n        }\n    }\n\n    insertBefore(child: Base, anchor: Base) {\n        super.insertBefore(child, anchor);\n        const item = child.element;\n        if (item) {\n            const baseAnchor = this.getBaseAnchor(anchor);\n            if (baseAnchor) {\n                const insertBefore = baseAnchor.element!;\n                const index = this.containerElement.childList.getIndex(insertBefore);\n                if (index >= 0) {\n                    this.containerElement.childList.addAt(item, index);\n                } else {\n                    throw new Error(\"Can't find anchor in tree2d child list: \" + insertBefore.getLocationString());\n                }\n            } else {\n                this.containerElement.childList.add(item);\n            }\n        }\n    }\n\n    /**\n     * Returns the nearest base that has an element.\n     * @param anchor\n     */\n    private getBaseAnchor(anchor: Base): Base | undefined {\n        if (anchor.element) {\n            return anchor;\n        } else {\n            // In case of a v-for with a lot of elements, lastIndexOf will perform faster.\n            let index = this.children.lastIndexOf(anchor);\n            if (index !== -1) {\n                const n = this.children.length;\n                while (++index < n) {\n                    if (this.children[index].element) {\n                        return this.children[index];\n                    }\n                }\n            }\n            return undefined;\n        }\n    }\n\n    clearChildren() {\n        this.children.forEach((child) => (child.parent = undefined));\n        this.children = [];\n        this.containerElement.childList.clear();\n    }\n\n    set \"force-z-index-context\"(v: boolean) {\n        this.el.forceZIndexContext = ensureBoolean(v);\n    }\n\n    set clipping(v: boolean) {\n        this.el.clipping = ensureBoolean(v);\n    }\n\n    set clipbox(v: boolean) {\n        this.el.clipbox = ensureBoolean(v);\n    }\n\n    set \"render-to-texture\"(v: boolean) {\n        this.el.renderToTexture = ensureBoolean(v);\n    }\n\n    set \"render-to-texture-lazy\"(v: boolean) {\n        this.el.renderToTextureLazy = ensureBoolean(v);\n    }\n\n    set \"render-to-texture-offscreen\"(v: boolean) {\n        this.el.renderToTextureOffscreen = ensureBoolean(v);\n    }\n\n    set \"render-to-texture-colorize\"(v: boolean) {\n        this.el.renderToTextureColorize = ensureBoolean(v);\n    }\n\n    set flex(v: boolean) {\n        this.el.flex = ensureBoolean(v);\n    }\n\n    set \"flex-direction\"(v: \"row\" | \"row-reverse\" | \"column\" | \"column-reverse\") {\n        this.el.flexDirection = v;\n    }\n\n    set \"flex-wrap\"(v: boolean) {\n        this.el.flexWrap = ensureBoolean(v);\n    }\n\n    set \"flex-align-items\"(v: \"flex-start\" | \"flex-end\" | \"center\" | \"stretch\") {\n        this.el.flexAlignItems = v;\n    }\n\n    set \"flex-justify-content\"(\n        v: \"flex-start\" | \"flex-end\" | \"center\" | \"space-between\" | \"space-around\" | \"space-evenly\",\n    ) {\n        this.el.flexJustifyContent = v;\n    }\n\n    set \"flex-align-content\"(\n        v: \"flex-start\" | \"flex-end\" | \"center\" | \"space-between\" | \"space-around\" | \"space-evenly\" | \"stretch\",\n    ) {\n        this.el.flexAlignContent = v;\n    }\n\n    set padding(v: number) {\n        this.el.padding = ensureFloat(v);\n    }\n\n    set \"padding-left\"(v: number) {\n        this.el.paddingLeft = ensureFloat(v);\n    }\n\n    set \"padding-right\"(v: number) {\n        this.el.paddingRight = ensureFloat(v);\n    }\n\n    set \"padding-top\"(v: number) {\n        this.el.paddingTop = ensureFloat(v);\n    }\n\n    set \"padding-bottom\"(v: number) {\n        this.el.paddingBottom = ensureFloat(v);\n    }\n}\n","import { Base } from \"./Base\";\nimport { Element, FunctionH, FunctionW, FunctionX, FunctionY } from \"tree2d\";\nimport {\n    eventTranslators,\n    SupportedEvents,\n    VugelEvent,\n    VugelEventListener,\n    VugelFocusEvent,\n    VugelKeyboardEvent,\n    VugelMouseEvent,\n} from \"../../events\";\nimport {\n    ElementEventCallback,\n    ElementResizeEventCallback,\n    ElementTextureEventCallback,\n    ElementTextureErrorEventCallback,\n} from \"tree2d\";\nimport { VugelStage } from \"../../wrapper\";\n\nexport type NodeEvents = {\n    onAuxclick?: VugelEventListener<VugelMouseEvent>;\n    onClick?: VugelEventListener<VugelMouseEvent>;\n    onContextmenu?: VugelEventListener<VugelMouseEvent>;\n    onDblclick?: VugelEventListener<VugelMouseEvent>;\n    onMousedown?: VugelEventListener<VugelMouseEvent>;\n    onMouseenter?: VugelEventListener<VugelMouseEvent>;\n    onMouseleave?: VugelEventListener<VugelMouseEvent>;\n    onMousemove?: VugelEventListener<VugelMouseEvent>;\n    onMouseout?: VugelEventListener<VugelMouseEvent>;\n    onMouseover?: VugelEventListener<VugelMouseEvent>;\n    onMouseup?: VugelEventListener<VugelMouseEvent>;\n\n    onTouchcancel?: VugelEventListener<VugelMouseEvent>;\n    onTouchend?: VugelEventListener<VugelMouseEvent>;\n    onTouchmove?: VugelEventListener<VugelMouseEvent>;\n    onTouchstart?: VugelEventListener<VugelMouseEvent>;\n\n    onFocusin?: VugelEventListener<VugelFocusEvent>;\n    onFocusout?: VugelEventListener<VugelFocusEvent>;\n    onFocus?: VugelEventListener<VugelFocusEvent>;\n    onBlur?: VugelEventListener<VugelFocusEvent>;\n\n    onKeypress?: VugelEventListener<VugelKeyboardEvent>;\n    onKeydown?: VugelEventListener<VugelKeyboardEvent>;\n    onKeyup?: VugelEventListener<VugelKeyboardEvent>;\n};\n\nexport class Node extends Base {\n    public readonly stage: VugelStage;\n\n    public _nodeEvents?: NodeEvents;\n    private pointerEvents: boolean | undefined = undefined;\n\n    constructor(stage: VugelStage, base?: Element) {\n        super(base || new Element(stage));\n        this.stage = stage;\n        if (this.element) {\n            this.element.data = this;\n        }\n    }\n\n    getParentNode(): Node | undefined {\n        let current = this.parent;\n        while (current && !(current as any).el) {\n            current = current.parent;\n        }\n        return current as Node;\n    }\n\n    get el(): Element {\n        return this.element!;\n    }\n\n    public set \"pointer-events\"(v: boolean | undefined) {\n        this.pointerEvents = v;\n    }\n\n    public capturePointerEvents(): boolean {\n        return (this.pointerEvents || (this.pointerEvents === undefined && this.getParentCapturePointerEvents()));\n    }\n\n    private getParentCapturePointerEvents() {\n        const parentNode = this.getParentNode();\n        return parentNode ? parentNode.capturePointerEvents() : true;\n    }\n\n    // Returns the element containing the texture. Texture clipping and tinting will be applied to this element.\n    get textureElement(): Element {\n        return this.element!;\n    }\n\n    focus() {\n        this.stage.eventHelpers.focusManager.setFocus(this);\n    }\n\n    dispatchEvent<T extends Event | undefined>(event: VugelEvent<T>) {\n        const vueEventType = eventTranslators[event.type as SupportedEvents];\n\n        const eventHandler = this._nodeEvents?.[vueEventType] as VugelEventListener<any>;\n        eventHandler?.({\n            ...event,\n            currentTarget: this,\n        });\n    }\n\n    /**\n     * Dispatches a bubbled event.\n     *\n     * @param event the event to be dispatched\n     * @param ancestorBubble if you want to fake bubble (for example for a mouseleave event) until a certain ancestor, this field should be used.\n     * Note that this will also update the target of the event. When setting it to \"true\", it will effectively bubble all the way down, though updating the target the entire tree.\n     */\n    dispatchBubbledEvent<T extends Event | undefined>(\n        event: VugelEvent<T>,\n        ancestorBubble: Base | true | undefined = undefined,\n    ) {\n        const vueEventType = eventTranslators[event.type as SupportedEvents];\n\n        let currentNode: Base | undefined = this;\n        while (currentNode !== undefined && currentNode !== ancestorBubble) {\n            const eventHandler = (currentNode as Node)._nodeEvents?.[vueEventType] as VugelEventListener<any>;\n            const newEvent = {\n                ...event,\n                currentTarget: currentNode,\n                target: ancestorBubble !== undefined ? currentNode : event.target,\n            };\n\n            eventHandler?.(newEvent);\n\n            if (ancestorBubble !== undefined && newEvent.cancelBubble) {\n                return;\n            }\n\n            currentNode = currentNode.parent;\n        }\n    }\n\n    set x(v: number | FunctionX | string) {\n        this.el.x = convertRelValue(v, \"w\");\n    }\n\n    set y(v: number | FunctionY | string) {\n        this.el.y = convertRelValue(v, \"h\");\n    }\n\n    set w(v: number | FunctionW | string) {\n        this.el.w = convertRelValue(v, \"w\");\n    }\n\n    set h(v: number | FunctionH) {\n        this.el.h = convertRelValue(v, \"h\");\n    }\n\n    set \"scale-x\"(v: number) {\n        this.el.scaleX = ensureFloat(v);\n    }\n\n    set \"scale-y\"(v: number) {\n        this.el.scaleY = ensureFloat(v);\n    }\n\n    set scale(v: any) {\n        this.el.scale = ensureFloat(v);\n    }\n\n    set \"pivot-x\"(v: number) {\n        this.el.pivotX = ensureFloat(v);\n    }\n\n    set \"pivot-y\"(v: number) {\n        this.el.pivotY = ensureFloat(v);\n    }\n\n    set pivot(v: any) {\n        this.el.pivot = ensureFloat(v);\n    }\n\n    set \"mount-x\"(v: number) {\n        this.el.mountX = ensureFloat(v);\n    }\n\n    set \"mount-y\"(v: number) {\n        this.el.mountY = ensureFloat(v);\n    }\n\n    set mount(v: any) {\n        this.el.mount = ensureFloat(v);\n    }\n\n    set rotation(v: number) {\n        this.el.rotation = ensureFloat(v);\n    }\n\n    set alpha(v: number) {\n        this.el.alpha = ensureFloat(v);\n    }\n\n    set visible(v: boolean) {\n        this.el.visible = ensureBoolean(v);\n    }\n\n    set \"color-upper-left\"(v: number) {\n        this.textureElement.colorUl = ensureColor(v);\n    }\n\n    set \"color-upper-right\"(v: number) {\n        this.textureElement.colorUr = ensureColor(v);\n    }\n\n    set \"color-bottom-left\"(v: number) {\n        this.textureElement.colorUl = ensureColor(v);\n    }\n\n    set \"color-bottom-right\"(v: number) {\n        this.textureElement.colorUr = ensureColor(v);\n    }\n\n    set \"color-top\"(v: number) {\n        this.textureElement.colorTop = ensureColor(v);\n    }\n\n    set \"color-bottom\"(v: number) {\n        this.textureElement.colorBottom = ensureColor(v);\n    }\n\n    set \"color-left\"(v: number) {\n        this.textureElement.colorLeft = ensureColor(v);\n    }\n\n    set \"color-right\"(v: number) {\n        this.textureElement.colorRight = ensureColor(v);\n    }\n\n    set color(v: number) {\n        this.textureElement.color = ensureColor(v);\n    }\n\n    set \"clip-x\"(v: number) {\n        if (this.textureElement.texture) {\n            this.textureElement.texture.x = v;\n        }\n    }\n\n    set \"clip-y\"(v: number) {\n        if (this.textureElement.texture) {\n            this.textureElement.texture.y = v;\n        }\n    }\n\n    set \"clip-w\"(v: number) {\n        if (this.textureElement.texture) {\n            this.textureElement.texture.w = v;\n        }\n    }\n\n    set \"clip-h\"(v: number) {\n        if (this.textureElement.texture) {\n            this.textureElement.texture.h = v;\n        }\n    }\n\n    set \"pixel-ratio\"(v: number) {\n        if (this.textureElement.texture) {\n            this.textureElement.texture.pixelRatio = ensureFloat(v);\n        }\n    }\n\n    set \"z-index\"(v: number) {\n        this.el.zIndex = ensureFloat(v);\n    }\n\n    set \"bounds-margin\"(v: number) {\n        this.el.boundsMargin = ensureFloat(v);\n    }\n\n    set \"bounds-marginleft\"(v: number) {\n        this.el.boundsMarginLeft = ensureFloat(v);\n    }\n\n    set \"bounds-margin-top\"(v: number) {\n        this.el.boundsMarginTop = ensureFloat(v);\n    }\n\n    set \"bounds-margin-right\"(v: number) {\n        this.el.boundsMarginRight = ensureFloat(v);\n    }\n\n    set \"bounds-margin-bottom\"(v: number) {\n        this.el.boundsMarginBottom = ensureFloat(v);\n    }\n\n    set \"flex-item\"(v: boolean) {\n        this.el.flexItem = ensureBoolean(v);\n    }\n\n    set \"flex-grow\"(v: number) {\n        this.el.flexGrow = ensureFloat(v);\n    }\n\n    set \"flex-shrink\"(v: number) {\n        this.el.flexShrink = ensureFloat(v);\n    }\n\n    set \"flex-align-self\"(v: \"flex-start\" | \"flex-end\" | \"center\" | \"stretch\" | undefined) {\n        this.el.flexAlignSelf = v;\n    }\n\n    set margin(v: number) {\n        this.el.margin = ensureFloat(v);\n    }\n\n    set \"margin-left\"(v: number) {\n        this.el.marginLeft = ensureFloat(v);\n    }\n\n    set \"margin-right\"(v: number) {\n        this.el.marginRight = ensureFloat(v);\n    }\n\n    set \"margin-top\"(v: number) {\n        this.el.marginTop = ensureFloat(v);\n    }\n\n    set \"margin-bottom\"(v: number) {\n        this.el.marginBottom = ensureFloat(v);\n    }\n\n    set \"min-width\"(v: number) {\n        this.el.minWidth = ensureFloat(v);\n    }\n\n    set \"min-height\"(v: number) {\n        this.el.minHeight = ensureFloat(v);\n    }\n\n    set \"max-width\"(v: number) {\n        this.el.maxWidth = ensureFloat(v);\n    }\n\n    set \"max-height\"(v: number) {\n        this.el.maxHeight = ensureFloat(v);\n    }\n\n    set \"skip-in-layout\"(v: boolean) {\n        this.el.skipInLayout = ensureBoolean(v);\n    }\n\n    get nodeEvents(): NodeEvents {\n        if (!this._nodeEvents) {\n            this._nodeEvents = {};\n        }\n        return this._nodeEvents;\n    }\n\n    set nodeEvents(value: NodeEvents) {\n        this._nodeEvents = value;\n    }\n\n    // Setters for NodeEvents\n    set onSetup(v: ElementEventCallback | undefined) {\n        this.el.onSetup = v;\n    }\n\n    set onAttach(v: ElementEventCallback | undefined) {\n        this.el.onAttach = v;\n    }\n\n    set onDetach(v: ElementEventCallback | undefined) {\n        this.el.onDetach = v;\n    }\n\n    set onEnabled(v: ElementEventCallback | undefined) {\n        this.el.onEnabled = v;\n    }\n\n    set onDisabled(v: ElementEventCallback | undefined) {\n        this.el.onDisabled = v;\n    }\n\n    set onActive(v: ElementEventCallback | undefined) {\n        this.el.onActive = v;\n    }\n\n    set onInactive(v: ElementEventCallback | undefined) {\n        this.el.onInactive = v;\n    }\n\n    set onTextureError(v: ElementTextureErrorEventCallback | undefined) {\n        this.el.onTextureError = v;\n    }\n\n    set onTextureLoaded(v: ElementTextureEventCallback | undefined) {\n        this.el.onTextureLoaded = v;\n    }\n\n    set onTextureUnloaded(v: ElementTextureEventCallback | undefined) {\n        this.el.onTextureUnloaded = v;\n    }\n\n    set onResize(v: ElementResizeEventCallback | undefined) {\n        this.el.onResize = v;\n    }\n\n    set onUpdate(v: ElementEventCallback | undefined) {\n        this.el.onUpdate = v;\n    }\n\n    set onAfterCalcs(v: ElementEventCallback | undefined) {\n        this.el.onAfterCalcs = v;\n    }\n\n    set onAfterUpdate(v: ElementEventCallback | undefined) {\n        this.el.onAfterUpdate = v;\n    }\n\n    // MouseEvent\n    set onAuxclick(e: VugelEventListener<VugelMouseEvent> | undefined) {\n        this.nodeEvents.onAuxclick = e;\n    }\n\n    set onClick(e: VugelEventListener<VugelMouseEvent> | undefined) {\n        this.nodeEvents.onClick = e;\n    }\n\n    set onContextmenu(e: VugelEventListener<VugelMouseEvent> | undefined) {\n        this.nodeEvents.onContextmenu = e;\n    }\n\n    set onDblclick(e: VugelEventListener<VugelMouseEvent> | undefined) {\n        this.nodeEvents.onDblclick = e;\n    }\n\n    set onMousedown(e: VugelEventListener<VugelMouseEvent> | undefined) {\n        this.nodeEvents.onMousedown = e;\n    }\n\n    set onMouseenter(e: VugelEventListener<VugelMouseEvent> | undefined) {\n        this.nodeEvents.onMouseenter = e;\n    }\n\n    set onMouseleave(e: VugelEventListener<VugelMouseEvent> | undefined) {\n        this.nodeEvents.onMouseleave = e;\n    }\n\n    set onMousemove(e: VugelEventListener<VugelMouseEvent> | undefined) {\n        this.nodeEvents.onMousemove = e;\n    }\n\n    set onMouseout(e: VugelEventListener<VugelMouseEvent> | undefined) {\n        this.nodeEvents.onMouseout = e;\n    }\n\n    set onMouseover(e: VugelEventListener<VugelMouseEvent> | undefined) {\n        this.nodeEvents.onMouseover = e;\n    }\n\n    set onMouseup(e: VugelEventListener<VugelMouseEvent> | undefined) {\n        this.nodeEvents.onMouseup = e;\n    }\n\n    // TouchEvent\n    set onTouchcancel(e: VugelEventListener<VugelMouseEvent> | undefined) {\n        this.nodeEvents.onTouchcancel = e;\n    }\n\n    set onTouchend(e: VugelEventListener<VugelMouseEvent> | undefined) {\n        this.nodeEvents.onTouchend = e;\n    }\n\n    set onTouchmove(e: VugelEventListener<VugelMouseEvent> | undefined) {\n        this.nodeEvents.onTouchmove = e;\n    }\n\n    set onTouchstart(e: VugelEventListener<VugelMouseEvent> | undefined) {\n        this.nodeEvents.onTouchstart = e;\n    }\n\n    // FocusEvent\n    set onFocusin(e: VugelEventListener<VugelFocusEvent> | undefined) {\n        this.nodeEvents.onFocusin = e;\n    }\n\n    set onFocusout(e: VugelEventListener<VugelFocusEvent> | undefined) {\n        this.nodeEvents.onFocusout = e;\n    }\n\n    set onFocus(e: VugelEventListener<VugelFocusEvent> | undefined) {\n        this.nodeEvents.onFocus = e;\n    }\n\n    set onBlur(e: VugelEventListener<VugelFocusEvent> | undefined) {\n        this.nodeEvents.onBlur = e;\n    }\n\n    // KeyboardEvent\n    set onKeypress(e: VugelEventListener<VugelKeyboardEvent> | undefined) {\n        this.nodeEvents.onKeypress = e;\n    }\n\n    set onKeydown(e: VugelEventListener<VugelKeyboardEvent> | undefined) {\n        this.nodeEvents.onKeydown = e;\n    }\n\n    set onKeyup(e: VugelEventListener<VugelKeyboardEvent> | undefined) {\n        this.nodeEvents.onKeyup = e;\n    }\n}\n\nexport function ensureColor(v: any): number {\n    return ensureInt(v);\n}\n\nexport function ensureInt(v: any): number {\n    if (typeof v === \"number\") {\n        return v;\n    } else {\n        return parseInt(v as any) || 0;\n    }\n}\n\nexport function ensureFloat(v: any): number {\n    if (typeof v === \"number\") {\n        return v;\n    } else {\n        return parseFloat(v as any) || 0.0;\n    }\n}\n\nexport function ensureBoolean(v: any): boolean {\n    return v !== \"false\" && !!v;\n}\n\nexport function isString(value: any): value is string {\n    return typeof value === \"string\";\n}\n\nexport function parseFloatStrict(value: string) {\n    if (/^(-|\\+)?([0-9]+(\\.[0-9]+)?|Infinity)$/.test(value)) return Number(value);\n    return NaN;\n}\n\nexport function convertRelValue(v: number | RelFunction | string, argName: string) {\n    if (isString(v)) {\n        const floatValue = parseFloatStrict(v);\n        if (isNaN(floatValue)) {\n            // Convert to function.\n            return convertToRelFunction(v, argName);\n        } else {\n            return floatValue;\n        }\n    } else {\n        return isFunction(v) ? v : ensureFloat(v);\n    }\n}\n\nexport function convertToRelFunction(body: string, argName: string): RelFunction {\n    return new Function(argName, `return ${body}`) as RelFunction;\n}\n\ntype RelFunction = (v: number) => number;\n\nconst isFunction = (val: unknown): val is Function => typeof val === \"function\";\n","export * from \"./Drawing\";\nexport * from \"./DynamicSizeTexture\";\nexport * from \"./Picture\";\nexport * from \"./Rectangle\";\nexport * from \"./StyledRectangle\";\nexport * from \"./Svg\";\nexport * from \"./TextTexture\";\nexport * from \"./TextTextureSettings\";\nexport * from \"./Texture\";\n","export class ColorUtils {\n    static rgb(r: number, g: number, b: number) {\n        return (r << 16) + (g << 8) + b + 255 * 16777216;\n    }\n\n    static rgba(r: number, g: number, b: number, a: number) {\n        return (r << 16) + (g << 8) + b + ((a * 255) | 0) * 16777216;\n    }\n\n    static getRgbString(color: number) {\n        const r = ((color / 65536) | 0) % 256;\n        const g = ((color / 256) | 0) % 256;\n        const b = color % 256;\n        return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n    }\n\n    static getRgbaString(color: number): string {\n        const r = ((color / 65536) | 0) % 256;\n        const g = ((color / 256) | 0) % 256;\n        const b = color % 256;\n        const a = ((color / 16777216) | 0) / 255;\n        return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + a.toFixed(4) + \")\";\n    }\n\n    static getRgbaStringFromArray(color: number[]) {\n        const r = Math.floor(color[0] * 255);\n        const g = Math.floor(color[1] * 255);\n        const b = Math.floor(color[2] * 255);\n        const a = Math.floor(color[3] * 255) / 255;\n        return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + a.toFixed(4) + \")\";\n    }\n\n    static getRgbaComponentsNormalized(argb: number) {\n        const r = ((argb / 65536) | 0) % 256;\n        const g = ((argb / 256) | 0) % 256;\n        const b = argb % 256;\n        const a = (argb / 16777216) | 0;\n        return [r / 255, g / 255, b / 255, a / 255];\n    }\n\n    static getRgbComponentsNormalized(argb: number) {\n        const r = ((argb / 65536) | 0) % 256;\n        const g = ((argb / 256) | 0) % 256;\n        const b = argb % 256;\n        return [r / 255, g / 255, b / 255];\n    }\n\n    static getRgbaComponents(argb: number) {\n        const r = ((argb / 65536) | 0) % 256;\n        const g = ((argb / 256) | 0) % 256;\n        const b = argb % 256;\n        const a = (argb / 16777216) | 0;\n        return [r, g, b, a];\n    }\n\n    static getArgbNumber(rgba: number[]) {\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\n        if (v < 0) {\n            v = 0xffffffff + v + 1;\n        }\n        return v;\n    }\n\n    static mergeColors(c1: number, c2: number, p: number) {\n        const r1 = ((c1 / 65536) | 0) % 256;\n        const g1 = ((c1 / 256) | 0) % 256;\n        const b1 = c1 % 256;\n        const a1 = (c1 / 16777216) | 0;\n\n        const r2 = ((c2 / 65536) | 0) % 256;\n        const g2 = ((c2 / 256) | 0) % 256;\n        const b2 = c2 % 256;\n        const a2 = (c2 / 16777216) | 0;\n\n        const r = r1 * p + r2 * (1 - p);\n        const g = g1 * p + g2 * (1 - p);\n        const b = b1 * p + b2 * (1 - p);\n        const a = a1 * p + a2 * (1 - p);\n\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\n    }\n\n    static mergeMultiColors(c: number[], p: number[]) {\n        let r = 0;\n        let g = 0;\n        let b = 0;\n        let a = 0;\n        let t = 0;\n        const n = c.length;\n        for (let i = 0; i < n; i++) {\n            const r1 = ((c[i] / 65536) | 0) % 256;\n            const g1 = ((c[i] / 256) | 0) % 256;\n            const b1 = c[i] % 256;\n            const a1 = (c[i] / 16777216) | 0;\n            r += r1 * p[i];\n            g += g1 * p[i];\n            b += b1 * p[i];\n            a += a1 * p[i];\n            t += p[i];\n        }\n\n        t = 1 / t;\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\n    }\n\n    static mergeMultiColorsEqual(c: number[]) {\n        let r = 0;\n        let g = 0;\n        let b = 0;\n        let a = 0;\n        let t = 0;\n        const n = c.length;\n        for (let i = 0; i < n; i++) {\n            const r1 = ((c[i] / 65536) | 0) % 256;\n            const g1 = ((c[i] / 256) | 0) % 256;\n            const b1 = c[i] % 256;\n            const a1 = (c[i] / 16777216) | 0;\n            r += r1;\n            g += g1;\n            b += b1;\n            a += a1;\n            t += 1.0;\n        }\n\n        t = 1 / t;\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\n    }\n\n    static mergeColorAlpha(c: number, alpha: number) {\n        const a = (((c / 16777216) | 0) * alpha) | 0;\n        return (\n            (((((c >> 16) & 0xff) * a) / 255) & 0xff) +\n            ((((c & 0xff00) * a) / 255) & 0xff00) +\n            (((((c & 0xff) << 16) * a) / 255) & 0xff0000) +\n            (a << 24)\n        );\n    }\n}\n","import { handlers } from \"./handlers/handlers\";\nimport { Constructor } from \"../util/types\";\n\nexport class Patcher {\n    static createObject<T>(settings: any, defaultType: Constructor<T> | undefined, ...cargs: any[]): T {\n        let object;\n        if (settings.type) {\n            object = new settings.type(...cargs);\n        } else {\n            if (!defaultType) {\n                throw new Error(\"No default type specified\");\n            }\n            object = new defaultType(...cargs);\n        }\n\n        this.patchObject(object, settings);\n\n        return object;\n    }\n\n    static patchObject(obj: any, settings: object) {\n        const names = Object.keys(settings);\n        for (let i = 0, n = names.length; i < n; i++) {\n            const name = names[i];\n            const value = (settings as any)[name];\n            this.patchObjectProperty(obj, name, value);\n        }\n    }\n\n    static patchObjectProperty(obj: any, name: string, value: any) {\n        const handler = this.getHandler(obj, name);\n        if (handler) {\n            handler.handle(obj, value);\n        } else {\n            this.patchSimpleObjectProperty(obj, name, value);\n        }\n    }\n\n    static patchSimpleObjectProperty(obj: any, name: string, value: any) {\n        if (name !== \"type\") {\n            obj[name] = value;\n        }\n    }\n\n    static getHandler(obj: any, prop: string) {\n        return handlers.find((handler) => handler.matches(obj, prop));\n    }\n}\n","export * from \"./Grayscale\";\nexport * from \"./Rounded\";\nexport * from \"./BoxBlur\";\nexport * from \"./Shader\";\n","import { CoreContext } from \"./core/CoreContext\";\nimport { ElementCore } from \"./core/ElementCore\";\nimport { WebGLShader } from \"../renderer/webgl/WebGLShader\";\nimport { Constructor } from \"../util/types\";\nimport { C2dShader } from \"../renderer/c2d/C2dShader\";\n\nexport class Shader {\n    // The (enabled) elements that use this shader.\n    private _elements = new Set<ElementCore>();\n\n    constructor(protected context: CoreContext) {}\n\n    static getWebGL(): Constructor<WebGLShader> | undefined {\n        return undefined;\n    }\n\n    static getC2d(): Constructor<C2dShader> | undefined {\n        return undefined;\n    }\n\n    addElement(elementCore: ElementCore) {\n        this._elements.add(elementCore);\n    }\n\n    removeElement(elementCore: ElementCore) {\n        this._elements.delete(elementCore);\n        if (!this._elements) {\n            this.cleanup();\n        }\n    }\n\n    redraw() {\n        this._elements.forEach((elementCore) => {\n            elementCore.setHasRenderUpdates(2);\n        });\n    }\n\n    useDefault() {\n        // Should return true if this shader is configured (using it's properties) to not have any effect.\n        // This may allow the render engine to avoid unnecessary shader program switches or even texture copies.\n        return false;\n    }\n\n    addEmpty() {\n        // Draws this shader even if there are no quads to be added.\n        // This is handy for custom shaders.\n        return false;\n    }\n\n    cleanup() {\n        // Called when no more enabled elements have this shader.\n    }\n}\n","import { C2dShader } from \"../C2dShader\";\nimport { ColorUtils } from \"../../../tree/ColorUtils\";\nimport { C2dRenderer } from \"../C2dRenderer\";\nimport { C2dCoreQuadOperation } from \"../C2dCoreQuadOperation\";\nimport { C2dRenderTexture } from \"../C2dRenderTexture\";\nimport { ElementCore } from \"../../../tree/core/ElementCore\";\nimport { C2dNativeTexture } from \"../C2dNativeTexture\";\n\nexport class C2dDefaultShader extends C2dShader {\n    private _rectangleTexture = this.context.stage.rectangleTexture.source!.nativeTexture;\n    private _tintManager = (this.context.stage.renderer as C2dRenderer).tintManager;\n\n    draw(operation: C2dCoreQuadOperation, target: C2dRenderTexture) {\n        const length = operation.length;\n        for (let i = 0; i < length; i++) {\n            const tx = operation.getTexture(i) as C2dNativeTexture;\n            const elementCore = operation.getElementCore(i);\n            const rc = operation.getRenderContext(i);\n            const white = operation.getWhite(i);\n            const stc = operation.getSimpleTc(i);\n\n            const context = target.context;\n\n            const pixelRatio = this.context.stage.getPixelRatio();\n            context.setTransform(\n                rc.ta * pixelRatio,\n                rc.tc * pixelRatio,\n                rc.tb * pixelRatio,\n                rc.td * pixelRatio,\n                rc.px * pixelRatio,\n                rc.py * pixelRatio,\n            );\n\n            const rect = tx === this._rectangleTexture;\n            const info = { operation, target, index: i, rect };\n\n            if (rect) {\n                // Check for gradient.\n                if (white) {\n                    context.fillStyle = \"white\";\n                } else {\n                    this._setColorGradient(context, elementCore);\n                }\n\n                context.globalAlpha = rc.alpha;\n                this._beforeDrawEl(info);\n                context.fillRect(0, 0, elementCore.getLayoutW(), elementCore.getLayoutH());\n                this._afterDrawEl(info);\n                context.globalAlpha = 1.0;\n            } else {\n                // @todo: set image smoothing based on the texture.\n\n                // @todo: optimize by registering whether identity texcoords are used.\n                context.globalAlpha = rc.alpha;\n                this._beforeDrawEl(info);\n\n                // @todo: test if rounding yields better performance.\n\n                // Notice that simple texture coords can be turned on even though vc._ulx etc are not simple, because\n                //  we are rendering a render-to-texture (texcoords were stashed). Same is true for 'white' color btw.\n                const sourceX = stc ? 0 : elementCore.ulx * tx.w;\n                const sourceY = stc ? 0 : elementCore.uly * tx.h;\n                const sourceW = (stc ? 1 : elementCore.brx - elementCore.ulx) * tx.w;\n                const sourceH = (stc ? 1 : elementCore.bry - elementCore.uly) * tx.h;\n\n                const colorize = !white;\n                if (colorize) {\n                    // @todo: cache the tint texture for better performance.\n\n                    // Draw to intermediate texture with background color/gradient.\n                    // This prevents us from having to create a lot of render texture canvases.\n\n                    // Notice that we don't support (non-rect) gradients, only color tinting for c2d. We'll just take the average color.\n                    let color = elementCore.colorUl;\n                    if (\n                        elementCore.colorUl !== elementCore.colorUr ||\n                        elementCore.colorUr !== elementCore.colorBl ||\n                        elementCore.colorBr !== elementCore.colorBl\n                    ) {\n                        color = ColorUtils.mergeMultiColorsEqual([\n                            elementCore.colorUl,\n                            elementCore.colorUr,\n                            elementCore.colorBl,\n                            elementCore.colorBr,\n                        ]);\n                    }\n\n                    const alpha = ((color / 16777216) | 0) / 255.0;\n                    context.globalAlpha *= alpha;\n\n                    const rgb = color & 0x00ffffff;\n                    const tintTexture = this._tintManager.getTintTexture(tx, rgb);\n\n                    // Actually draw result.\n                    context.fillStyle = \"white\";\n                    context.drawImage(\n                        tintTexture as any,\n                        sourceX,\n                        sourceY,\n                        sourceW,\n                        sourceH,\n                        0,\n                        0,\n                        elementCore.getLayoutW(),\n                        elementCore.getLayoutH(),\n                    );\n                } else {\n                    context.fillStyle = \"white\";\n                    context.drawImage(\n                        tx as any,\n                        sourceX,\n                        sourceY,\n                        sourceW,\n                        sourceH,\n                        0,\n                        0,\n                        elementCore.getLayoutW(),\n                        elementCore.getLayoutH(),\n                    );\n                }\n                this._afterDrawEl(info);\n                context.globalAlpha = 1.0;\n            }\n        }\n    }\n\n    _setColorGradient(\n        context: CanvasRenderingContext2D,\n        core: ElementCore,\n        w = core.getLayoutW(),\n        h = core.getLayoutH(),\n        transparency = true,\n    ) {\n        const color = core.colorUl;\n        let gradient;\n\n        if (core.colorUl === core.colorUr) {\n            if (core.colorBl === core.colorBr) {\n                if (core.colorUl === core.colorBl) {\n                    // Single color.\n                } else {\n                    // Vertical gradient.\n                    gradient = context.createLinearGradient(0, 0, 0, h);\n                    if (transparency) {\n                        gradient.addColorStop(0, ColorUtils.getRgbaString(core.colorUl));\n                        gradient.addColorStop(1, ColorUtils.getRgbaString(core.colorBl));\n                    } else {\n                        gradient.addColorStop(0, ColorUtils.getRgbString(core.colorUl));\n                        gradient.addColorStop(1, ColorUtils.getRgbString(core.colorBl));\n                    }\n                }\n            } else {\n                // Not supported gradient.\n            }\n        } else {\n            if (core.colorUl === core.colorBl && core.colorUr === core.colorBr) {\n                // Horizontal gradient.\n                gradient = context.createLinearGradient(0, 0, w, 0);\n                if (transparency) {\n                    gradient.addColorStop(0, ColorUtils.getRgbaString(core.colorUl));\n                    gradient.addColorStop(1, ColorUtils.getRgbaString(core.colorBr));\n                } else {\n                    gradient.addColorStop(0, ColorUtils.getRgbString(core.colorUl));\n                    gradient.addColorStop(1, ColorUtils.getRgbString(core.colorBr));\n                }\n            }\n        }\n\n        if (gradient) {\n            context.fillStyle = gradient;\n        } else {\n            context.fillStyle = transparency ? ColorUtils.getRgbaString(color) : ColorUtils.getRgbString(color);\n        }\n    }\n\n    _beforeDrawEl(info: any) {}\n\n    _afterDrawEl(info: any) {}\n}\n","/**\n * Render tree node.\n * Copyright Metrological, 2017\n * Copyright Bas van Meurs, 2020\n */\n\nimport { ElementCore, FunctionH, FunctionW, FunctionX, FunctionY } from \"./core/ElementCore\";\nimport { Texture } from \"./Texture\";\nimport { ElementChildList } from \"./ElementChildList\";\nimport { Stage } from \"./Stage\";\nimport { ElementTexturizer } from \"./core/ElementTexturizer\";\nimport {\n    ElementListeners,\n    ElementEventCallback,\n    ElementResizeEventCallback,\n    ElementTextureErrorEventCallback,\n    ElementTextureEventCallback,\n} from \"./ElementListeners\";\nimport { AlignContentMode, AlignItemsMode, FlexDirection, JustifyContentMode } from \"flexbox.js\";\n\nimport { Utils } from \"./Utils\";\nimport { Shader } from \"./Shader\";\n\nexport class Element<DATA = any> {\n    private static id: number = 1;\n\n    public readonly stage: Stage;\n\n    private readonly id: number = Element.id++;\n\n    private readonly _core: ElementCore;\n\n    private _ref?: string = undefined;\n\n    // An element is attached if it is a descendant of the stage root.\n    private _attached: boolean = false;\n\n    // An element is enabled when it is attached and it is visible (worldAlpha > 0).\n    private _enabled: boolean = false;\n\n    // An element is active when it is enabled and it is within bounds.\n    private _active: boolean = false;\n\n    private _parent?: Element = undefined;\n\n    // The texture that is currently set.\n    private _texture?: Texture = undefined;\n\n    // The currently displayed texture. May differ from this.texture while loading.\n    private _displayedTexture?: Texture = undefined;\n\n    // Contains the child elements.\n    private _childList?: ElementChildList = undefined;\n\n    private listeners?: ElementListeners = undefined;\n\n    // Custom data\n    public data?: DATA = undefined;\n\n    constructor(stage: Stage) {\n        this.stage = stage;\n\n        this._core = new ElementCore(this);\n    }\n\n    private getListeners(): ElementListeners {\n        if (!this.listeners) {\n            this.listeners = new ElementListeners();\n        }\n        return this.listeners;\n    }\n\n    set ref(ref: string | undefined) {\n        if (this._ref !== ref) {\n            if (this._ref !== undefined) {\n                if (this._parent !== undefined) {\n                    this._parent._children.clearRef(this._ref);\n                }\n            }\n\n            this._ref = ref;\n\n            if (this._ref) {\n                if (this._parent) {\n                    this._parent._children.setRef(this._ref, this);\n                }\n            }\n        }\n    }\n\n    get ref(): string | undefined {\n        return this._ref;\n    }\n\n    get core(): ElementCore {\n        return this._core;\n    }\n\n    setAsRoot(): void {\n        this._core.setupAsRoot();\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n    }\n\n    get isRoot(): boolean {\n        return this._core.isRoot;\n    }\n\n    _setParent(parent: Element | undefined) {\n        if (this._parent === parent) return;\n\n        this._parent = parent;\n\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n\n        if (this.isRoot && parent) {\n            this._throwError(\"Root should not be added as a child! Results are unspecified!\");\n        }\n    }\n\n    get attached(): boolean {\n        return this._attached;\n    }\n\n    get enabled(): boolean {\n        return this._enabled;\n    }\n\n    get active(): boolean {\n        return this._active;\n    }\n\n    private _isAttached(): boolean {\n        return this._parent ? this._parent._attached : this.isRoot;\n    }\n\n    private _isEnabled(): boolean {\n        return this._core.visible && this._core.alpha > 0 && (this._parent ? this._parent._enabled : this.isRoot);\n    }\n\n    private _isActive(): boolean {\n        return this._isEnabled() && this.isWithinBoundsMargin();\n    }\n\n    protected _updateAttachedFlag(): void {\n        const newAttached = this._isAttached();\n        if (this._attached !== newAttached) {\n            this._attached = newAttached;\n\n            if (newAttached) {\n                this._onSetup();\n            }\n\n            const children = this._children.getItems();\n            if (children) {\n                const m = children.length;\n                if (m > 0) {\n                    for (let i = 0; i < m; i++) {\n                        children[i]._updateAttachedFlag();\n                    }\n                }\n            }\n\n            if (newAttached) {\n                this._onAttach();\n            } else {\n                this._onDetach();\n            }\n        }\n    }\n\n    public _updateEnabledFlag(): void {\n        const newEnabled = this._isEnabled();\n        if (this._enabled !== newEnabled) {\n            if (newEnabled) {\n                this._onEnabled();\n                this._setEnabledFlag();\n            } else {\n                this._onDisabled();\n                this._unsetEnabledFlag();\n            }\n\n            const children = this._children.getItems();\n            if (children) {\n                const m = children.length;\n                if (m > 0) {\n                    for (let i = 0; i < m; i++) {\n                        children[i]._updateEnabledFlag();\n                    }\n                }\n            }\n        }\n    }\n\n    private _setEnabledFlag(): void {\n        this._enabled = true;\n\n        // Force re-check of texture because dimensions might have changed (cutting).\n        this._updateTextureDimensions();\n        this.updateTextureCoords();\n\n        if (this._texture) {\n            this._texture.addElement(this);\n        }\n\n        if (this.isWithinBoundsMargin()) {\n            this._setActiveFlag();\n        }\n\n        if (this._core.shader) {\n            this._core.shader.addElement(this._core);\n        }\n    }\n\n    private _unsetEnabledFlag(): void {\n        if (this._active) {\n            this._unsetActiveFlag();\n        }\n\n        if (this._texture) {\n            this._texture.removeElement(this);\n        }\n\n        if (this._core.shader) {\n            this._core.shader.removeElement(this._core);\n        }\n\n        this._enabled = false;\n    }\n\n    private _setActiveFlag(): void {\n        this._active = true;\n\n        // This must happen before enabling the texture, because it may already be loaded or load directly.\n        if (this._texture) {\n            this._texture.incActiveCount();\n        }\n\n        if (this._texture) {\n            this._enableTexture();\n        }\n        this._onActive();\n    }\n\n    private _unsetActiveFlag(): void {\n        if (this._texture) {\n            this._texture.decActiveCount();\n        }\n\n        this._active = false;\n        if (this._texture) {\n            this._disableTexture();\n        }\n\n        if (this._hasTexturizer()) {\n            this.texturizer.deactivate();\n        }\n\n        this._onInactive();\n    }\n\n    public set onSetup(v: ElementEventCallback | undefined) {\n        this.getListeners().onSetup = v;\n    }\n\n    public get onSetup() {\n        return this.getListeners().onSetup;\n    }\n\n    protected _onSetup(): void {\n        if (this.listeners && this.listeners.onSetup) {\n            this.listeners.onSetup({ element: this });\n        }\n    }\n\n    public set onAttach(v: ElementEventCallback | undefined) {\n        this.getListeners().onAttach = v;\n    }\n\n    public get onAttach() {\n        return this.getListeners().onAttach;\n    }\n\n    protected _onAttach(): void {\n        if (this.listeners && this.listeners.onAttach) {\n            this.listeners.onAttach({ element: this });\n        }\n    }\n\n    public set onDetach(v: ElementEventCallback | undefined) {\n        this.getListeners().onDetach = v;\n    }\n\n    public get onDetach() {\n        return this.getListeners().onDetach;\n    }\n\n    protected _onDetach(): void {\n        if (this.listeners && this.listeners.onDetach) {\n            this.listeners.onDetach({ element: this });\n        }\n    }\n\n    public set onEnabled(v: ElementEventCallback | undefined) {\n        this.getListeners().onEnabled = v;\n    }\n\n    public get onEnabled() {\n        return this.getListeners().onEnabled;\n    }\n\n    protected _onEnabled(): void {\n        if (this.listeners && this.listeners.onEnabled) {\n            this.listeners.onEnabled({ element: this });\n        }\n    }\n\n    public set onDisabled(v: ElementEventCallback | undefined) {\n        this.getListeners().onDisabled = v;\n    }\n\n    public get onDisabled() {\n        return this.getListeners().onDisabled;\n    }\n\n    protected _onDisabled(): void {\n        if (this.listeners && this.listeners.onDisabled) {\n            this.listeners.onDisabled({ element: this });\n        }\n    }\n\n    public set onActive(v: ElementEventCallback | undefined) {\n        this.getListeners().onActive = v;\n    }\n\n    public get onActive() {\n        return this.getListeners().onActive;\n    }\n\n    protected _onActive(): void {\n        if (this.listeners && this.listeners.onActive) {\n            this.listeners.onActive({ element: this });\n        }\n    }\n\n    public set onInactive(v: ElementEventCallback | undefined) {\n        this.getListeners().onInactive = v;\n    }\n\n    public get onInactive() {\n        return this.getListeners().onInactive;\n    }\n\n    protected _onInactive(): void {\n        if (this.listeners && this.listeners.onInactive) {\n            this.listeners.onInactive({ element: this });\n        }\n    }\n\n    public set onTextureError(v: ElementTextureErrorEventCallback | undefined) {\n        this.getListeners().onTextureError = v;\n    }\n\n    public get onTextureError() {\n        return this.getListeners().onTextureError;\n    }\n\n    protected _onTextureError(loadError: Error, texture: Texture): void {\n        if (this.listeners && this.listeners.onTextureError) {\n            this.listeners.onTextureError({ element: this, texture, error: loadError });\n        }\n    }\n\n    public set onTextureLoaded(v: ElementTextureEventCallback | undefined) {\n        this.getListeners().onTextureLoaded = v;\n    }\n\n    public get onTextureLoaded() {\n        return this.getListeners().onTextureLoaded;\n    }\n\n    protected _onTextureLoaded(texture: Texture): void {\n        if (this.listeners && this.listeners.onTextureLoaded) {\n            this.listeners.onTextureLoaded({ element: this, texture });\n        }\n    }\n\n    public set onTextureUnloaded(v: ElementTextureEventCallback | undefined) {\n        this.getListeners().onTextureUnloaded = v;\n    }\n\n    public get onTextureUnloaded() {\n        return this.getListeners().onTextureUnloaded;\n    }\n\n    protected _onTextureUnloaded(texture: Texture): void {\n        if (this.listeners && this.listeners.onTextureUnloaded) {\n            this.listeners.onTextureUnloaded({ element: this, texture });\n        }\n    }\n\n    public set onResize(v: ElementResizeEventCallback | undefined) {\n        this.getListeners().onResize = v;\n    }\n\n    public get onResize() {\n        return this.getListeners().onResize;\n    }\n\n    public _onResize(w: number, h: number): void {\n        if (this.listeners && this.listeners.onResize) {\n            this.listeners.onResize({ element: this, w, h });\n        }\n    }\n\n    get renderWidth(): number {\n        return this._core.getRenderWidth();\n    }\n\n    get renderHeight(): number {\n        return this._core.getRenderHeight();\n    }\n\n    get layoutX(): number {\n        return this._core.getLayoutX();\n    }\n\n    get layoutY(): number {\n        return this._core.getLayoutY();\n    }\n\n    get layoutW(): number {\n        return this._core.getLayoutW();\n    }\n\n    get layoutH(): number {\n        return this._core.getLayoutH();\n    }\n\n    textureIsLoaded(): boolean {\n        return this._texture ? this._texture.isLoaded() : false;\n    }\n\n    loadTexture(): void {\n        if (this._texture) {\n            this._texture.load();\n\n            if (!this._texture.isUsed() || !this._isEnabled()) {\n                // As this element is invisible, loading the texture will have no effect on the dimensions of this element.\n                // To help the developers, automatically update the dimensions.\n                this._updateTextureDimensions();\n            }\n        }\n    }\n\n    private _enableTextureError(): void {\n        // txError event should automatically be re-triggered when a element becomes active.\n        const loadError = this._texture!.loadError;\n        if (loadError) {\n            this._onTextureError(loadError, this._texture!);\n        }\n    }\n\n    private _enableTexture(): void {\n        if (this._texture!.isLoaded()) {\n            this.setDisplayedTexture(this._texture);\n        } else {\n            // We don't want to retain the old image as it wasn't visible anyway.\n            this.setDisplayedTexture(undefined);\n\n            this._enableTextureError();\n        }\n    }\n\n    private _disableTexture(): void {\n        // We disable the displayed texture because, when the texture changes while invisible, we should use that w, h,\n        // mw, mh for checking within bounds.\n        this.setDisplayedTexture(undefined);\n    }\n\n    get texture(): Texture | undefined {\n        return this._texture;\n    }\n\n    set texture(v: Texture | undefined) {\n        let texture;\n        if (!v) {\n            texture = undefined;\n        } else {\n            texture = v;\n        }\n\n        const prevTexture = this._texture;\n        if (texture !== prevTexture) {\n            this._texture = texture as Texture;\n\n            if (this._texture) {\n                if (this._enabled) {\n                    this._texture.addElement(this);\n\n                    if (this.isWithinBoundsMargin()) {\n                        if (this._texture.isLoaded()) {\n                            this.setDisplayedTexture(this._texture);\n                        } else {\n                            this._enableTextureError();\n                        }\n                    }\n                }\n            } else {\n                // Make sure that current texture is cleared when the texture is explicitly set to undefined.\n                this.setDisplayedTexture(undefined);\n            }\n\n            if (prevTexture && prevTexture !== this._displayedTexture) {\n                prevTexture.removeElement(this);\n            }\n\n            this._updateTextureDimensions();\n        }\n    }\n\n    get displayedTexture(): Texture | undefined {\n        return this._displayedTexture;\n    }\n\n    setDisplayedTexture(v: Texture | undefined) {\n        const prevTexture = this._displayedTexture;\n\n        if (prevTexture && v !== prevTexture) {\n            if (this._texture !== prevTexture) {\n                // The old displayed texture is deprecated.\n                prevTexture.removeElement(this);\n            }\n        }\n\n        const prevSource = this._core.displayedTextureSource ? this._core.displayedTextureSource : undefined;\n        const sourceChanged = (v ? v.getSource() : undefined) !== prevSource;\n\n        this._displayedTexture = v;\n        this._updateTextureDimensions();\n\n        if (this._displayedTexture) {\n            if (sourceChanged) {\n                // We don't need to reference the displayed texture because it was already referenced (this.texture === this.displayedTexture).\n                this.updateTextureCoords();\n                this._core.setDisplayedTextureSource(this._displayedTexture.getSource());\n            }\n        } else {\n            this._core.setDisplayedTextureSource(undefined);\n        }\n\n        if (sourceChanged) {\n            if (this._displayedTexture) {\n                this._onTextureLoaded(this._displayedTexture);\n            } else if (prevTexture) {\n                this._onTextureUnloaded(prevTexture);\n            }\n        }\n    }\n\n    onTextureSourceLoaded(): void {\n        // This function is called when element is enabled, but we only want to set displayed texture for active elements.\n        if (this.active) {\n            // We may be dealing with a texture reloading, so we must force update.\n            this.setDisplayedTexture(this._texture);\n        }\n    }\n\n    onTextureSourceLoadError(loadError: Error): void {\n        this._onTextureError(loadError, this._texture!);\n    }\n\n    forceRenderUpdate(): void {\n        this._core.setHasRenderUpdates(3);\n    }\n\n    onDisplayedTextureClippingChanged(): void {\n        this._updateTextureDimensions();\n        this.updateTextureCoords();\n    }\n\n    onPixelRatioChanged(): void {\n        this._updateTextureDimensions();\n    }\n\n    _updateTextureDimensions(): void {\n        let w = 0;\n        let h = 0;\n        if (this._displayedTexture) {\n            w = this._displayedTexture.getRenderWidth();\n            h = this._displayedTexture.getRenderHeight();\n        } else if (this._texture) {\n            // Texture already loaded, but not yet updated (probably because this element is not active).\n            w = this._texture.getRenderWidth();\n            h = this._texture.getRenderHeight();\n        }\n\n        let unknownSize = false;\n        if (!w || !h) {\n            if (!this._displayedTexture && this._texture) {\n                // We use a 'max width' replacement instead in the ElementCore calcs.\n                // This makes sure that it is able to determine withinBounds.\n                w = w || this._texture.mw;\n                h = h || this._texture.mh;\n\n                if ((!w || !h) && this._texture.isAutosizeTexture()) {\n                    unknownSize = true;\n                }\n            }\n        }\n\n        this._core.setTextureDimensions(w, h, unknownSize);\n    }\n\n    public updateTextureCoords(): void {\n        if (this.displayedTexture) {\n            const displayedTexture = this.displayedTexture;\n            const displayedTextureSource = this.displayedTexture.getSource();\n\n            if (displayedTextureSource) {\n                let tx1 = 0;\n                let ty1 = 0;\n                let tx2 = 1.0;\n                let ty2 = 1.0;\n                if (displayedTexture.hasClipping()) {\n                    // Apply texture clipping.\n                    const w = displayedTextureSource.getRenderWidth();\n                    const h = displayedTextureSource.getRenderHeight();\n                    let iw;\n                    let ih;\n                    let rw;\n                    let rh;\n                    iw = 1 / w;\n                    ih = 1 / h;\n\n                    if (displayedTexture.pw) {\n                        rw = displayedTexture.pw * iw;\n                    } else {\n                        rw = (w - displayedTexture.px) * iw;\n                    }\n\n                    if (displayedTexture.ph) {\n                        rh = displayedTexture.ph * ih;\n                    } else {\n                        rh = (h - displayedTexture.py) * ih;\n                    }\n\n                    iw *= displayedTexture.px;\n                    ih *= displayedTexture.py;\n\n                    tx1 = iw;\n                    ty1 = ih;\n                    tx2 = tx2 * rw + iw;\n                    ty2 = ty2 * rh + ih;\n\n                    tx1 = Math.max(0, tx1);\n                    ty1 = Math.max(0, ty1);\n                    tx2 = Math.min(1, tx2);\n                    ty2 = Math.min(1, ty2);\n                }\n\n                this._core.setTextureCoords(tx1, ty1, tx2, ty2);\n            }\n        }\n    }\n\n    getCornerPoints(): number[] {\n        return this._core.getCornerPoints();\n    }\n\n    getByRef(ref: string) {\n        return this.childList.getByRef(ref);\n    }\n\n    getLocationString(): string {\n        const i = this._parent ? this._parent._children.getIndex(this) : \"R\";\n        let str = this._parent ? this._parent.getLocationString() : \"\";\n        if (this.ref) {\n            str += \":[\" + i + \"]\" + this.ref;\n        } else {\n            str += \":[\" + i + \"]#\" + this.id;\n        }\n        return str;\n    }\n\n    toString() {\n        const obj = this.getSettings();\n        return Element.getPrettyString(obj, \"\");\n    }\n\n    static getPrettyString(obj: any, indent: string) {\n        const children = obj.children;\n        delete obj.children;\n\n        // Convert singular json settings object.\n        const colorKeys = [\"color\", \"colorUl\", \"colorUr\", \"colorBl\", \"colorBr\"];\n        let str = JSON.stringify(obj, (k: string, v: number): string | number => {\n            if (colorKeys.indexOf(k) !== -1) {\n                return \"COLOR[\" + v.toString(16) + \"]\";\n            }\n            return v;\n        });\n        str = str.replace(/\"COLOR\\[([a-f0-9]{1,8})\\]\"/g, \"0x$1\");\n\n        if (children) {\n            let childStr = \"\";\n            if (Utils.isObjectLiteral(children)) {\n                const refs = Object.keys(children);\n                childStr = \"\";\n                for (let i = 0, n = refs.length; i < n; i++) {\n                    childStr += `\\n${indent}  \"${refs[i]}\":`;\n                    delete children[refs[i]].ref;\n                    childStr += Element.getPrettyString(children[refs[i]], indent + \"  \") + (i < n - 1 ? \",\" : \"\");\n                }\n                const isEmpty = str === \"{}\";\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + childStr + \"\\n\" + indent + \"}\";\n            } else {\n                const n = children.length;\n                childStr = \"[\";\n                for (let i = 0; i < n; i++) {\n                    childStr += Element.getPrettyString(children[i], indent + \"  \") + (i < n - 1 ? \",\" : \"\") + \"\\n\";\n                }\n                childStr += indent + \"]}\";\n                const isEmpty = str === \"{}\";\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + '\"children\":\\n' + indent + childStr + \"}\";\n            }\n        }\n\n        return str;\n    }\n\n    getSettings(): any {\n        const settings = this.getNonDefaults();\n\n        const children = this._children.getItems();\n        if (children) {\n            const n = children.length;\n            if (n) {\n                const childArray = [];\n                let missing = false;\n                for (let i = 0; i < n; i++) {\n                    childArray.push(children[i].getSettings());\n                    missing = missing || !children[i].ref;\n                }\n\n                if (!missing) {\n                    settings.children = {};\n                    childArray.forEach((child) => {\n                        settings.children[child.ref] = child;\n                    });\n                } else {\n                    settings.children = childArray;\n                }\n            }\n        }\n\n        settings.id = this.id;\n\n        return settings;\n    }\n\n    getNonDefaults(): any {\n        const settings: any = {};\n\n        if (this.constructor !== Element) {\n            settings.type = this.constructor.name;\n        }\n\n        if (this._ref) {\n            settings.ref = this._ref;\n        }\n\n        if (this.x !== 0) settings.x = this.x;\n        if (this.y !== 0) settings.y = this.y;\n        if (this.w !== 0) settings.w = this.w;\n        if (this.h !== 0) settings.h = this.h;\n\n        if (this.scaleX === this.scaleY) {\n            if (this.scaleX !== 1) settings.scale = this.scaleX;\n        } else {\n            if (this.scaleX !== 1) settings.scaleX = this.scaleX;\n            if (this.scaleY !== 1) settings.scaleY = this.scaleY;\n        }\n\n        if (this.pivotX === this.pivotY) {\n            if (this.pivotX !== 0.5) settings.pivot = this.pivotX;\n        } else {\n            if (this.pivotX !== 0.5) settings.pivotX = this.pivotX;\n            if (this.pivotY !== 0.5) settings.pivotY = this.pivotY;\n        }\n\n        if (this.mountX === this.mountY) {\n            if (this.mountX !== 0) settings.mount = this.mountX;\n        } else {\n            if (this.mountX !== 0) settings.mountX = this.mountX;\n            if (this.mountY !== 0) settings.mountY = this.mountY;\n        }\n\n        if (this.alpha !== 1) settings.alpha = this.alpha;\n\n        if (!this.visible) settings.visible = false;\n\n        if (this.rotation !== 0) settings.rotation = this.rotation;\n\n        if (this.colorUl === this.colorUr && this.colorBl === this.colorBr && this.colorUl === this.colorBl) {\n            if (this.colorUl !== 0xffffffff) settings.color = this.colorUl.toString(16);\n        } else {\n            if (this.colorUl !== 0xffffffff) settings.colorUl = this.colorUl.toString(16);\n            if (this.colorUr !== 0xffffffff) settings.colorUr = this.colorUr.toString(16);\n            if (this.colorBl !== 0xffffffff) settings.colorBl = this.colorBl.toString(16);\n            if (this.colorBr !== 0xffffffff) settings.colorBr = this.colorBr.toString(16);\n        }\n\n        if (this.zIndex) settings.zIndex = this.zIndex;\n\n        if (this.forceZIndexContext) settings.forceZIndexContext = true;\n\n        if (this.clipping) settings.clipping = this.clipping;\n\n        if (!this.clipbox) settings.clipbox = this.clipbox;\n\n        if (this._texture) {\n            const tnd = this._texture.getNonDefaults();\n            if (Object.keys(tnd).length) {\n                settings.texture = tnd;\n            }\n        }\n\n        if (this._hasTexturizer()) {\n            if (this.texturizer.enabled) {\n                settings.renderToTexture = this.texturizer.enabled;\n            }\n            if (this.texturizer.lazy) {\n                settings.renderToTextureLazy = true;\n            }\n            if (this.texturizer.colorize) {\n                settings.colorizeResultTexture = this.texturizer.colorize;\n            }\n            if (this.texturizer.renderOffscreen) {\n                settings.renderOffscreen = this.texturizer.renderOffscreen;\n            }\n        }\n\n        return settings;\n    }\n\n    isWithinBoundsMargin() {\n        return this._core.isWithinBoundsMargin();\n    }\n\n    _enableWithinBoundsMargin() {\n        // Iff enabled, this toggles the active flag.\n        if (this._enabled) {\n            this._setActiveFlag();\n        }\n    }\n\n    _disableWithinBoundsMargin() {\n        // Iff active, this toggles the active flag.\n        if (this._active) {\n            this._unsetActiveFlag();\n        }\n    }\n\n    set boundsMargin(v: number | undefined) {\n        if (v === undefined) {\n            this._core.boundsMargin = undefined;\n        } else {\n            this._core.boundsMargin = [v, v, v, v];\n        }\n    }\n\n    get boundsMargin() {\n        return this._core.boundsMargin ? this._core.boundsMargin[0] : undefined;\n    }\n\n    set boundsMarginLeft(v: number) {\n        if (!this._core.boundsMargin) {\n            this._core.boundsMargin = [v, 100, 100, 100];\n        } else {\n            this._core.boundsMargin[0] = v;\n        }\n    }\n\n    get boundsMarginLeft() {\n        return this._core.boundsMargin ? this._core.boundsMargin[0] : 100;\n    }\n\n    set boundsMarginTop(v: number) {\n        if (!this._core.boundsMargin) {\n            this._core.boundsMargin = [100, v, 100, 100];\n        } else {\n            this._core.boundsMargin[1] = v;\n        }\n    }\n\n    get boundsMarginTop() {\n        return this._core.boundsMargin ? this._core.boundsMargin[1] : 100;\n    }\n\n    set boundsMarginRight(v: number) {\n        if (!this._core.boundsMargin) {\n            this._core.boundsMargin = [100, 100, v, 100];\n        } else {\n            this._core.boundsMargin[2] = v;\n        }\n    }\n\n    get boundsMarginRight() {\n        return this._core.boundsMargin ? this._core.boundsMargin[2] : 100;\n    }\n\n    set boundsMarginBottom(v: number) {\n        if (!this._core.boundsMargin) {\n            this._core.boundsMargin = [100, 100, 100, v];\n        } else {\n            this._core.boundsMargin[3] = v;\n        }\n    }\n\n    get boundsMarginBottom() {\n        return this._core.boundsMargin ? this._core.boundsMargin[3] : 100;\n    }\n\n    get x(): number | FunctionX {\n        return this._core.x;\n    }\n\n    set x(v: number | FunctionX) {\n        this._core.x = v;\n    }\n\n    get y(): number | FunctionY {\n        return this._core.y;\n    }\n\n    set y(v: number | FunctionY) {\n        this._core.y = v;\n    }\n\n    get w(): number | FunctionW {\n        return this._core.w;\n    }\n\n    set w(v) {\n        this._core.w = v;\n    }\n\n    get h(): number | FunctionH {\n        return this._core.h;\n    }\n\n    set h(v) {\n        this._core.h = v;\n    }\n\n    get scaleX() {\n        return this._core.scaleX;\n    }\n\n    set scaleX(v) {\n        this._core.scaleX = v;\n    }\n\n    get scaleY() {\n        return this._core.scaleY;\n    }\n\n    set scaleY(v) {\n        this._core.scaleY = v;\n    }\n\n    get scale() {\n        return this._core.scale;\n    }\n\n    set scale(v) {\n        this._core.scale = v;\n    }\n\n    get pivotX() {\n        return this._core.pivotX;\n    }\n\n    set pivotX(v) {\n        this._core.pivotX = v;\n    }\n\n    get pivotY() {\n        return this._core.pivotY;\n    }\n\n    set pivotY(v) {\n        this._core.pivotY = v;\n    }\n\n    get pivot() {\n        return this._core.pivot;\n    }\n\n    set pivot(v) {\n        this._core.pivot = v;\n    }\n\n    get mountX() {\n        return this._core.mountX;\n    }\n\n    set mountX(v) {\n        this._core.mountX = v;\n    }\n\n    get mountY() {\n        return this._core.mountY;\n    }\n\n    set mountY(v) {\n        this._core.mountY = v;\n    }\n\n    get mount() {\n        return this._core.mount;\n    }\n\n    set mount(v) {\n        this._core.mount = v;\n    }\n\n    get rotation() {\n        return this._core.rotation;\n    }\n\n    set rotation(v) {\n        this._core.rotation = v;\n    }\n\n    get alpha() {\n        return this._core.alpha;\n    }\n\n    set alpha(v) {\n        this._core.alpha = v;\n    }\n\n    get visible() {\n        return this._core.visible;\n    }\n\n    set visible(v) {\n        this._core.visible = v;\n    }\n\n    get colorUl() {\n        return this._core.colorUl;\n    }\n\n    set colorUl(v) {\n        this._core.colorUl = v;\n    }\n\n    get colorUr() {\n        return this._core.colorUr;\n    }\n\n    set colorUr(v) {\n        this._core.colorUr = v;\n    }\n\n    get colorBl() {\n        return this._core.colorBl;\n    }\n\n    set colorBl(v) {\n        this._core.colorBl = v;\n    }\n\n    get colorBr() {\n        return this._core.colorBr;\n    }\n\n    set colorBr(v) {\n        this._core.colorBr = v;\n    }\n\n    get color() {\n        return this._core.colorUl;\n    }\n\n    set color(v) {\n        if (this.colorUl !== v || this.colorUr !== v || this.colorBl !== v || this.colorBr !== v) {\n            this.colorUl = v;\n            this.colorUr = v;\n            this.colorBl = v;\n            this.colorBr = v;\n        }\n    }\n\n    get colorTop() {\n        return this.colorUl;\n    }\n\n    set colorTop(v) {\n        if (this.colorUl !== v || this.colorUr !== v) {\n            this.colorUl = v;\n            this.colorUr = v;\n        }\n    }\n\n    get colorBottom() {\n        return this.colorBl;\n    }\n\n    set colorBottom(v) {\n        if (this.colorBl !== v || this.colorBr !== v) {\n            this.colorBl = v;\n            this.colorBr = v;\n        }\n    }\n\n    get colorLeft() {\n        return this.colorUl;\n    }\n\n    set colorLeft(v) {\n        if (this.colorUl !== v || this.colorBl !== v) {\n            this.colorUl = v;\n            this.colorBl = v;\n        }\n    }\n\n    get colorRight() {\n        return this.colorUr;\n    }\n\n    set colorRight(v) {\n        if (this.colorUr !== v || this.colorBr !== v) {\n            this.colorUr = v;\n            this.colorBr = v;\n        }\n    }\n\n    get zIndex() {\n        return this._core.zIndex;\n    }\n    set zIndex(v) {\n        this._core.zIndex = v;\n    }\n\n    get forceZIndexContext() {\n        return this._core.forceZIndexContext;\n    }\n    set forceZIndexContext(v) {\n        this._core.forceZIndexContext = v;\n    }\n\n    get clipping() {\n        return this._core.clipping;\n    }\n    set clipping(v) {\n        this._core.clipping = v;\n    }\n\n    get clipbox() {\n        return this._core.clipbox;\n    }\n    set clipbox(v) {\n        this._core.clipbox = v;\n    }\n\n    get skipInLayout() {\n        return this._core.skipInLayout;\n    }\n\n    set skipInLayout(v: boolean) {\n        this._core.skipInLayout = v;\n    }\n\n    get _children(): ElementChildList {\n        if (!this._childList) {\n            this._childList = new ElementChildList(this);\n        }\n        return this._childList;\n    }\n\n    get childList() {\n        if (!this._allowChildrenAccess()) {\n            this._throwError(\"Direct access to children is not allowed in \" + this.getLocationString());\n        }\n        return this._children;\n    }\n\n    hasChildren() {\n        return this._allowChildrenAccess() && this._childList && this._childList.length > 0;\n    }\n\n    _allowChildrenAccess() {\n        return true;\n    }\n\n    get children() {\n        return this.childList.getItems();\n    }\n\n    set children(items: Element[]) {\n        this.childList.setItems(items);\n    }\n\n    get p() {\n        return this._parent;\n    }\n\n    get parent() {\n        return this._parent;\n    }\n\n    set mw(v: number) {\n        if (this.texture) {\n            this.texture.mw = v;\n            this._updateTextureDimensions();\n        } else {\n            this._throwError(\"Set mw after setting a texture.\");\n        }\n    }\n\n    get mw() {\n        return this.texture ? this.texture.mw : 0;\n    }\n\n    set mh(v: number) {\n        if (this.texture) {\n            this.texture.mh = v;\n            this._updateTextureDimensions();\n        } else {\n            this._throwError(\"Set mh after setting a texture.\");\n        }\n    }\n\n    get mh() {\n        return this.texture ? this.texture.mh : 0;\n    }\n\n    set onUpdate(f: ElementEventCallback | undefined) {\n        this._core.onUpdate = f;\n    }\n\n    get onUpdate() {\n        return this._core.onUpdate;\n    }\n\n    set onAfterCalcs(f: ElementEventCallback | undefined) {\n        this._core.onAfterCalcs = f;\n    }\n\n    get onAfterCalcs() {\n        return this._core.onAfterCalcs;\n    }\n\n    set onAfterUpdate(f: ElementEventCallback | undefined) {\n        this._core.onAfterUpdate = f;\n    }\n\n    get onAfterUpdate() {\n        return this._core.onAfterUpdate;\n    }\n\n    forceUpdate() {\n        // Make sure that the update loop is run.\n        this._core._setHasUpdates();\n    }\n\n    get shader(): Shader | undefined {\n        return this._core.shader;\n    }\n\n    set shader(shader: Shader | undefined) {\n        if (this._enabled && this._core.shader) {\n            this._core.shader.removeElement(this._core);\n        }\n\n        this._core.shader = shader;\n\n        if (this._enabled && this._core.shader) {\n            this._core.shader.addElement(this._core);\n        }\n    }\n\n    _hasTexturizer() {\n        return this._core.hasTexturizer();\n    }\n\n    get renderToTexture() {\n        return this._hasTexturizer() && this.texturizer.enabled;\n    }\n\n    set renderToTexture(v) {\n        this.texturizer.enabled = v;\n    }\n\n    get renderToTextureLazy() {\n        return this._hasTexturizer() && this.texturizer.lazy;\n    }\n\n    set renderToTextureLazy(v) {\n        this.texturizer.lazy = v;\n    }\n\n    get renderToTextureOffscreen() {\n        return this._hasTexturizer() && this.texturizer.renderOffscreen;\n    }\n\n    set renderToTextureOffscreen(v) {\n        this.texturizer.renderOffscreen = v;\n    }\n\n    get renderToTextureColorize() {\n        return this._hasTexturizer() && this.texturizer.colorize;\n    }\n\n    set renderToTextureColorize(v) {\n        this.texturizer.colorize = v;\n    }\n\n    getTexture() {\n        return this.texturizer._getTextureSource();\n    }\n\n    get texturizer(): ElementTexturizer {\n        return this._core.texturizer;\n    }\n\n    _throwError(message: string) {\n        throw new Error(this.constructor.name + \" (\" + this.getLocationString() + \"): \" + message);\n    }\n\n    private get _flex() {\n        return this._core.layout.flex;\n    }\n\n    private get _flexItem() {\n        return this._core.layout.flexItem;\n    }\n\n    set flex(v: boolean) {\n        this._flex.enabled = v;\n    }\n\n    get flex() {\n        return this._flex.enabled;\n    }\n\n    set flexDirection(v: FlexDirection) {\n        this._flex.direction = v;\n    }\n\n    get flexDirection() {\n        return this._flex.direction;\n    }\n\n    set flexWrap(v: boolean) {\n        this._flex.wrap = v;\n    }\n\n    get flexWrap() {\n        return this._flex.wrap;\n    }\n\n    set flexAlignItems(v: AlignItemsMode) {\n        this._flex.alignItems = v;\n    }\n\n    get flexAlignItems() {\n        return this._flex.alignItems;\n    }\n\n    set flexJustifyContent(v: JustifyContentMode) {\n        this._flex.justifyContent = v;\n    }\n\n    get flexJustifyContent() {\n        return this._flex.justifyContent;\n    }\n\n    set flexAlignContent(v: AlignContentMode) {\n        this._flex.alignContent = v;\n    }\n\n    get flexAlignContent() {\n        return this._flex.alignContent;\n    }\n\n    set flexItem(v: boolean) {\n        this._flexItem.enabled = v;\n    }\n\n    get flexItem() {\n        return this._flexItem.enabled;\n    }\n\n    set flexGrow(v: number) {\n        this._flexItem.grow = v;\n    }\n\n    get flexGrow() {\n        return this._flexItem.grow;\n    }\n\n    set flexShrink(v: number) {\n        this._flexItem.shrink = v;\n    }\n\n    get flexShrink() {\n        return this._flexItem.shrink;\n    }\n\n    set flexAlignSelf(v: AlignItemsMode | undefined) {\n        this._flexItem.alignSelf = v;\n    }\n\n    get flexAlignSelf() {\n        return this._flexItem.alignSelf;\n    }\n\n    set padding(v: number) {\n        this._flex.padding = v;\n    }\n\n    get padding() {\n        return this._flex.padding;\n    }\n\n    set paddingLeft(v: number) {\n        this._flex.paddingLeft = v;\n    }\n\n    get paddingLeft() {\n        return this._flex.paddingLeft;\n    }\n\n    set paddingRight(v: number) {\n        this._flex.paddingRight = v;\n    }\n\n    get paddingRight() {\n        return this._flex.paddingRight;\n    }\n\n    set paddingTop(v: number) {\n        this._flex.paddingTop = v;\n    }\n\n    get paddingTop() {\n        return this._flex.paddingTop;\n    }\n\n    set paddingBottom(v: number) {\n        this._flex.paddingBottom = v;\n    }\n\n    get paddingBottom() {\n        return this._flex.paddingBottom;\n    }\n\n    set margin(v: number) {\n        this._flexItem.margin = v;\n    }\n\n    get margin() {\n        return this._flexItem.margin;\n    }\n\n    set marginLeft(v: number) {\n        this._flexItem.marginLeft = v;\n    }\n\n    get marginLeft() {\n        return this._flexItem.marginLeft;\n    }\n\n    set marginRight(v: number) {\n        this._flexItem.marginRight = v;\n    }\n\n    get marginRight() {\n        return this._flexItem.marginRight;\n    }\n\n    set marginTop(v: number) {\n        this._flexItem.marginTop = v;\n    }\n\n    get marginTop() {\n        return this._flexItem.marginTop;\n    }\n\n    set marginBottom(v: number) {\n        this._flexItem.marginBottom = v;\n    }\n\n    get marginBottom() {\n        return this._flexItem.marginBottom;\n    }\n\n    set minWidth(v: number) {\n        this._flexItem.minWidth = v;\n    }\n\n    get minWidth() {\n        return this._flexItem.minWidth;\n    }\n\n    set maxWidth(v: number) {\n        this._flexItem.maxWidth = v;\n    }\n\n    get maxWidth() {\n        return this._flexItem.maxWidth;\n    }\n\n    set minHeight(v: number) {\n        this._flexItem.minHeight = v;\n    }\n\n    get minHeight() {\n        return this._flexItem.minHeight;\n    }\n\n    set maxHeight(v: number) {\n        this._flexItem.maxHeight = v;\n    }\n\n    get maxHeight() {\n        return this._flexItem.maxHeight;\n    }\n}\n","import { Element, Texture } from \"tree2d\";\nimport { VugelStage } from \"../../../wrapper\";\nimport { Container } from \"../Container\";\n\nexport abstract class DynamicSizeTexture extends Container {\n    private wrapper = new Element(this.stage);\n    private background = new Element(this.stage);\n\n    constructor(stage: VugelStage) {\n        super(stage);\n\n        this.el.childList.add(this.background);\n        this.el.childList.add(this.wrapper);\n\n        // Make sure we don't take up space if the el is flex.\n        this.background.skipInLayout = true;\n\n        this.wrapper.skipInLayout = true;\n        this.wrapper.w = (w: number) => w;\n        this.wrapper.h = (h: number) => h;\n        this.containerElement = this.wrapper;\n\n        this.wrapper.onResize = ({ element, w, h }) => this.handleResize(element, w, h);\n        this.background.onTextureLoaded = ({ element, texture }) => this.handleTextureLoaded(element, texture);\n        this.background.ref = \"background\";\n    }\n\n    get textureElement(): Element {\n        return this.background;\n    }\n\n    protected abstract handleResize(element: Element, w: number, h: number): void;\n\n    private handleTextureLoaded(element: Element, texture: Texture) {\n        const renderInfo = texture.getSource()?.getRenderInfo();\n        this.background.x = -(renderInfo?.offsetX || 0);\n        this.background.y = -(renderInfo?.offsetY || 0);\n    }\n}\n","import { createRenderer, RootRenderFunction } from \"@vue/runtime-core\";\nimport { nodeOps } from \"./nodeOps\";\nimport { patchProp } from \"./patchProp\";\nimport { VugelStage } from \"../wrapper\";\n\nexport type VugelRender = RootRenderFunction;\n\nexport function createRendererForStage(stage: VugelStage): VugelRender {\n    const { render } = createRenderer({\n        patchProp,\n        ...nodeOps(stage),\n    });\n\n    return render as VugelRender;\n}\n\nexport * from \"@vue/runtime-core\";\nexport * from \"./nodes\";\n","import { Shader } from \"../../tree/Shader\";\nimport { C2dCoreQuadOperation } from \"./C2dCoreQuadOperation\";\nimport { C2dRenderTexture } from \"./C2dRenderTexture\";\n\nexport class C2dShader extends Shader {\n    beforeDraw(operation: C2dCoreQuadOperation, target: C2dRenderTexture) {}\n\n    draw(operation: C2dCoreQuadOperation, target: C2dRenderTexture) {}\n\n    afterDraw(operation: C2dCoreQuadOperation, target: C2dRenderTexture) {}\n}\n","import { WebGLShaderProgram } from \"./WebGLShaderProgram\";\nimport { Shader } from \"../../tree/Shader\";\nimport { CoreContext } from \"../../tree/core/CoreContext\";\nimport { WebGLCoreQuadOperation } from \"./WebGLCoreQuadOperation\";\nimport { WebGLRenderer } from \"./WebGLRenderer\";\nimport { Constructor } from \"../../util/types\";\n\nexport type GLFunction = (location: WebGLUniformLocation | null, ...args: any[]) => void;\n\nexport class WebGLShader extends Shader {\n    vertexShaderSource?: string = undefined;\n    fragmentShaderSource?: string = undefined;\n\n    private _initialized: boolean;\n\n    private readonly _program: WebGLShaderProgram;\n    gl: WebGLRenderingContext;\n\n    constructor(context: CoreContext) {\n        super(context);\n\n        this._initialized = false;\n\n        const stage = context.stage;\n\n        this.gl = stage.gl;\n\n        let program = (stage.renderer as WebGLRenderer).getShaderProgram(this.getConstructor());\n        if (!program) {\n            program = new WebGLShaderProgram(\n                this.gl,\n                this.constructor.prototype.vertexShaderSource!,\n                this.constructor.prototype.fragmentShaderSource!,\n            );\n\n            // Let the vbo context perform garbage collection.\n            (stage.renderer as WebGLRenderer).setShaderProgram(this.getConstructor(), program);\n        }\n        this._program = program;\n    }\n\n    private getConstructor() {\n        return this.constructor as Constructor<WebGLShader>;\n    }\n\n    get glProgram() {\n        return this._program.glProgram;\n    }\n\n    protected _init() {\n        if (!this._initialized) {\n            this.initialize();\n            this._initialized = true;\n        }\n    }\n\n    initialize() {\n        this._program.compile();\n    }\n\n    get initialized() {\n        return this._initialized;\n    }\n\n    protected _uniform(name: string) {\n        return this._program.getUniformLocation(name);\n    }\n\n    protected _attrib(name: string) {\n        return this._program.getAttribLocation(name);\n    }\n\n    protected _setUniform(name: string, value: any, glFunction: GLFunction) {\n        this._program.setUniformValue(name, value, glFunction);\n    }\n\n    useProgram() {\n        this._init();\n        this.gl.useProgram(this.glProgram!);\n        this.beforeUsage();\n        this.enableAttribs();\n    }\n\n    stopProgram() {\n        this.afterUsage();\n        this.disableAttribs();\n    }\n\n    hasSameProgram(other: WebGLShader) {\n        // For performance reasons, we first check for identical references.\n        return other && (other === this || other._program === this._program);\n    }\n\n    beforeUsage() {\n        // Override to set settings other than the default settings (blend mode etc).\n    }\n\n    afterUsage() {\n        // All settings changed in beforeUsage should be reset here.\n    }\n\n    enableAttribs() {}\n\n    disableAttribs() {}\n\n    getExtraAttribBytesPerVertex() {\n        return 0;\n    }\n\n    getVertexAttribPointerOffset(operation: WebGLCoreQuadOperation) {\n        return operation.extraAttribsDataByteOffset - (operation.index + 1) * 4 * this.getExtraAttribBytesPerVertex();\n    }\n\n    setExtraAttribsInBuffer(operation: WebGLCoreQuadOperation) {\n        // Set extra attrib data in in operation.quads.data/floats/uints, starting from\n        // operation.extraAttribsBufferByteOffset.\n    }\n\n    setupUniforms(operation: WebGLCoreQuadOperation) {\n        // Set all shader-specific uniforms.\n        // Notice that all uniforms should be set, even if they have not been changed within this shader instance.\n        // The uniforms are shared by all shaders that have the same type (and shader program).\n    }\n\n    protected _getProjection(operation: WebGLCoreQuadOperation) {\n        return operation.getProjection();\n    }\n\n    getFlipY(operation: WebGLCoreQuadOperation) {\n        return this._getProjection(operation)[1] < 0;\n    }\n\n    beforeDraw(operation: WebGLCoreQuadOperation) {}\n\n    draw(operation: WebGLCoreQuadOperation) {}\n\n    afterDraw(operation: WebGLCoreQuadOperation) {}\n\n    cleanup() {\n        this._initialized = false;\n        // Program takes little resources, so it is only destroyed when the full stage is destroyed.\n    }\n}\n","import { TextureManager } from \"./TextureManager\";\nimport { Element } from \"./Element\";\n\nexport class TextureSource {\n    private id: number = TextureSource.id++;\n\n    private static id = 0;\n\n    // All enabled textures (textures that are used by visible elements).\n    private textures = new Set<Texture>();\n\n    // The number of active textures (textures that have at least one active element).\n    private _activeTextureCount: number = 0;\n\n    // Reuse identifier.\n    public lookupId?: string = undefined;\n\n    // If set, this.is called when the texture source is no longer displayed (activeTextureCount becomes 0).\n    private _cancelCb?: (ts: TextureSource) => void;\n\n    // Loading since timestamp in millis. If set, it is currently loading or loaded. If 0, this is currently not loading.\n    private loadingSince: number = 0;\n\n    public w: number = 0;\n    public h: number = 0;\n\n    public _nativeTexture?: NativeTexture = undefined;\n\n    // If true, then this.texture source is never freed from memory during garbage collection.\n    public permanent: boolean = false;\n\n    // Texture-specific rendering info.\n    private renderInfo?: any = undefined;\n\n    // Render-to-texture reuse.\n    private _isResultTexture: boolean = !this.loader;\n\n    // Contains the load error, if the texture source could previously not be loaded.\n    private _loadError?: Error = undefined;\n\n    constructor(private manager: TextureManager, private loader?: TextureSourceLoader) {}\n\n    private get stage(): Stage {\n        return this.manager.getStage();\n    }\n\n    get loadError(): Error | undefined {\n        return this._loadError;\n    }\n\n    getRenderInfo(): any {\n        return this.renderInfo;\n    }\n\n    addTexture(v: Texture) {\n        if (!this.textures.has(v)) {\n            this.textures.add(v);\n        }\n    }\n\n    removeTexture(v: Texture) {\n        this.textures.delete(v);\n    }\n\n    incActiveTextureCount() {\n        this._activeTextureCount++;\n        if (this._activeTextureCount === 1) {\n            this.becomesUsed();\n        }\n    }\n\n    decActiveTextureCount() {\n        this._activeTextureCount--;\n        if (this._activeTextureCount === 0) {\n            this.becomesUnused();\n        }\n    }\n\n    get isResultTexture() {\n        return this._isResultTexture;\n    }\n\n    set isResultTexture(v) {\n        this._isResultTexture = v;\n    }\n\n    forEachEnabledElement(cb: (element: Element) => void) {\n        this.textures.forEach((texture) => {\n            texture.getElements().forEach((element) => cb(element));\n        });\n    }\n\n    hasEnabledElements() {\n        return this.textures.size > 0;\n    }\n\n    forEachActiveElement(cb: (element: Element) => void) {\n        this.textures.forEach((texture) => {\n            texture.getElements().forEach((element) => {\n                if (element.active) {\n                    cb(element);\n                }\n            });\n        });\n    }\n\n    getRenderWidth() {\n        return this.w;\n    }\n\n    getRenderHeight() {\n        return this.h;\n    }\n\n    allowCleanup() {\n        return !this.permanent && !this.isUsed();\n    }\n\n    private becomesUsed() {\n        // Even while the texture is being loaded, make sure it is on the lookup map so that others can reuse it.\n        this.load();\n    }\n\n    private becomesUnused() {\n        this.cancel();\n    }\n\n    cancel() {\n        if (this.isLoading()) {\n            if (this._cancelCb) {\n                this._cancelCb(this);\n\n                // Clear callback to avoid memory leaks.\n                this._cancelCb = undefined;\n            }\n            this.loadingSince = 0;\n        }\n    }\n\n    isLoaded() {\n        return !!this._nativeTexture;\n    }\n\n    isLoading() {\n        return this.loadingSince > 0;\n    }\n\n    isError() {\n        return !!this._loadError;\n    }\n\n    reload() {\n        this.free();\n        if (this.isUsed()) {\n            this.load();\n        }\n    }\n\n    load() {\n        // From the moment of loading (when a texture source becomes used by active elements)\n        if (this.isResultTexture) {\n            // Element result texture source, for which the loading is managed by the core.\n            return;\n        }\n\n        if (this.loader && !this._nativeTexture && !this.isLoading()) {\n            this.loadingSince = new Date().getTime();\n            const cancelCb = this.loader((err: Error | undefined, options?: TextureSourceOptions) => {\n                // Ignore loads that come in after a cancel.\n                if (this.isLoading()) {\n                    // Clear callback to avoid memory leaks.\n                    this._cancelCb = undefined;\n\n                    if (this.manager.getStage().isDestroyed()) {\n                        // Ignore async load when stage is destroyed.\n                        return;\n                    }\n                    if (err) {\n                        // Emit txError.\n                        this.onError(err);\n                    } else if (options && options.source) {\n                        this.processLoadedSource(options);\n                    }\n                }\n            }, this);\n\n            this._cancelCb = cancelCb ? cancelCb : undefined;\n        }\n    }\n\n    processLoadedSource(options: TextureSourceOptions) {\n        this.loadingSince = 0;\n        this.setSource(options);\n    }\n\n    setSource(options: TextureSourceOptions) {\n        const source = options.source;\n\n        this.w = (source as any).width || (options && options.width) || 0;\n        this.h = (source as any).height || (options && options.height) || 0;\n\n        if (options && options.renderInfo) {\n            // Assign to id in cache so that it can be reused.\n            this.renderInfo = options.renderInfo;\n        }\n\n        this.permanent = !!options.permanent;\n\n        if (this._isNativeTexture(source)) {\n            // Texture managed by caller.\n            this._nativeTexture = source;\n\n            this.w = this.w || (source as any).w;\n            this.h = this.h || (source as any).h;\n\n            // NativeTexture objects are by default;\n            this.permanent = options.permanent === undefined ? false : options.permanent;\n        } else {\n            this.manager.uploadTextureSource(this, options);\n        }\n\n        this._loadError = undefined;\n\n        this.onLoad();\n    }\n\n    isUsed() {\n        return this._activeTextureCount > 0;\n    }\n\n    private onLoad() {\n        if (this.isUsed()) {\n            this.textures.forEach((texture) => {\n                texture.onLoad();\n            });\n        }\n    }\n\n    forceRenderUpdate() {\n        // Userland should call this method after changing the nativeTexture manually outside of the framework\n        //  (using tex[Sub]Image2d for example).\n\n        if (this._nativeTexture) {\n            // Change 'update' flag. This is currently not used by the framework but is handy in userland.\n            this._nativeTexture.updateFrame = this.stage.frameCounter;\n        }\n\n        this.forEachActiveElement((element) => {\n            element.forceRenderUpdate();\n        });\n    }\n\n    forceUpdateRenderCoords() {\n        this.forEachActiveElement((element) => {\n            element.updateTextureCoords();\n        });\n    }\n\n    get nativeTexture() {\n        return this._nativeTexture;\n    }\n\n    clearNativeTexture() {\n        this._nativeTexture = undefined;\n    }\n\n    /**\n     * Used for result textures.\n     */\n    replaceNativeTexture(newNativeTexture: any, w: number, h: number) {\n        const prevNativeTexture = this._nativeTexture;\n        // Loaded by core.\n        this._nativeTexture = newNativeTexture;\n        this.w = w;\n        this.h = h;\n\n        if (!prevNativeTexture && newNativeTexture) {\n            this.forEachActiveElement((element) => element.onTextureSourceLoaded());\n        }\n\n        if (!newNativeTexture) {\n            this.forEachActiveElement((element) => element.setDisplayedTexture(undefined));\n        }\n\n        // Dimensions may be changed.\n        this.forEachEnabledElement((element) => element._updateTextureDimensions());\n    }\n\n    onError(e: Error) {\n        this._loadError = e;\n        this.loadingSince = 0;\n        console.error(\"texture load error\", e, this.lookupId);\n        this.forEachActiveElement((element) => element.onTextureSourceLoadError(e));\n    }\n\n    free() {\n        if (this.isLoaded()) {\n            this.manager.freeTextureSource(this);\n        }\n    }\n\n    _isNativeTexture(source: any): source is NativeTexture {\n        // @todo: improve.\n        return source instanceof WebGLTexture;\n    }\n\n    setNotLoaded() {\n        this.loadingSince = 0;\n    }\n}\n\nimport { Texture, TextureSourceLoader, TextureSourceOptions } from \"./Texture\";\nimport { Stage } from \"./Stage\";\nimport { NativeTexture } from \"../renderer/NativeTexture\";\n","import { Element } from \"./Element\";\nimport { Texture } from \"./Texture\";\n\nexport class ElementListeners {\n    public onSetup?: ElementEventCallback = undefined;\n    public onAttach?: ElementEventCallback = undefined;\n    public onDetach?: ElementEventCallback = undefined;\n    public onActive?: ElementEventCallback = undefined;\n    public onInactive?: ElementEventCallback = undefined;\n    public onEnabled?: ElementEventCallback = undefined;\n    public onDisabled?: ElementEventCallback = undefined;\n    public onResize?: ElementResizeEventCallback = undefined;\n    public onTextureError?: ElementTextureErrorEventCallback = undefined;\n    public onTextureLoaded?: ElementTextureEventCallback = undefined;\n    public onTextureUnloaded?: ElementTextureEventCallback = undefined;\n}\n\nexport type ElementEventCallback = (e: { element: Element }) => void;\nexport type ElementResizeEventCallback = (e: { element: Element; w: number; h: number }) => void;\nexport type ElementTextureEventCallback = (e: { element: Element; texture: Texture }) => void;\nexport type ElementTextureErrorEventCallback = (e: { element: Element; texture: Texture; error: Error }) => void;\n","import { Patcher } from \"../Patcher\";\nimport { Constructor } from \"../../util/types\";\n\nexport class Handler {\n    private readonly sourceType: Constructor<any>;\n    public name: string;\n\n    constructor(sourceType: Constructor<any>, name: string) {\n        this.sourceType = sourceType;\n        this.name = name;\n    }\n\n    matches(obj: any, prop: string) {\n        return this.name === prop && obj instanceof this.sourceType;\n    }\n\n    handle(obj: any, settings: any) {\n        const value = obj[this.name];\n        if (!settings) {\n            obj[this.name] = undefined;\n        } else {\n            Patcher.patchObject(value, settings);\n        }\n    }\n}\n","import { CoreContext } from \"./CoreContext\";\nimport { CoreQuadOperation } from \"./CoreQuadOperation\";\nimport { Shader } from \"../Shader\";\nimport { Renderer } from \"../../renderer/Renderer\";\nimport { CoreQuadList } from \"./CoreQuadList\";\nimport { RenderTextureInfo } from \"./RenderTextureInfo\";\nimport { ElementCore } from \"./ElementCore\";\nimport { NativeTexture } from \"../../renderer/NativeTexture\";\nimport { ElementTexturizer } from \"./ElementTexturizer\";\n\nexport abstract class CoreRenderState<\n    CoreQuadListType extends CoreQuadList = CoreQuadList,\n    CoreQuadOperationType extends CoreQuadOperation = CoreQuadOperation\n> {\n    public quadOperations: CoreQuadOperationType[] = [];\n    public readonly defaultShader: Shader = this.context.stage.renderer.getDefaultShader(this.context);\n    private renderer: Renderer = this.context.stage.renderer;\n    public readonly quadList: CoreQuadListType = this.renderer.createCoreQuadList() as CoreQuadListType;\n\n    public renderTextureInfo?: RenderTextureInfo = undefined;\n    private scissor?: number[];\n    private shaderOwner?: ElementCore = undefined;\n    private specifiedShader?: Shader = undefined;\n    private usedShader?: Shader = undefined;\n    private checkForChanges: boolean = false;\n    private texturizer?: ElementTexturizer = undefined;\n    private pendingQuadOperation?: CoreQuadOperationType = undefined;\n\n    // A list of texturizers that should not to be cached - and pending to be released.\n    private temporaryTexturizers: ElementTexturizer[] = [];\n\n    public isCachingTexturizer: boolean = false;\n    private useTexturizerCache: boolean = false;\n\n    constructor(private context: CoreContext) {}\n\n    reset() {\n        this.renderTextureInfo = undefined;\n\n        this.scissor = undefined;\n\n        this.usedShader = undefined;\n\n        this.shaderOwner = undefined;\n\n        this.specifiedShader = undefined;\n\n        this.checkForChanges = false;\n\n        this.quadOperations = [];\n\n        this.texturizer = undefined;\n\n        this.pendingQuadOperation = undefined;\n\n        this.quadList.reset();\n\n        this.temporaryTexturizers = [];\n\n        this.isCachingTexturizer = false;\n\n        this.useTexturizerCache = false;\n    }\n\n    get length() {\n        return this.quadList.length;\n    }\n\n    setShader(shader: Shader, owner?: ElementCore) {\n        if (this.shaderOwner !== owner || this.specifiedShader !== shader) {\n            // Same shader owner: active shader is also the same.\n            // Prevent any shader usage to save performance.\n\n            this.specifiedShader = shader;\n\n            if (shader.useDefault()) {\n                // Use the default shader when possible to prevent unnecessary program changes.\n                shader = this.defaultShader;\n            }\n            if (this.usedShader !== shader || this.shaderOwner !== owner) {\n                this.usedShader = shader;\n                this.shaderOwner = owner;\n                this.checkForChanges = true;\n            }\n        }\n    }\n\n    setScissor(area: number[] | undefined) {\n        if (this.scissor !== area) {\n            this.scissor = area;\n            this.checkForChanges = true;\n        }\n    }\n\n    getScissor() {\n        return this.scissor;\n    }\n\n    setRenderTextureInfo(renderTextureInfo: RenderTextureInfo | undefined) {\n        if (this.renderTextureInfo !== renderTextureInfo) {\n            this.renderTextureInfo = renderTextureInfo;\n            this.scissor = undefined;\n            this.checkForChanges = true;\n        }\n    }\n\n    // Sets the texturizer to be drawn during subsequent addQuads.\n    setTexturizer(texturizer: ElementTexturizer | undefined, cache: boolean) {\n        this.texturizer = texturizer;\n        this.useTexturizerCache = cache;\n    }\n\n    addElementCore(elementCore: ElementCore) {\n        if (!this.pendingQuadOperation) {\n            this._createQuadOperation();\n        } else if (this.checkForChanges && this._hasChanges()) {\n            this._finishQuadOperation();\n            this.checkForChanges = false;\n        }\n\n        let nativeTexture;\n        if (this.texturizer) {\n            nativeTexture = this.texturizer.getResultTexture();\n\n            if (!this.useTexturizerCache) {\n                // We can release the temporary texture immediately after finalizing this quad operation.\n                this.temporaryTexturizers.push(this.texturizer);\n            }\n        }\n\n        if (!nativeTexture) {\n            nativeTexture = elementCore.displayedTextureSource!.nativeTexture!;\n        }\n\n        if (this.renderTextureInfo) {\n            if (this.usedShader === this.defaultShader && this.renderTextureInfo.empty) {\n                // The texture might be reusable under some conditions. We will check the conditions later.\n                this.renderTextureInfo.reusableTexture = nativeTexture;\n                this.renderTextureInfo.reusableRenderStateOffset = this.length;\n            } else {\n                // It is not possible to reuse another texture when there is more than one quad.\n                this.renderTextureInfo.reusableTexture = undefined;\n            }\n            this.renderTextureInfo.empty = false;\n        }\n\n        this.pendingQuadOperation!.length++;\n\n        this.addQuad(nativeTexture, elementCore);\n    }\n\n    finishedRenderTexture() {\n        if (this.renderTextureInfo && this.renderTextureInfo.reusableTexture) {\n            // There was only one texture drawn in this render texture.\n            // Check if we can reuse it so that we can optimize out an unnecessary render texture operation.\n            // (it should exactly span this render texture).\n\n            if (!this._isRenderTextureReusable()) {\n                this.renderTextureInfo.reusableTexture = undefined;\n            }\n        }\n    }\n\n    _isRenderTextureReusable() {\n        const renderTextureInfo = this.renderTextureInfo!;\n        const offset = renderTextureInfo.reusableRenderStateOffset;\n        const texture = this.quadList.getTexture(offset);\n        return (\n            texture.w === renderTextureInfo.w &&\n            texture.h === renderTextureInfo.h &&\n            this.isRenderTextureReusable(renderTextureInfo)\n        );\n    }\n\n    _hasChanges() {\n        const q = this.pendingQuadOperation!;\n        if (this.usedShader !== q.shader) return true;\n        if (this.shaderOwner !== q.shaderOwner) return true;\n        if (this.renderTextureInfo !== q.renderTextureInfo) return true;\n        if (!CoreRenderState.scissorsEqual(this.scissor, q.scissor)) return true;\n\n        return false;\n    }\n\n    public static scissorsEqual(a: number[] | undefined, b: number[] | undefined) {\n        return !(a !== b || !a || !b || a[0] !== b[0] || a[1] !== b[1] || a[2] !== b[2] || a[3] !== b[3]);\n    }\n\n    _finishQuadOperation(create = true) {\n        if (this.pendingQuadOperation) {\n            if (this.pendingQuadOperation.length || (this.usedShader && this.usedShader.addEmpty())) {\n                if (\n                    !this.pendingQuadOperation.scissor ||\n                    (this.pendingQuadOperation.scissor[2] > 0 && this.pendingQuadOperation.scissor[3] > 0)\n                ) {\n                    // Ignore empty clipping regions.\n                    this.quadOperations.push(this.pendingQuadOperation);\n                }\n            }\n\n            if (this.temporaryTexturizers.length) {\n                for (let i = 0, n = this.temporaryTexturizers.length; i < n; i++) {\n                    // We can now reuse these render-to-textures in subsequent stages.\n                    // Huge performance benefit when filtering (fast blur).\n                    this.temporaryTexturizers[i].releaseRenderTexture();\n                }\n                this.temporaryTexturizers = [];\n            }\n\n            this.pendingQuadOperation = undefined;\n        }\n\n        if (create) {\n            this._createQuadOperation();\n        }\n    }\n\n    _createQuadOperation() {\n        this.pendingQuadOperation = this.renderer.createCoreQuadOperation(\n            this.context,\n            this.usedShader!,\n            this.shaderOwner!,\n            this.renderTextureInfo!,\n            this.scissor,\n            this.length,\n        ) as CoreQuadOperationType;\n        this.checkForChanges = false;\n    }\n\n    finish() {\n        if (this.pendingQuadOperation) {\n            // Add remaining.\n            this._finishQuadOperation(false);\n        }\n\n        this.finishRenderState();\n    }\n\n    abstract addQuad(texture: NativeTexture, elementCore: ElementCore): void;\n\n    abstract isRenderTextureReusable(renderTextureInfo: RenderTextureInfo): boolean;\n\n    abstract finishRenderState(): void;\n}\n","import { Element } from \"tree2d\";\n\nexport class Base {\n    public element?: Element;\n\n    protected children: Base[] = [];\n\n    public parent?: Base = undefined;\n\n    public nextSibling: Base | null = null;\n\n    constructor(element: Element | undefined) {\n        this.element = element;\n    }\n\n    appendChild(child: Base) {\n        child.parent = this;\n        this.children.push(child);\n        child.nextSibling = null;\n    }\n\n    removeChild(child: Base) {\n        child.parent = undefined;\n        const index = this.children.indexOf(child);\n        if (index > 0) {\n            this.children[index - 1].nextSibling = child.nextSibling;\n        }\n        this.children.splice(index, 1);\n        child.nextSibling = null;\n    }\n\n    insertBefore(child: Base, anchor: Base) {\n        child.parent = this;\n        const index = this.children.lastIndexOf(anchor);\n        if (index > 0) {\n            this.children[index - 1].nextSibling = child;\n        }\n        this.children.splice(index, 0, child);\n        child.nextSibling = anchor;\n    }\n\n    clearChildren() {\n        this.children.forEach((child) => {\n            child.parent = undefined;\n            child.nextSibling = null;\n        });\n        this.children = [];\n    }\n\n    setElementText(text: string) {\n        // Default: ignore text.\n    }\n}\n","import { VugelStage } from \"../wrapper\";\nimport { setupMouseEvents } from \"./mouseEvents\";\nimport { setupTouchEvents } from \"./touchEvents\";\nimport { FocusEvents, setupFocusEvents } from \"./focusEvents\";\nimport { setupKeyboardEvents } from \"./keyboardEvents\";\n\nexport type EventHelpers = {\n    focusManager: FocusEvents;\n};\n\nexport const setupEvents = (canvasElement: HTMLCanvasElement, stage: VugelStage): EventHelpers => {\n    setupMouseEvents(canvasElement, stage);\n    setupTouchEvents(canvasElement, stage);\n    const focusManager = setupFocusEvents(canvasElement, stage);\n    setupKeyboardEvents(canvasElement, stage);\n    return { focusManager };\n};\n\nexport * from \"./types\";\nexport * from \"./mouseEvents\";\nexport * from \"./touchEvents\";\nexport * from \"./focusEvents\";\nexport * from \"./keyboardEvents\";\n","import { Node } from \"../runtime/nodes/Node\";\nimport { EventTranslator, RegisterEventDispatcher, VueEventsOfType, VugelEvent } from \"./index\";\nimport { getCommonAncestor, getCurrentContext } from \"./utils\";\nimport { VugelStage } from \"../wrapper\";\nimport { ElementCoordinatesInfo } from \"tree2d\";\n\nexport interface VugelMouseEvent extends VugelEvent<MouseEvent | TouchEvent> {\n    readonly canvasOffsetX: number;\n    readonly canvasOffsetY: number;\n    readonly elementOffsetX: number;\n    readonly elementOffsetY: number;\n    readonly currentElement: ElementCoordinatesInfo<Node> | undefined;\n}\n\nexport type MouseEventState = {\n    activeNode?: Node;\n};\n\nconst translateEvent: EventTranslator<MouseEvent, VugelMouseEvent> = (stage, e) => {\n    const { currentElement, canvasOffsetX, canvasOffsetY } = getCurrentContext(e, stage);\n    const currentNode = currentElement?.element.data;\n\n    return {\n        cancelBubble: false,\n\n        // Event\n        type: e.type as SupportedMouseEvents,\n        currentTarget: currentNode ?? null,\n        target: currentNode ?? null,\n\n        // MouseEvent\n        canvasOffsetX: canvasOffsetX,\n        canvasOffsetY: canvasOffsetY,\n        elementOffsetX: currentElement?.offsetX ?? 0,\n        elementOffsetY: currentElement?.offsetY ?? 0,\n        currentElement: currentElement,\n\n        originalEvent: e,\n    };\n};\n\n// https://www.w3.org/TR/uievents/#events-mouse-types\nconst dispatchMouseEvent = (stage: VugelStage, eventState: MouseEventState) => {\n    return (e: MouseEvent) => {\n        const translatedEvent = translateEvent(stage, e);\n        dispatchVugelMouseEvent(translatedEvent, eventState);\n\n        // Prevent selecting nearby text when double-clicking on the canvas.\n        e.preventDefault();\n    };\n};\n\nexport const dispatchVugelMouseEvent = (translatedEvent: VugelMouseEvent, eventState: MouseEventState) => {\n    const prevNode = eventState.activeNode;\n    const currentNode = translatedEvent.currentElement?.element.data;\n\n    switch (translatedEvent.type as SupportedMouseEvents) {\n        case \"auxclick\":\n        case \"click\":\n        case \"contextmenu\":\n        case \"dblclick\":\n        case \"mousedown\":\n        case \"mouseup\": {\n            currentNode?.dispatchBubbledEvent(translatedEvent);\n            break;\n        }\n        case \"mouseenter\": {\n            eventState.activeNode = undefined;\n\n            if (currentNode) {\n                eventState.activeNode = currentNode;\n                currentNode.dispatchBubbledEvent(translatedEvent, true);\n            }\n\n            break;\n        }\n        case \"mouseover\": {\n            eventState.activeNode = undefined;\n\n            if (currentNode) {\n                eventState.activeNode = currentNode;\n                currentNode?.dispatchBubbledEvent(translatedEvent);\n            }\n\n            break;\n        }\n        case \"mouseleave\": {\n            prevNode?.dispatchBubbledEvent(translatedEvent, true);\n            break;\n        }\n        case \"mouseout\": {\n            prevNode?.dispatchBubbledEvent({\n                ...translatedEvent,\n                target: prevNode,\n            });\n            break;\n        }\n        case \"mousemove\": {\n            if (currentNode !== undefined && prevNode != currentNode) {\n                const commonAncestor = getCommonAncestor(prevNode, currentNode);\n\n                prevNode?.dispatchBubbledEvent({\n                    ...translatedEvent,\n                    type: \"mouseout\",\n                    target: prevNode,\n                });\n\n                prevNode?.dispatchBubbledEvent(\n                    {\n                        ...translatedEvent,\n                        type: \"mouseleave\",\n                        target: prevNode,\n                    },\n                    commonAncestor,\n                );\n\n                currentNode.dispatchBubbledEvent({\n                    ...translatedEvent,\n                    type: \"mouseover\",\n                });\n\n                currentNode.dispatchBubbledEvent(\n                    {\n                        ...translatedEvent,\n                        type: \"mouseenter\",\n                    },\n                    commonAncestor,\n                );\n            }\n\n            // Mousemove\n            currentNode?.dispatchBubbledEvent(translatedEvent);\n\n            eventState.activeNode = currentNode;\n        }\n    }\n};\n\nexport type SupportedMouseEvents = keyof Pick<\n    GlobalEventHandlersEventMap,\n    | \"auxclick\"\n    | \"click\"\n    | \"contextmenu\"\n    | \"dblclick\"\n    | \"mousedown\"\n    | \"mouseenter\"\n    | \"mouseleave\"\n    | \"mousemove\"\n    | \"mouseout\"\n    | \"mouseover\"\n    | \"mouseup\"\n>;\n\nexport const mouseEventTranslator: {\n    [x in SupportedMouseEvents]: VueEventsOfType<MouseEvent>;\n} = {\n    auxclick: \"onAuxclick\",\n    click: \"onClick\",\n    contextmenu: \"onContextmenu\",\n    dblclick: \"onDblclick\",\n    mousedown: \"onMousedown\",\n    mouseenter: \"onMouseenter\",\n    mouseleave: \"onMouseleave\",\n    mousemove: \"onMousemove\",\n    mouseout: \"onMouseout\",\n    mouseover: \"onMouseover\",\n    mouseup: \"onMouseup\",\n} as const;\n\nexport const setupMouseEvents: RegisterEventDispatcher = (canvasElement, stage) => {\n    const eventState: MouseEventState = {};\n\n    for (const key in mouseEventTranslator) {\n        canvasElement.addEventListener(key, dispatchMouseEvent(stage, eventState) as EventListener);\n    }\n};\n","import { ElementCoordinatesInfo } from \"tree2d\";\nimport { Node } from \"../runtime/nodes/Node\";\nimport { Base } from \"../runtime/nodes/Base\";\nimport { VugelStage } from \"../wrapper\";\n\nexport function getCanvasOffset(e: PageCoordinates, stage: VugelStage): { x: number; y: number } {\n    const rect = stage.getCanvas().getBoundingClientRect();\n    return { x: e.pageX - (rect.left + window.scrollX), y: e.pageY - (rect.top + window.scrollY) };\n}\n\nexport function getCurrentContext(\n    e: PageCoordinates,\n    stage: VugelStage,\n): {\n    currentElement: ElementCoordinatesInfo<Node> | undefined;\n    canvasOffsetX: number;\n    canvasOffsetY: number;\n} {\n    const { x: canvasX, y: canvasY } = getCanvasOffset(e, stage);\n\n    const elementsAtCanvasCoordinates = stage.getElementsAtCoordinates<Node>(canvasX, canvasY);\n    return {\n        currentElement: elementsAtCanvasCoordinates.find((v) => v.element.data?.capturePointerEvents()),\n        canvasOffsetX: canvasX,\n        canvasOffsetY: canvasY,\n    };\n}\n\nexport function getAncestors(node: Node): Base[] {\n    const path = [];\n    let n: Base | undefined = node;\n    do {\n        path.push(n);\n        n = n.parent;\n    } while (n !== undefined);\n    return path.reverse();\n}\n\nexport function getCommonAncestor(node1: Node | undefined, node2: Node | undefined): Base | undefined {\n    if (!node1 || !node2) {\n        return undefined;\n    }\n\n    const pathNode1 = getAncestors(node1);\n    const pathNode2 = getAncestors(node2);\n\n    const m = Math.min(pathNode1.length, pathNode2.length);\n    let index;\n    for (index = 0; index < m; index++) {\n        if (pathNode1[index] !== pathNode2[index]) {\n            break;\n        }\n    }\n\n    return index > 0 ? pathNode1[index - 1] : undefined;\n}\n\ntype PageCoordinates = { pageX: number; pageY: number };\n","import {\n    dispatchVugelMouseEvent,\n    EventTranslator,\n    MouseEventState,\n    RegisterEventDispatcher,\n    SupportedMouseEvents,\n    VueEventsOfType,\n    VugelMouseEvent,\n} from \"./index\";\nimport { getCurrentContext } from \"./utils\";\nimport { VugelStage } from \"../wrapper\";\n\nconst translateEvent: EventTranslator<TouchEvent, VugelMouseEvent> = (stage, e) => {\n    let currentTouch: Touch;\n\n    const eventType = e.type as SupportedTouchEvents;\n    if (eventType === \"touchend\" || eventType === \"touchcancel\") {\n        currentTouch = e.changedTouches[0];\n    } else {\n        currentTouch = e.touches[0];\n    }\n\n    const { currentElement, canvasOffsetX, canvasOffsetY } = getCurrentContext(currentTouch, stage);\n    const currentNode = currentElement?.element.data;\n\n    return {\n        cancelBubble: false,\n\n        // Event\n        type: e.type as SupportedMouseEvents,\n        currentTarget: currentNode ?? null,\n        target: currentNode ?? null,\n\n        // MouseEvent\n        canvasOffsetX: canvasOffsetX,\n        canvasOffsetY: canvasOffsetY,\n        elementOffsetX: currentElement?.offsetX ?? 0,\n        elementOffsetY: currentElement?.offsetY ?? 0,\n\n        originalEvent: e,\n        currentElement: currentElement,\n    };\n};\n\n// https://www.w3.org/TR/touch-events/#list-of-touchevent-types\nconst dispatchTouchEvent = (stage: VugelStage, eventState: MouseEventState) => {\n    return (e: TouchEvent) => {\n        const translatedEvent = translateEvent(stage, e);\n        let correspondingMouseEvent: SupportedMouseEvents;\n\n        switch (e.type as SupportedTouchEvents) {\n            case \"touchstart\":\n                correspondingMouseEvent = \"mousedown\";\n                break;\n            case \"touchend\":\n            case \"touchcancel\":\n                correspondingMouseEvent = \"mouseup\";\n                break;\n            case \"touchmove\":\n                correspondingMouseEvent = \"mousemove\";\n                break;\n        }\n\n        const translatedMouseEvent: VugelMouseEvent = {\n            ...translatedEvent,\n            type: correspondingMouseEvent,\n            currentElement: translatedEvent.currentElement,\n        };\n\n        dispatchVugelMouseEvent(translatedMouseEvent, eventState);\n    };\n};\n\nexport type SupportedTouchEvents = keyof Pick<\n    GlobalEventHandlersEventMap,\n    \"touchcancel\" | \"touchend\" | \"touchstart\" | \"touchmove\"\n>;\n\nexport const touchEventTranslator: {\n    [x in SupportedTouchEvents]: VueEventsOfType<TouchEvent>;\n} = {\n    touchcancel: \"onTouchcancel\",\n    touchend: \"onTouchend\",\n    touchmove: \"onTouchmove\",\n    touchstart: \"onTouchstart\",\n} as const;\n\nexport const setupTouchEvents: RegisterEventDispatcher = (canvasElement, stage) => {\n    const eventState: MouseEventState = {};\n\n    for (const key in touchEventTranslator) {\n        canvasElement.addEventListener(key, dispatchTouchEvent(stage, eventState) as EventListener);\n    }\n};\n","import { Node } from \"../runtime/nodes/Node\";\nimport { getCommonAncestor, getCurrentContext } from \"./utils\";\nimport { VugelEvent } from \"./types\";\nimport { VugelStage } from \"../wrapper\";\n\nexport class FocusEvents {\n    private focusedNode?: Node = undefined;\n    private updatingFocusPath: boolean = false;\n\n    constructor(private canvasElement: HTMLCanvasElement, private stage: VugelStage) {\n        this.ensureCanvasFocusable();\n        this.canvasElement.addEventListener(\"click\", (e) => this.onCanvasClick(e));\n        this.canvasElement.addEventListener(\"blur\", (e) => this.onCanvasBlur(e));\n    }\n\n    getFocusedNode(): Node | undefined {\n        return this.focusedNode;\n    }\n\n    private ensureCanvasFocusable() {\n        if (!this.canvasElement.hasAttribute(\"tabindex\")) {\n            this.canvasElement.setAttribute(\"tabindex\", \"-1\");\n        }\n    }\n\n    private onCanvasClick(e: MouseEvent) {\n        // Automatically focus on clicked elements.\n        const { currentElement } = getCurrentContext(e, this.stage);\n        const node = currentElement?.element.data;\n        this.setFocus(node);\n    }\n\n    private onCanvasBlur(e: FocusEvent) {\n        this.setFocus(undefined);\n    }\n\n    public setFocus(focused: Node | undefined) {\n        if (this.updatingFocusPath) {\n            console.warn(\n                \"It's not allowed to focus from within a focus-related event. Use setInterval to schedule a focus change.\",\n            );\n        } else if (this.focusedNode !== focused) {\n            this.updateFocusPath(focused);\n        }\n    }\n\n    public updateFocusPath(newFocusedNode: Node | undefined) {\n        this.updatingFocusPath = true;\n\n        const prevFocusedNode = this.focusedNode;\n        const commonAncestor = getCommonAncestor(this.focusedNode, newFocusedNode);\n\n        this.focusedNode = newFocusedNode;\n\n        // Use event order as specified in https://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n\n        if (prevFocusedNode) {\n            prevFocusedNode.dispatchBubbledEvent(\n                this.createFocusEvent(\"focusout\", prevFocusedNode, newFocusedNode),\n                commonAncestor,\n            );\n        }\n\n        if (newFocusedNode) {\n            newFocusedNode.dispatchBubbledEvent(\n                this.createFocusEvent(\"focusin\", newFocusedNode, prevFocusedNode),\n                commonAncestor,\n            );\n        }\n\n        if (prevFocusedNode) {\n            prevFocusedNode.dispatchEvent(this.createFocusEvent(\"blur\", prevFocusedNode, newFocusedNode));\n        }\n\n        if (newFocusedNode) {\n            newFocusedNode.dispatchEvent(this.createFocusEvent(\"focus\", newFocusedNode, prevFocusedNode));\n        }\n\n        this.updatingFocusPath = false;\n    }\n\n    private createFocusEvent(\n        type: SupportedFocusEvents,\n        target: Node | undefined,\n        relatedTarget: Node | undefined,\n    ): VugelFocusEvent {\n        return {\n            cancelBubble: false,\n\n            // Event\n            type,\n\n            relatedTarget: relatedTarget ?? null,\n            target: target ?? null,\n            currentTarget: null,\n\n            originalEvent: undefined,\n        };\n    }\n}\n\nexport interface VugelFocusEvent extends VugelEvent {\n    relatedTarget: Node | null;\n}\n\nexport type SupportedFocusEvents = keyof Pick<GlobalEventHandlersEventMap, \"focusin\" | \"focusout\" | \"focus\" | \"blur\">;\n\nexport const focusEventTranslator: {\n    [x in SupportedFocusEvents]: \"onFocusin\" | \"onFocusout\" | \"onFocus\" | \"onBlur\";\n} = {\n    focusin: \"onFocusin\",\n    focusout: \"onFocusout\",\n    focus: \"onFocus\",\n    blur: \"onBlur\",\n} as const;\n\nexport const setupFocusEvents = (canvasElement: HTMLCanvasElement, stage: VugelStage) => {\n    return new FocusEvents(canvasElement, stage);\n};\n","import { EventTranslator, VueEventsOfType, VugelEvent } from \"./index\";\nimport { Node } from \"../runtime/nodes/Node\";\nimport { VugelStage } from \"../wrapper\";\n\nexport interface VugelKeyboardEvent extends VugelEvent<KeyboardEvent> {}\n\nconst translateEvent: EventTranslator<KeyboardEvent, VugelKeyboardEvent> = (stage, e) => {\n    let currentNode: Node | undefined = stage.eventHelpers.focusManager.getFocusedNode();\n    if (!currentNode) {\n        currentNode = stage.root.data;\n    }\n\n    return {\n        cancelBubble: false,\n\n        // Event\n        type: e.type as SupportedKeyboardEvents,\n        currentTarget: currentNode ?? null,\n        target: currentNode ?? null,\n\n        originalEvent: e,\n    };\n};\n\n// https://www.w3.org/TR/uievents/#events-keyboardevents\nconst dispatchKeyboardEvent = (stage: VugelStage) => {\n    return (e: KeyboardEvent) => {\n        const translatedEvent = translateEvent(stage, e);\n        if (translatedEvent) {\n            dispatchVugelKeyboardEvent(translatedEvent);\n        }\n    };\n};\n\nexport const dispatchVugelKeyboardEvent = (translatedEvent: VugelKeyboardEvent) => {\n    translatedEvent.target?.dispatchBubbledEvent(translatedEvent);\n};\n\nexport type SupportedKeyboardEvents = keyof Pick<GlobalEventHandlersEventMap, \"keypress\" | \"keydown\" | \"keyup\">;\n\nexport const keyboardEventTranslator: {\n    [x in SupportedKeyboardEvents]: VueEventsOfType<KeyboardEvent>;\n} = {\n    keypress: \"onKeypress\",\n    keydown: \"onKeydown\",\n    keyup: \"onKeyup\",\n} as const;\n\nexport const setupKeyboardEvents = (canvasElement: HTMLCanvasElement, stage: VugelStage) => {\n    for (const key in keyboardEventTranslator) {\n        canvasElement.addEventListener(key, dispatchKeyboardEvent(stage) as EventListener);\n    }\n};\n","import { ensureFloat } from \"../Node\";\nimport { TextSettings } from \"tree2d\";\n\nexport class TextTextureSettings {\n    public readonly textSettings: Partial<TextSettings> = {};\n\n    constructor(private onChange: () => void) {}\n\n    set \"font-size\"(v: number) {\n        this.textSettings.fontSize = ensureFloat(v);\n        this.onChange();\n    }\n\n    set \"font-style\"(v: string) {\n        this.textSettings.fontStyle = v;\n        this.onChange();\n    }\n\n    set \"font-weight\"(v: number) {\n        this.textSettings.fontWeight = ensureFloat(v);\n        this.onChange();\n    }\n\n    set \"font-face\"(v: string | string[]) {\n        if (!Array.isArray(v)) {\n            v = [v];\n        }\n        this.textSettings.fontFace = v;\n        this.onChange();\n    }\n\n    set \"cut-start-x\"(v: number) {\n        this.textSettings.cutSx = ensureFloat(v);\n        this.onChange();\n    }\n\n    set \"cut-start-y\"(v: number) {\n        this.textSettings.cutSy = ensureFloat(v);\n        this.onChange();\n    }\n\n    set \"cut-end-x\"(v: number) {\n        this.textSettings.cutEx = ensureFloat(v);\n        this.onChange();\n    }\n\n    set \"cut-end-y\"(v: number) {\n        this.textSettings.cutEy = ensureFloat(v);\n        this.onChange();\n    }\n}\n","import { baseCompile, baseParse, CompilerOptions, CodegenResult, ParserOptions, RootNode } from \"@vue/compiler-core\";\n\nimport { parserOptionsMinimal } from \"./parserOptionsMinimal\";\n\nconst parserOptions = parserOptionsMinimal;\n\nexport function compile(template: string, options: CompilerOptions = {}): CodegenResult {\n    return baseCompile(template, {\n        ...parserOptions,\n        ...options,\n        nodeTransforms: [...(options.nodeTransforms || [])],\n        directiveTransforms: {\n            ...(options.directiveTransforms || {}),\n        },\n    });\n}\n\nexport function parse(template: string, options: ParserOptions = {}): RootNode {\n    return baseParse(template, {\n        ...parserOptions,\n        ...options,\n    });\n}\n","import { C2dDefaultShader } from \"./C2dDefaultShader\";\nimport { CoreContext } from \"../../../tree/core/CoreContext\";\nimport { WebGLGrayscaleShader } from \"../../webgl/shaders/WebGLGrayscaleShader\";\n\nexport class C2dGrayscaleShader extends C2dDefaultShader {\n    private _amount: number = 1;\n\n    constructor(context: CoreContext) {\n        super(context);\n    }\n\n    static getWebGL() {\n        return WebGLGrayscaleShader;\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    _beforeDrawEl(obj: any) {\n        obj.target.context.filter = \"grayscale(\" + this._amount + \")\";\n    }\n\n    _afterDrawEl(obj: any) {\n        obj.target.context.filter = \"none\";\n    }\n}\n","import { WebGLDefaultShader } from \"./WebGLDefaultShader\";\nimport { CoreContext } from \"../../../tree/core/CoreContext\";\nimport { WebGLCoreQuadOperation } from \"../WebGLCoreQuadOperation\";\nimport { C2dGrayscaleShader } from \"../../c2d/shaders/C2dGrayscaleShader\";\n\nexport class WebGLGrayscaleShader extends WebGLDefaultShader {\n    private _amount: number = 1;\n\n    constructor(context: CoreContext) {\n        super(context);\n    }\n\n    static getC2d() {\n        return C2dGrayscaleShader;\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    setupUniforms(operation: WebGLCoreQuadOperation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n    }\n}\n\nWebGLGrayscaleShader.prototype.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float amount;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        float grayness = 0.2 * color.r + 0.6 * color.g + 0.2 * color.b;\n        gl_FragColor = vec4(amount * vec3(grayness, grayness, grayness) + (1.0 - amount) * color.rgb, color.a);\n    }\n`;\n","import { Texture, TextureSourceLoader } from \"../tree/Texture\";\n\nexport class NoiseTexture extends Texture {\n    protected _getLookupId() {\n        return \"__noise\";\n    }\n\n    protected _getSourceLoader(): TextureSourceLoader {\n        const gl = this.stage.gl;\n        return (cb) => {\n            const noise = new Uint8Array(128 * 128 * 4);\n            for (let i = 0; i < 128 * 128 * 4; i += 4) {\n                const v = Math.floor(Math.random() * 256);\n                noise[i] = v;\n                noise[i + 1] = v;\n                noise[i + 2] = v;\n                noise[i + 3] = 255;\n            }\n            const texParams: Record<GLenum, GLenum> = {};\n\n            if (gl) {\n                texParams[gl.TEXTURE_WRAP_S] = gl.REPEAT;\n                texParams[gl.TEXTURE_WRAP_T] = gl.REPEAT;\n                texParams[gl.TEXTURE_MIN_FILTER] = gl.NEAREST;\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\n            }\n\n            cb(undefined, { source: noise, width: 128, height: 128, texParams });\n        };\n    }\n}\n","import { Texture, TextureSourceLoader } from \"../tree/Texture\";\n\nexport class RectangleTexture extends Texture {\n    protected _getLookupId() {\n        return \"__whitepix\";\n    }\n\n    protected _getSourceLoader(): TextureSourceLoader {\n        return (cb) => {\n            const whitePixel = new Uint8Array([255, 255, 255, 255]);\n            cb(undefined, { source: whitePixel, width: 1, height: 1, permanent: true });\n        };\n    }\n\n    isAutosizeTexture() {\n        return false;\n    }\n}\n","export * from \"./TextSettings\";\nexport * from \"./TextTexture\";\nexport * from \"./TextTextureRenderer\";\n","import { Stage } from \"../../tree/Stage\";\nimport { TextSettings } from \"./TextSettings\";\n\nexport class TextTextureRenderer {\n    private _context = this.canvas.getContext(\"2d\")!;\n    public renderInfo: any;\n\n    constructor(\n        private stage: Stage,\n        private canvas: HTMLCanvasElement,\n        private text: string,\n        private settings: Partial<TextSettings>,\n        private pixelRatio: number,\n    ) {}\n\n    setFontProperties() {\n        this._context.font = this._getFontSetting();\n    }\n\n    private _getFontSetting() {\n        const fontWeight = (this.settings.fontWeight || 400);\n        const fontStyle = this.settings.fontStyle || \"normal\";\n        const fontSize = (this.settings.fontSize || 40) * this.pixelRatio;\n        const fontFaces = this._getFontFaces();\n        return `${fontStyle} ${fontWeight} ${fontSize}px ${fontFaces.join(\",\")}`;\n    }\n\n    private _getFontFaces() {\n        let fontFace = this.settings.fontFace;\n        if (!fontFace) {\n            fontFace = this.stage.defaultFontFace;\n        }\n\n        if (fontFace) {\n            return fontFace.map((fontFaceName) => {\n                if (fontFaceName === \"serif\" || fontFaceName === \"sans-serif\") {\n                    return fontFaceName;\n                } else {\n                    return `\"${fontFaceName}\"`;\n                }\n            });\n        } else {\n            return [];\n        }\n    }\n\n    _load(): Promise<void> | undefined {\n        const documentFonts = getDocumentFonts();\n        if (documentFonts) {\n            const fontSetting = this._getFontSetting();\n            try {\n                if (!documentFonts.check(fontSetting, this.text)) {\n                    // Use a promise that waits for loading.\n                    return documentFonts\n                        .load(fontSetting, this.text)\n                        .catch((err) => {\n                            // Just load the fallback font.\n                            console.warn(\"Font load error\", err, fontSetting);\n                        })\n                        .then(() => {\n                            if (!documentFonts.check(fontSetting, this.text)) {\n                                console.warn(\"Font not found\", fontSetting);\n                            }\n                        });\n                }\n            } catch (e) {\n                console.warn(\"Can't check font loading for \" + fontSetting);\n            }\n        }\n    }\n\n    draw(): Promise<void> | undefined {\n        // We do not use a promise if possible to be able to load the texture during the current drawFrame cycle.\n        const loadPromise = this._load();\n        if (!loadPromise) {\n            this._draw();\n        } else {\n            return loadPromise.then(() => {\n                this._draw();\n            });\n        }\n    }\n\n    private _draw() {\n        const renderInfo: any = {};\n\n        const pixelRatio = this.pixelRatio;\n\n        let { fontSize = 40, cutSx = 0, cutEx = 0, cutSy = 0, cutEy = 0 } = this.settings;\n\n        const text = this.text;\n\n        fontSize = fontSize * pixelRatio;\n        cutSx = cutSx * pixelRatio;\n        cutEx = cutEx * pixelRatio;\n        cutSy = cutSy * pixelRatio;\n        cutEy = cutEy * pixelRatio;\n\n        // Set font properties.\n        this.setFontProperties();\n\n        const sizeInfo = this._context.measureText(text);\n        renderInfo.sizeInfo = sizeInfo;\n\n        let width = Math.ceil(sizeInfo.width);\n        let height = Math.ceil(fontSize);\n\n        renderInfo.w = width;\n        renderInfo.h = height;\n        renderInfo.pixelRatio = pixelRatio;\n\n        // To prevent canvas errors.\n        if (!width) width = 1;\n        if (!height) height = 1;\n\n        if (cutSx || cutEx) {\n            width = Math.min(width, cutEx - cutSx);\n        }\n\n        if (cutSy || cutEy) {\n            height = Math.min(height, cutEy - cutSy);\n        }\n\n        // Add extra margin to prevent issue with clipped text when scaling.\n        this.canvas.width = width;\n        this.canvas.height = height;\n\n        // Canvas context has been reset.\n        this.setFontProperties();\n\n        if (cutSx || cutSy) {\n            this._context.translate(-cutSx, -cutSy);\n        }\n\n        this._context.textBaseline = \"top\";\n        this._context.fillStyle = \"white\";\n        this._context.fillText(text, 0, 0);\n\n        if (cutSx || cutSy) {\n            this._context.translate(cutSx, cutSy);\n        }\n\n        this.renderInfo = renderInfo;\n    }\n}\n\nfunction getDocumentFonts(): FontFaceSet | undefined {\n    return (document as any).fonts;\n}\n\ntype CSSOMString = string;\ntype FontFaceLoadStatus = \"unloaded\" | \"loading\" | \"loaded\" | \"error\";\ntype FontFaceSetStatus = \"loading\" | \"loaded\";\n\ninterface FontFace {\n    family: CSSOMString;\n    style: CSSOMString;\n    weight: CSSOMString;\n    stretch: CSSOMString;\n    unicodeRange: CSSOMString;\n    variant: CSSOMString;\n    featureSettings: CSSOMString;\n    variationSettings: CSSOMString;\n    display: CSSOMString;\n    readonly status: FontFaceLoadStatus;\n    readonly loaded: Promise<FontFace>;\n    load(): Promise<FontFace>;\n}\n\ninterface FontFaceSet {\n    readonly status: FontFaceSetStatus;\n    readonly ready: Promise<FontFaceSet>;\n    check(font: string, text?: string): boolean;\n    load(font: string, text?: string): Promise<FontFace[]>;\n}\n","import { FlexLayouter } from \"./layout/FlexLayouter\";\nimport { FlexNode } from \"./FlexNode\";\nimport { SpacingMode } from \"./layout/spacing\";\n\nexport type AlignItemsMode = \"flex-start\" | \"flex-end\" | \"center\" | \"stretch\";\n\nexport type JustifyContentMode =\n    | \"flex-start\"\n    | \"flex-end\"\n    | \"center\"\n    | \"space-between\"\n    | \"space-around\"\n    | \"space-evenly\";\n\nexport type AlignContentMode = SpacingMode;\n\nexport type FlexDirection = \"row\" | \"row-reverse\" | \"column\" | \"column-reverse\";\n\nexport class FlexContainer {\n    public horizontal: boolean = true;\n    public reverse: boolean = false;\n\n    public layout: FlexLayouter = new FlexLayouter(this);\n    private _wrap: boolean = false;\n    private _alignItems: AlignItemsMode = \"stretch\";\n    private _justifyContent: JustifyContentMode = \"flex-start\";\n    private _alignContent: AlignContentMode = \"flex-start\";\n\n    private _paddingLeft: number = 0;\n    private _paddingTop: number = 0;\n    private _paddingRight: number = 0;\n    private _paddingBottom: number = 0;\n\n    private _enabled: boolean = false;\n\n    constructor(public readonly node: FlexNode) {}\n\n    get enabled() {\n        return this._enabled;\n    }\n\n    set enabled(v: boolean) {\n        if (v !== this._enabled) {\n            this._enabled = v;\n            this.node.setFlexEnabled(v);\n        }\n    }\n\n    get direction(): FlexDirection {\n        if (this.horizontal) {\n            return this.reverse ? \"row-reverse\" : \"row\";\n        } else {\n            return this.reverse ? \"column-reverse\" : \"column\";\n        }\n    }\n\n    set direction(f: FlexDirection) {\n        if (this.direction === f) return;\n\n        this.horizontal = f === \"row\" || f === \"row-reverse\";\n        this.reverse = f === \"row-reverse\" || f === \"column-reverse\";\n\n        this.changedContents();\n    }\n\n    set wrap(v) {\n        this._wrap = v;\n        this.changedContents();\n    }\n\n    get wrap() {\n        return this._wrap;\n    }\n\n    get alignItems() {\n        return this._alignItems;\n    }\n\n    set alignItems(v: AlignItemsMode) {\n        if (this._alignItems === v) return;\n\n        this._alignItems = v;\n\n        this.changedContents();\n    }\n\n    get alignContent() {\n        return this._alignContent;\n    }\n\n    set alignContent(v: AlignContentMode) {\n        if (this._alignContent === v) return;\n        this._alignContent = v;\n\n        this.changedContents();\n    }\n\n    get justifyContent() {\n        return this._justifyContent;\n    }\n\n    set justifyContent(v: JustifyContentMode) {\n        if (this._justifyContent === v) return;\n\n        this._justifyContent = v;\n\n        this.changedContents();\n    }\n\n    set padding(v) {\n        this.paddingLeft = v;\n        this.paddingTop = v;\n        this.paddingRight = v;\n        this.paddingBottom = v;\n    }\n\n    get padding() {\n        return this.paddingLeft;\n    }\n\n    set paddingLeft(v) {\n        this._paddingLeft = v;\n        this.changedDimensions();\n    }\n\n    get paddingLeft() {\n        return this._paddingLeft;\n    }\n\n    set paddingTop(v) {\n        this._paddingTop = v;\n        this.changedDimensions();\n    }\n\n    get paddingTop() {\n        return this._paddingTop;\n    }\n\n    set paddingRight(v) {\n        this._paddingRight = v;\n        this.changedDimensions();\n    }\n\n    get paddingRight() {\n        return this._paddingRight;\n    }\n\n    set paddingBottom(v) {\n        this._paddingBottom = v;\n        this.changedDimensions();\n    }\n\n    get paddingBottom() {\n        return this._paddingBottom;\n    }\n\n    private changedDimensions() {\n        this.node.forceLayout();\n    }\n\n    changedContents() {\n        this.node.changedContents();\n    }\n}\n","export type SpacingMode =\n    | \"flex-start\"\n    | \"flex-end\"\n    | \"center\"\n    | \"space-between\"\n    | \"space-around\"\n    | \"space-evenly\"\n    | \"stretch\";\n\nexport function getSpacing(\n    mode: SpacingMode,\n    numberOfItems: number,\n    remainingSpace: number,\n): {\n    spacingBefore: number;\n    spacingBetween: number;\n} {\n    const itemGaps = numberOfItems - 1;\n    let spacePerGap;\n\n    let spacingBefore;\n    let spacingBetween;\n\n    switch (mode) {\n        case \"flex-start\":\n            spacingBefore = 0;\n            spacingBetween = 0;\n            break;\n        case \"flex-end\":\n            spacingBefore = remainingSpace;\n            spacingBetween = 0;\n            break;\n        case \"center\":\n            spacingBefore = remainingSpace / 2;\n            spacingBetween = 0;\n            break;\n        case \"space-between\":\n            spacingBefore = 0;\n            spacingBetween = Math.max(0, remainingSpace) / itemGaps;\n            break;\n        case \"space-around\":\n            if (remainingSpace < 0) {\n                return getSpacing(\"center\", numberOfItems, remainingSpace);\n            } else {\n                spacePerGap = remainingSpace / (itemGaps + 1);\n                spacingBefore = 0.5 * spacePerGap;\n                spacingBetween = spacePerGap;\n            }\n            break;\n        case \"space-evenly\":\n            if (remainingSpace < 0) {\n                return getSpacing(\"center\", numberOfItems, remainingSpace);\n            } else {\n                spacePerGap = remainingSpace / (itemGaps + 2);\n                spacingBefore = spacePerGap;\n                spacingBetween = spacePerGap;\n            }\n            break;\n        case \"stretch\":\n            spacingBefore = 0;\n            spacingBetween = 0;\n            break;\n        default:\n            throw new Error(\"Unknown mode: \" + mode);\n    }\n\n    return { spacingBefore, spacingBetween };\n}\n","import { FlexContainer, AlignItemsMode } from \"./FlexContainer\";\nimport { FlexNode } from \"./FlexNode\";\n\nexport class FlexItem {\n    public static readonly SHRINK_AUTO = -1;\n\n    public container?: FlexContainer;\n\n    private _grow: number = 0;\n    private _shrink: number = FlexItem.SHRINK_AUTO;\n    private _alignSelf?: AlignItemsMode;\n\n    private _minWidth: number = 0;\n    private _minHeight: number = 0;\n\n    private _maxWidth: number = 0;\n    private _maxHeight: number = 0;\n\n    private _marginLeft: number = 0;\n    private _marginTop: number = 0;\n    private _marginRight: number = 0;\n    private _marginBottom: number = 0;\n\n    private _enabled: boolean = true;\n\n    constructor(public readonly node: FlexNode) {}\n\n    public getContainer() {\n        return this.container;\n    }\n\n    public setContainer(c: FlexContainer | undefined) {\n        this.container = c;\n    }\n\n    get enabled() {\n        return this._enabled;\n    }\n\n    set enabled(v: boolean) {\n        if (v !== this._enabled) {\n            const prevFlexParent = this.node.flexParent;\n            this._enabled = v;\n            this.node.updateEnabledFlag();\n            if (prevFlexParent) {\n                prevFlexParent.changedChildren();\n            }\n            const newFlexParent = this.node.flexParent;\n            if (newFlexParent) {\n                newFlexParent.changedChildren();\n            }\n        }\n    }\n\n    get grow() {\n        return this._grow;\n    }\n\n    set grow(v: number) {\n        if (this._grow === v) return;\n\n        this._grow = v;\n\n        this._changed();\n    }\n\n    set shrink(v: number) {\n        if (this._shrink === v) return;\n\n        this._shrink = v;\n\n        this._changed();\n    }\n\n    get shrink() {\n        if (this._shrink === FlexItem.SHRINK_AUTO) {\n            return this.getDefaultShrink();\n        }\n        return this._shrink;\n    }\n\n    private getDefaultShrink() {\n        if (this.node.isFlexEnabled()) {\n            return 1;\n        } else {\n            // All non-flex containers are absolutely positioned items with fixed dimensions, and by default not shrinkable.\n            return 0;\n        }\n    }\n\n    get alignSelf(): AlignItemsMode | undefined {\n        return this._alignSelf;\n    }\n\n    set alignSelf(v: AlignItemsMode | undefined) {\n        if (this._alignSelf === v) return;\n\n        if (v === undefined) {\n            this._alignSelf = undefined;\n        } else {\n            this._alignSelf = v;\n        }\n\n        this._changed();\n    }\n\n    get minWidth() {\n        return this._minWidth;\n    }\n\n    set minWidth(v) {\n        this._minWidth = Math.max(0, v);\n        this.node.forceLayout(true, false);\n    }\n\n    get minHeight() {\n        return this._minHeight;\n    }\n\n    set minHeight(v) {\n        this._minHeight = Math.max(0, v);\n        this.node.forceLayout(false, true);\n    }\n\n    get maxWidth() {\n        return this._maxWidth;\n    }\n\n    set maxWidth(v) {\n        this._maxWidth = Math.max(0, v);\n        this.node.forceLayout(true, false);\n    }\n\n    get maxHeight() {\n        return this._maxHeight;\n    }\n\n    set maxHeight(v) {\n        this._maxHeight = Math.max(0, v);\n        this.node.forceLayout(false, true);\n    }\n\n    /**\n     * @note margins behave slightly different than in HTML with regard to shrinking.\n     * In HTML, (outer) margins can be removed when shrinking. In this engine, they will not shrink at all.\n     */\n    set margin(v) {\n        this.marginLeft = v;\n        this.marginTop = v;\n        this.marginRight = v;\n        this.marginBottom = v;\n    }\n\n    get margin() {\n        return this.marginLeft;\n    }\n\n    set marginLeft(v) {\n        this._marginLeft = v;\n        this._changed();\n    }\n\n    get marginLeft() {\n        return this._marginLeft;\n    }\n\n    set marginTop(v) {\n        this._marginTop = v;\n        this._changed();\n    }\n\n    get marginTop() {\n        return this._marginTop;\n    }\n\n    set marginRight(v) {\n        this._marginRight = v;\n        this._changed();\n    }\n\n    get marginRight() {\n        return this._marginRight;\n    }\n\n    set marginBottom(v) {\n        this._marginBottom = v;\n        this._changed();\n    }\n\n    get marginBottom() {\n        return this._marginBottom;\n    }\n\n    private _changed() {\n        if (this.container) this.container.changedContents();\n    }\n\n    resetLayoutSize() {\n        this.resetHorizontalAxisLayoutSize();\n        this.resetVerticalAxisLayoutSize();\n    }\n\n    resetCrossAxisLayoutSize() {\n        if (this.horizontal) {\n            this.resetVerticalAxisLayoutSize();\n        } else {\n            this.resetHorizontalAxisLayoutSize();\n        }\n    }\n\n    private resetHorizontalAxisLayoutSize() {\n        let w = this.node.getRelAxisSize(true);\n        if (this._minWidth) {\n            w = Math.max(this._minWidth, w);\n        }\n        if (this._maxWidth) {\n            w = Math.min(this._maxWidth, w);\n        }\n        this.node.setAxisLayoutSize(true, w);\n    }\n\n    private resetVerticalAxisLayoutSize() {\n        let h = this.node.getRelAxisSize(false);\n        if (this._minHeight) {\n            h = Math.max(this._minHeight, h);\n        }\n        if (this._maxHeight) {\n            h = Math.min(this._maxHeight, h);\n        }\n        this.node.setAxisLayoutSize(false, h);\n    }\n\n    getCrossAxisMinSizeSetting() {\n        return this.getMinSizeSetting(!this.horizontal);\n    }\n\n    getCrossAxisMaxSizeSetting() {\n        return this.getMaxSizeSetting(!this.horizontal);\n    }\n\n    getMainAxisMaxSizeSetting() {\n        return this.getMaxSizeSetting(this.horizontal);\n    }\n\n    getMinSizeSetting(horizontal: boolean) {\n        if (horizontal) {\n            return this._minWidth;\n        } else {\n            return this._minHeight;\n        }\n    }\n\n    getMaxSizeSetting(horizontal: boolean) {\n        if (horizontal) {\n            return this._maxWidth;\n        } else {\n            return this._maxHeight;\n        }\n    }\n\n    private get horizontal() {\n        return this.container!.horizontal;\n    }\n\n    getMainAxisMinSize() {\n        return this.node.getAxisMinSize(this.horizontal);\n    }\n\n    getCrossAxisMinSize() {\n        return this.node.getAxisMinSize(!this.horizontal);\n    }\n\n    getMainAxisLayoutSize() {\n        return this.node.getAxisLayoutSize(this.horizontal);\n    }\n\n    getMainAxisLayoutPos() {\n        return this.node.getAxisLayoutPos(this.horizontal);\n    }\n\n    setMainAxisLayoutPos(pos: number) {\n        return this.node.setAxisLayoutPos(this.horizontal, pos);\n    }\n\n    setCrossAxisLayoutPos(pos: number) {\n        return this.node.setAxisLayoutPos(!this.horizontal, pos);\n    }\n\n    getCrossAxisLayoutSize() {\n        return this.node.getAxisLayoutSize(!this.horizontal);\n    }\n\n    resizeCrossAxis(size: number) {\n        return this.node.resizeAxis(!this.horizontal, size);\n    }\n\n    resizeMainAxis(size: number) {\n        return this.node.resizeAxis(this.horizontal, size);\n    }\n\n    private getMainAxisPadding() {\n        return this.node.getTotalPadding(this.horizontal);\n    }\n\n    getCrossAxisPadding() {\n        return this.node.getTotalPadding(!this.horizontal);\n    }\n\n    getMainAxisMargin() {\n        return this.node.getTotalMargin(this.horizontal);\n    }\n\n    getCrossAxisMargin() {\n        return this.node.getTotalMargin(!this.horizontal);\n    }\n\n    getMainAxisMinSizeWithPaddingAndMargin() {\n        return this.getMainAxisMinSize() + this.getMainAxisPadding() + this.getMainAxisMargin();\n    }\n\n    getCrossAxisMinSizeWithPaddingAndMargin() {\n        return this.getCrossAxisMinSize() + this.getCrossAxisPadding() + this.getCrossAxisMargin();\n    }\n\n    getMainAxisLayoutSizeWithPaddingAndMargin() {\n        return this.getMainAxisLayoutSize() + this.getMainAxisPadding() + this.getMainAxisMargin();\n    }\n\n    getCrossAxisLayoutSizeWithPaddingAndMargin() {\n        return this.getCrossAxisLayoutSize() + this.getCrossAxisPadding() + this.getCrossAxisMargin();\n    }\n\n    hasFixedCrossAxisSize() {\n        return !this.node.isZeroAxisSize(!this.horizontal);\n    }\n\n    hasRelCrossAxisSize() {\n        return !!(this.horizontal ? this.node.sourceFuncH : this.node.sourceFuncW);\n    }\n}\n","import { FlexContainer } from \"./FlexContainer\";\nimport { FlexItem } from \"./FlexItem\";\nimport { FlexSubject } from \"./FlexSubject\";\n\n/**\n * This is the connection between the render tree with the layout tree of this flex container/item.\n */\nexport class FlexNode {\n    /**\n     * Possible values (only in case of container):\n     * bit 0: has changed or contains items with changes\n     * bit 1: width changed\n     * bit 2: height changed\n     */\n    private _recalc: number = 0;\n\n    private _enabled: boolean = false;\n\n    public x: number = 0;\n    public y: number = 0;\n    public w: number = 0;\n    public h: number = 0;\n\n    private _flex?: FlexContainer;\n    private _flexItem?: FlexItem;\n\n    private _items?: FlexNode[];\n\n    // When a flex node is skipped, it does not take part in the flex layout.\n    // Both ancestors and descendants are considered to be at this node's level instead.\n    private _skip: boolean = false;\n\n    constructor(public readonly subject: FlexSubject) {}\n\n    get flexLayout() {\n        return this.isFlexEnabled() ? this.flex.layout : undefined;\n    }\n\n    layoutFlexTree() {\n        if (this.isFlexEnabled()) {\n            this.flexLayout!.layoutTree();\n        }\n    }\n\n    get flex(): FlexContainer {\n        this._ensureFlex();\n        return this._flex!;\n    }\n\n    private _ensureFlex() {\n        if (!this._flex) {\n            this._flex = new FlexContainer(this);\n        }\n    }\n\n    setFlexEnabled(v: boolean) {\n        // When skipped, defer enabling until no longer skipped.\n        if (!this._skip) {\n            if (v) {\n                this.enableFlex();\n            } else {\n                this.disableFlex();\n            }\n        }\n    }\n\n    private enableFlex() {\n        this.forceLayout();\n        this.enableChildrenAsFlexItems();\n        this.updateEnabledFlag();\n    }\n\n    private disableFlex() {\n        this.forceLayout();\n        this.disableChildrenAsFlexItems();\n        this.updateEnabledFlag();\n    }\n\n    get skip(): boolean {\n        return this._skip;\n    }\n\n    set skip(value: boolean) {\n        if (this._skip !== value) {\n            if (value) {\n                this.setSkipped();\n            } else {\n                this.unsetSkipped();\n            }\n        }\n    }\n\n    private setSkipped() {\n        const flexParent = this.flexParent;\n\n        const isFlexEnabled = this.isFlexEnabled();\n\n        this._skip = true;\n\n        if (isFlexEnabled) {\n            // We disable flex to simplify some cache-related stuff.\n            this.disableFlex();\n        }\n\n        if (flexParent) {\n            this.disableFlexItem();\n            this.enableChildrenAsFlexItems();\n            flexParent.changedChildren();\n        }\n    }\n\n    private unsetSkipped() {\n        this._skip = false;\n\n        const parentIsFlex = this.getParent()?.isFlexEnabled();\n\n        if (parentIsFlex) {\n            this.disableChildrenAsFlexItems();\n            this.enableFlexItem();\n            this.getParent()!.changedChildren();\n        }\n\n        if (this._flex && this._flex.enabled) {\n            this.enableFlex();\n        }\n    }\n\n    isFlexEnabled() {\n        return !this._skip && (this._flex ? this._flex.enabled : false);\n    }\n\n    isFlexItemEnabled() {\n        return !this._skip && this.flexParent !== undefined;\n    }\n\n    isEnabled() {\n        return this.isFlexEnabled() || this.isFlexItemEnabled();\n    }\n\n    get flexItem(): FlexItem {\n        this.ensureFlexItem();\n        return this._flexItem!;\n    }\n\n    private ensureFlexItem() {\n        if (!this._flexItem) {\n            this._flexItem = new FlexItem(this);\n        }\n    }\n\n    private getChildren(): FlexNode[] {\n        const results: FlexNode[] = [];\n        const children = this.subject.getChildren();\n        if (children) {\n            const n = children.length;\n            for (let i = 0; i < n; i++) {\n                const child = children[i];\n                FlexNode.gatherChildren(child, results);\n            }\n        }\n        return results;\n    }\n\n    private static gatherChildren(child: FlexSubject, results: FlexNode[]) {\n        if (child.hasLayout() && child.getLayout().skip) {\n            const children = child.getChildren();\n            if (children) {\n                const n = children.length;\n                for (let i = 0; i < n; i++) {\n                    const child = children[i];\n                    this.gatherChildren(child, results);\n                }\n            }\n        } else {\n            results.push(child.getLayout());\n        }\n    }\n\n    private enableChildrenAsFlexItems() {\n        const children = this.getChildren();\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const child = children[i];\n                child.enableFlexItem();\n            }\n        }\n    }\n\n    private disableChildrenAsFlexItems() {\n        const children = this.getChildren();\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const child = children[i];\n                child.disableFlexItem();\n            }\n        }\n    }\n\n    private enableFlexItem() {\n        this.ensureFlexItem();\n        const flexParent = this.getParent()!;\n        this._flexItem!.setContainer(flexParent._flex);\n        flexParent.changedContents();\n        this.updateEnabledFlag();\n    }\n\n    private disableFlexItem() {\n        if (this._flexItem) {\n            this._flexItem.setContainer(undefined);\n        }\n\n        // We keep the flexItem object because it may contain custom settings.\n        this.updateEnabledFlag();\n    }\n\n    public updateEnabledFlag() {\n        const enabled = this.isEnabled();\n        if (this._enabled !== enabled) {\n            if (!enabled) {\n                this.disable();\n            }\n            this._enabled = enabled;\n        }\n    }\n\n    private disable() {\n        this.restoreSubjectToNonFlex();\n    }\n\n    private restoreSubjectToNonFlex() {\n        const subject = this.subject;\n        subject.setLayoutCoords(subject.getSourceX(), subject.getSourceY());\n        subject.setLayoutDimensions(subject.getSourceW(), subject.getSourceH());\n    }\n\n    private getParent(): FlexNode | undefined {\n        const activeParent = FlexNode.getActiveLayoutSubject(this.subject.getParent());\n        return activeParent ? activeParent.getLayout() : undefined;\n    }\n\n    setParent(from?: FlexSubject, to?: FlexSubject) {\n        const fromNode = FlexNode.getActiveLayoutNode(from);\n        if (fromNode?.isFlexEnabled()) {\n            fromNode.changedChildren();\n        }\n\n        const toNode = FlexNode.getActiveLayoutNode(to);\n        if (toNode?.isFlexEnabled()) {\n            if (this._skip) {\n                this.enableChildrenAsFlexItems();\n            } else {\n                this.enableFlexItem();\n            }\n            toNode!.changedChildren();\n        } else {\n            if (fromNode?.isFlexEnabled()) {\n                if (this._skip) {\n                    this.disableChildrenAsFlexItems();\n                } else {\n                    this.disableFlexItem();\n                }\n                fromNode!.changedChildren();\n            }\n        }\n    }\n\n    get flexParent(): FlexNode | undefined {\n        if (!this.flexItem.enabled) {\n            return undefined;\n        }\n\n        const parent = this.getParent();\n\n        if (parent && parent.isFlexEnabled()) {\n            return parent;\n        }\n        return undefined;\n    }\n\n    updateVisible() {\n        const parent = this.flexParent;\n        if (parent) {\n            parent.changedChildren();\n        }\n    }\n\n    get items() {\n        if (!this._items) {\n            this._items = this.getFlexItems();\n        }\n        return this._items;\n    }\n\n    private getFlexItems(): FlexNode[] {\n        const items = [];\n        const children = this.getChildren();\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const item = children[i];\n                if (item.subject.isDisplayed()) {\n                    if (item.isFlexItemEnabled()) {\n                        items.push(item);\n                    }\n                }\n            }\n        }\n        return items;\n    }\n\n    public changedChildren() {\n        this.clearFlexItemsCache();\n        this.changedContents();\n    }\n\n    private clearFlexItemsCache() {\n        this._items = undefined;\n    }\n\n    setLayout(x: number, y: number, w: number, h: number) {\n        const subject = this.subject;\n\n        let sourceX = subject.getSourceX();\n        let sourceY = subject.getSourceY();\n        if (this.sourceFuncX) {\n            sourceX = this.sourceFuncX(this.getParentAxisSizeWithPadding(true));\n        }\n        if (this.sourceFuncY) {\n            sourceY = this.sourceFuncY(this.getParentAxisSizeWithPadding(false));\n        }\n\n        if (this.isFlexItemEnabled()) {\n            subject.setLayoutCoords(x + sourceX, y + sourceY);\n        } else {\n            // Reuse the x,y 'settings'.\n            subject.setLayoutCoords(sourceX, sourceY);\n        }\n        subject.setLayoutDimensions(w, h);\n    }\n\n    forceLayout(changeWidth = true, changeHeight = true) {\n        this.updateRecalc(changeWidth, changeHeight);\n    }\n\n    changedContents() {\n        this.updateRecalc();\n    }\n\n    isChanged() {\n        return this._recalc > 0;\n    }\n\n    private updateRecalc(changeExternalWidth = false, changeExternalHeight = false) {\n        if (this.isFlexEnabled()) {\n            const layout = this._flex!.layout;\n\n            // When something internal changes, it can have effect on the external dimensions.\n            changeExternalWidth = changeExternalWidth || layout.isAxisFitToContents(true);\n            changeExternalHeight = changeExternalHeight || layout.isAxisFitToContents(false);\n        }\n\n        const recalc = 1 + (changeExternalWidth ? 2 : 0) + (changeExternalHeight ? 4 : 0);\n        const newRecalcFlags = this.getNewRecalcFlags(recalc);\n        this._recalc |= recalc;\n        if (newRecalcFlags > 1) {\n            if (this.flexParent) {\n                this.flexParent.updateRecalcBottomUp(recalc);\n            } else {\n                this.subject.triggerLayout();\n            }\n        } else {\n            this.subject.triggerLayout();\n        }\n    }\n\n    getNewRecalcFlags(flags: number) {\n        return (7 - this._recalc) & flags;\n    }\n\n    private updateRecalcBottomUp(childRecalc: number) {\n        const newRecalc = this._getRecalcFromChangedChildRecalc(childRecalc);\n        const newRecalcFlags = this.getNewRecalcFlags(newRecalc);\n        this._recalc |= newRecalc;\n        if (newRecalcFlags > 1) {\n            const flexParent = this.flexParent;\n            if (flexParent) {\n                flexParent.updateRecalcBottomUp(newRecalc);\n            } else {\n                this.subject.triggerLayout();\n            }\n        } else {\n            this.subject.triggerLayout();\n        }\n    }\n\n    private _getRecalcFromChangedChildRecalc(childRecalc: number) {\n        const layout = this._flex!.layout;\n\n        const mainAxisRecalcFlag = layout.horizontal ? 1 : 2;\n        const crossAxisRecalcFlag = layout.horizontal ? 2 : 1;\n\n        const crossAxisDimensionsChangedInChild = childRecalc & crossAxisRecalcFlag;\n        if (!crossAxisDimensionsChangedInChild) {\n            const mainAxisDimensionsChangedInChild = childRecalc & mainAxisRecalcFlag;\n            if (mainAxisDimensionsChangedInChild) {\n                const mainAxisIsWrapping = layout.isWrapping();\n                if (mainAxisIsWrapping) {\n                    const crossAxisIsFitToContents = layout.isCrossAxisFitToContents();\n                    if (crossAxisIsFitToContents) {\n                        // Special case: due to wrapping, the cross axis size may be changed.\n                        childRecalc += crossAxisRecalcFlag;\n                    }\n                }\n            }\n        }\n\n        let isWidthDynamic = layout.isAxisFitToContents(true);\n        let isHeightDynamic = layout.isAxisFitToContents(false);\n\n        if (layout.hasShrunk()) {\n            // If during previous layout this container was 'shrunk', any changes may change the 'min axis size' of the\n            // contents, leading to a different axis size on this container even when it was not 'fit to contents'.\n            if (layout.horizontal) {\n                isWidthDynamic = true;\n            } else {\n                isHeightDynamic = true;\n            }\n        }\n\n        const localRecalc = 1 + (isWidthDynamic ? 2 : 0) + (isHeightDynamic ? 4 : 0);\n\n        return childRecalc & localRecalc;\n    }\n\n    get recalc() {\n        return this._recalc;\n    }\n\n    clearRecalcFlag() {\n        this._recalc = 0;\n    }\n\n    enableLocalRecalcFlag() {\n        this._recalc = 1;\n    }\n\n    updatedSourceW() {\n        this.forceLayout(true, false);\n    }\n\n    updatedSourceH() {\n        this.forceLayout(false, true);\n    }\n\n    get sourceFuncX() {\n        return this.subject.getSourceFuncX();\n    }\n\n    get sourceFuncY() {\n        return this.subject.getSourceFuncY();\n    }\n\n    get sourceFuncW() {\n        return this.subject.getSourceFuncW();\n    }\n\n    get sourceFuncH() {\n        return this.subject.getSourceFuncH();\n    }\n\n    getAxisLayoutSize(horizontal: boolean) {\n        return horizontal ? this.w : this.h;\n    }\n\n    setAxisLayoutSize(horizontal: boolean, size: number) {\n        if (horizontal) {\n            this.w = size;\n        } else {\n            this.h = size;\n        }\n    }\n\n    getAxisLayoutPos(horizontal: boolean) {\n        return horizontal ? this.x : this.y;\n    }\n\n    setAxisLayoutPos(horizontal: boolean, pos: number) {\n        if (horizontal) {\n            this.x = pos;\n        } else {\n            this.y = pos;\n        }\n    }\n\n    getParentAxisSizeWithPadding(horizontal: boolean) {\n        const flexParent = this.getParent();\n        if (!flexParent) {\n            return 0;\n        } else {\n            if (flexParent.isFlexEnabled()) {\n                // Use pending layout size.\n                return flexParent.getAxisLayoutSize(horizontal) + flexParent.getTotalPadding(horizontal);\n            } else {\n                // Use layouted size.\n                const parentSubject = flexParent.subject;\n                return horizontal ? parentSubject.getLayoutW() : parentSubject.getLayoutH();\n            }\n        }\n    }\n\n    getHorizontalPaddingOffset() {\n        return this.getPaddingOffset(true);\n    }\n\n    getVerticalPaddingOffset() {\n        return this.getPaddingOffset(false);\n    }\n\n    getPaddingOffset(horizontal: boolean) {\n        if (this.isFlexEnabled()) {\n            const flex = this.flex;\n            if (horizontal) {\n                return flex.paddingLeft;\n            } else {\n                return flex.paddingTop;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    getHorizontalPadding() {\n        return this.getTotalPadding(true);\n    }\n\n    getVerticalPadding() {\n        return this.getTotalPadding(false);\n    }\n\n    getTotalPadding(horizontal: boolean) {\n        if (this.isFlexEnabled()) {\n            const flex = this.flex;\n            if (horizontal) {\n                return flex.paddingRight + flex.paddingLeft;\n            } else {\n                return flex.paddingTop + flex.paddingBottom;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    getRelAxisSize(horizontal: boolean) {\n        if (horizontal) {\n            if (this.sourceFuncW) {\n                if (this.allowRelAxisSizeFunction(true)) {\n                    return this.sourceFuncW(this.getParentAxisSizeWithPadding(true));\n                } else {\n                    return 0;\n                }\n            } else {\n                return this.subject.getSourceW();\n            }\n        } else {\n            if (this.sourceFuncH) {\n                if (this.allowRelAxisSizeFunction(false)) {\n                    return this.sourceFuncH(this.getParentAxisSizeWithPadding(false));\n                } else {\n                    return 0;\n                }\n            } else {\n                return this.subject.getSourceH();\n            }\n        }\n    }\n\n    getMarginOffset(horizontal: boolean) {\n        const flexItem = this.flexItem!;\n        if (flexItem) {\n            if (horizontal) {\n                return flexItem.marginLeft;\n            } else {\n                return flexItem.marginTop;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    getHorizontalMarginOffset() {\n        return this.getMarginOffset(true);\n    }\n\n    getVerticalMarginOffset() {\n        return this.getMarginOffset(false);\n    }\n\n    getTotalMargin(horizontal: boolean) {\n        const flexItem = this.flexItem!;\n        if (flexItem) {\n            if (horizontal) {\n                return flexItem.marginRight + flexItem.marginLeft;\n            } else {\n                return flexItem.marginTop + flexItem.marginBottom;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    private allowRelAxisSizeFunction(horizontal: boolean) {\n        const flexParent = this.flexParent;\n        if (flexParent && flexParent.flex.layout.isAxisFitToContents(horizontal)) {\n            // We don't allow relative width on fit-to-contents because it leads to conflicts.\n            return false;\n        }\n        return true;\n    }\n\n    isZeroAxisSize(horizontal: boolean) {\n        if (horizontal) {\n            return !this.subject.getSourceW() && !this.sourceFuncW;\n        } else {\n            return !this.subject.getSourceH() && !this.sourceFuncH;\n        }\n    }\n\n    getAxisMinSize(horizontal: boolean) {\n        let minSize = this.getPlainAxisMinSize(horizontal);\n\n        let flexItemMinSize = 0;\n        if (this.isFlexItemEnabled()) {\n            flexItemMinSize = this.flexItem!.getMinSizeSetting(horizontal);\n        }\n\n        const hasLimitedMinSize = flexItemMinSize > 0;\n        if (hasLimitedMinSize) {\n            minSize = Math.max(minSize, flexItemMinSize);\n        }\n        return minSize;\n    }\n\n    private getPlainAxisMinSize(horizontal: boolean) {\n        if (this.isFlexEnabled()) {\n            return this.flex.layout.getAxisMinLineSize(horizontal);\n        } else {\n            const isShrinkable = this.flexItem!.shrink !== 0;\n            if (isShrinkable) {\n                return 0;\n            } else {\n                return this.getRelAxisSize(horizontal);\n            }\n        }\n    }\n\n    resizeAxis(horizontal: boolean, size: number) {\n        if (this.isFlexEnabled()) {\n            const flex = this.flex;\n            const isMainAxis = flex.horizontal === horizontal;\n            if (isMainAxis) {\n                flex.layout.resizeMainAxis(size);\n            } else {\n                flex.layout.resizeCrossAxis(size);\n            }\n        } else {\n            this.setAxisLayoutSize(horizontal, size);\n        }\n    }\n\n    isLayoutRoot() {\n        return this.isFlexEnabled() && !this.isFlexItemEnabled();\n    }\n\n    static getActiveLayoutNode(subject: FlexSubject | undefined): FlexNode | undefined {\n        return this.getActiveLayoutSubject(subject)?.getLayout();\n    }\n\n    static getActiveLayoutSubject(subject: FlexSubject | undefined): FlexSubject | undefined {\n        let current: FlexSubject | undefined = subject;\n        while (current && current.hasLayout() && current.getLayout().skip) {\n            current = current.getParent();\n        }\n        return current;\n    }\n}\n","/**\n * Manages the list of children for an element.\n */\n\nimport { ObjectList } from \"./ObjectList\";\nimport { Element } from \"./Element\";\n\nconst gc = (i: Element) => i.core;\n\nexport class ElementChildList extends ObjectList<Element> {\n    constructor(private readonly element: Element) {\n        super();\n    }\n\n    getIndex(item: Element) {\n        if (item.parent !== this.element) {\n            // Performance optimization for new items.\n            return -1;\n        } else {\n            return super.getIndex(item);\n        }\n    }\n\n    itemInList(item: Element) {\n        // Performance improvement.\n        return item.parent === this.element;\n    }\n\n    protected onAdd(item: Element, index: number) {\n        this.connectParent(item);\n        this.element.core.addChildAt(index, item.core);\n    }\n\n    protected onRemove(item: Element, index: number) {\n        item._setParent(undefined);\n        this.element.core.removeChildAt(index);\n    }\n\n    protected onSync(removed: Element[], added: Element[], order: Element[]) {\n        for (let i = 0, n = removed.length; i < n; i++) {\n            removed[i]._setParent(undefined);\n        }\n        for (let i = 0, n = added.length; i < n; i++) {\n            this.connectParent(added[i]);\n        }\n        this.element.core.syncChildren(removed.map(gc), added.map(gc), order.map(gc));\n    }\n\n    protected onSet(item: Element, index: number, prevItem: Element) {\n        prevItem._setParent(undefined);\n\n        this.connectParent(item);\n        this.element.core.setChildAt(index, item.core);\n    }\n\n    protected onMove(item: Element, fromIndex: number, toIndex: number) {\n        this.element.core.moveChild(fromIndex, toIndex);\n    }\n\n    private connectParent(item: Element) {\n        const prevParent = item.parent;\n        if (prevParent && prevParent !== this.element) {\n            // Cleanup in previous child list.\n            const prevChildList = prevParent.childList;\n            const index = prevChildList.getIndex(item);\n            prevChildList.removeSilently(index);\n\n            // Also clean up element core.\n            prevParent.core.removeChildAt(index);\n        }\n\n        item._setParent(this.element);\n    }\n}\n","import { Element } from \"./Element\";\nimport { Utils } from \"./Utils\";\n\nexport interface ListType {\n    ref: string | undefined;\n}\n\n/**\n * Manages a list of objects.\n * Objects may be patched. Then, they can be referenced using the 'ref' (string) property.\n */\nexport class ObjectList<T extends ListType> {\n    private _items: T[] = [];\n    private _refs: Record<string, T | undefined> = {};\n\n    getItems() {\n        return this._items;\n    }\n\n    get first(): T | undefined {\n        return this._items[0];\n    }\n\n    get last(): T | undefined {\n        return this._items.length ? this._items[this._items.length - 1] : undefined;\n    }\n\n    add(item: T) {\n        if (!this.itemInList(item)) {\n            if (item.ref) {\n                this._refs[item.ref] = item;\n            }\n            this._items.push(item);\n            this.onAdd(item, this._items.length - 1);\n        }\n    }\n\n    itemInList(item: T) {\n        return this.getIndex(item) !== -1;\n    }\n\n    addAt(item: T, index: number) {\n        if (index >= 0 && index <= this._items.length) {\n            let currentIndex = -1;\n            currentIndex = this.getIndex(item);\n            if (currentIndex === index) {\n                return;\n            }\n\n            if (currentIndex !== -1) {\n                this.setAt(item, index);\n            } else {\n                if (item.ref) {\n                    this._refs[item.ref] = item;\n                }\n                this._items.splice(index, 0, item);\n                this.onAdd(item, index);\n            }\n        } else {\n            throw new Error(\"addAt: The index \" + index + \" is out of bounds \" + this._items.length);\n        }\n    }\n\n    replaceByRef(item: T) {\n        if (item.ref) {\n            const existingItem = this.getByRef(item.ref);\n            if (!existingItem) {\n                throw new Error(\"replaceByRef: no item found with reference: \" + item.ref);\n            }\n            this.replace(item, existingItem);\n        } else {\n            throw new Error(\"replaceByRef: no ref specified in item\");\n        }\n        this.addAt(item, this._items.length);\n    }\n\n    replace(item: T, prevItem: T) {\n        const index = this.getIndex(prevItem);\n        if (index === -1) {\n            throw new Error(\"replace: The previous item does not exist\");\n        }\n        this.setAt(item, index);\n    }\n\n    setAt(item: T, index: number) {\n        if (index >= 0 && index <= this._items.length) {\n            const currentIndex = this.getIndex(item);\n            if (currentIndex !== -1) {\n                if (currentIndex !== index) {\n                    const fromIndex = currentIndex;\n                    if (fromIndex !== index) {\n                        this._items.splice(fromIndex, 1);\n                        this._items.splice(index, 0, item);\n                        this.onMove(item, fromIndex, index);\n                    }\n                }\n            } else {\n                if (index < this._items.length) {\n                    const ref = this._items[index].ref;\n                    if (ref) {\n                        this._refs[ref] = undefined;\n                    }\n                }\n\n                const prevItem = this._items[index];\n\n                // Doesn't exist yet: overwrite current.\n                this._items[index] = item;\n\n                if (item.ref) {\n                    this._refs[item.ref] = item;\n                }\n\n                this.onSet(item, index, prevItem);\n            }\n        } else {\n            throw new Error(\"setAt: The index \" + index + \" is out of bounds \" + this._items.length);\n        }\n    }\n\n    getAt(index: number) {\n        return this._items[index];\n    }\n\n    getIndex(item: T) {\n        return this._items.indexOf(item);\n    }\n\n    remove(item: T) {\n        const index = this._items.indexOf(item);\n\n        if (index !== -1) {\n            this.removeAt(index);\n        }\n    }\n\n    removeAt(index: number) {\n        const item = this.removeSilently(index);\n\n        this.onRemove(item, index);\n\n        return item;\n    }\n\n    protected removeSilently(index: number): T {\n        const item = this._items[index];\n\n        if (item.ref) {\n            this._refs[item.ref] = undefined;\n        }\n\n        this._items.splice(index, 1);\n\n        return item;\n    }\n\n    clear() {\n        const n = this._items.length;\n        if (n) {\n            const prev = this._items;\n            this._items = [];\n            this._refs = {};\n            this.onSync(prev, [], []);\n        }\n    }\n\n    get length() {\n        return this._items.length;\n    }\n\n    getRefs() {\n        return this._refs;\n    }\n\n    getByRef(ref: string) {\n        return this._refs[ref];\n    }\n\n    clearRef(ref: string) {\n        delete this._refs[ref];\n    }\n\n    setRef(ref: string, child: T) {\n        this._refs[ref] = child;\n    }\n\n    setItems(newItems: T[]) {\n        const prevItems = this._items;\n        this._items = newItems;\n\n        const removedSet = new Set(prevItems);\n        const added = [];\n        for (let i = 0, n = newItems.length; i < n; i++) {\n            const alreadyExists = removedSet.delete(newItems[i]);\n            if (!alreadyExists) {\n                added.push(newItems[i]);\n            }\n        }\n        const removed = Utils.setToArray(removedSet);\n\n        if (removed.length || added.length) {\n            // Recalculate refs.\n            this._refs = {};\n            for (let i = 0, n = this._items.length; i < n; i++) {\n                const ref = this._items[i].ref;\n                if (ref) {\n                    this._refs[ref] = this._items[i];\n                }\n            }\n        }\n\n        this.onSync(removed, added, newItems);\n    }\n\n    sort(f: (a: T, b: T) => number) {\n        const items = this._items.slice();\n        items.sort(f);\n        this.onSync([], [], items);\n    }\n\n    protected onAdd(item: T, index: number) {}\n\n    protected onRemove(item: T, index: number) {}\n\n    protected onSync(removed: T[], added: T[], order: T[]) {}\n\n    protected onSet(item: T, index: number, prevItem: T) {}\n\n    protected onMove(item: T, fromIndex: number, toIndex: number) {}\n}\n","import { Handler } from \"./Handler\";\nimport { Patcher } from \"../Patcher\";\nimport { Constructor } from \"../../util/types\";\nimport { Utils } from \"../../tree/Utils\";\n\ntype CArgsGetter = (obj: any) => any[];\n\nexport class SingleReferenceHandler extends Handler {\n    private type: Constructor<any>;\n    private getCArgs: CArgsGetter;\n\n    constructor(sourceType: Constructor<any>, name: string, type: Constructor<any>, getCArgs?: CArgsGetter) {\n        super(sourceType, name);\n        this.type = type;\n        if (!getCArgs) {\n            getCArgs = (obj: any) => {\n                return [];\n            };\n        }\n        this.getCArgs = getCArgs;\n    }\n\n    handle(obj: any, settings: any): any {\n        const value = obj[this.name];\n        if (!settings) {\n            obj[this.name] = undefined;\n        } else if (Utils.isObjectLiteral(settings)) {\n            if (settings.type && (!value || value.type !== settings.type)) {\n                const cargs = this.getCArgs(obj);\n                obj[this.name] = Patcher.createObject(settings, this.type, ...cargs);\n            } else {\n                if (value) {\n                    Patcher.patchObject(value, settings);\n                } else {\n                    obj[this.name] = undefined;\n                }\n            }\n        } else {\n            obj[this.name] = settings;\n        }\n    }\n}\n","import { NativeTexture } from \"../../renderer/NativeTexture\";\nimport { ElementCore } from \"./ElementCore\";\n\nexport class CoreQuadList {\n    private quadTextures: NativeTexture[] = [];\n    private quadElementCores: ElementCore[] = [];\n\n    get length() {\n        return this.quadTextures.length;\n    }\n\n    reset() {\n        this.quadTextures = [];\n        this.quadElementCores = [];\n    }\n\n    getElement(index: number) {\n        return this.quadElementCores[index].element;\n    }\n\n    getElementCore(index: number) {\n        return this.quadElementCores[index];\n    }\n\n    getTexture(index: number) {\n        return this.quadTextures[index];\n    }\n\n    getTextureWidth(index: number) {\n        const nativeTexture = this.quadTextures[index];\n        if (nativeTexture.w) {\n            // Render texture;\n            return nativeTexture.w;\n        } else {\n            return this.quadElementCores[index].displayedTextureSource!.w;\n        }\n    }\n\n    getTextureHeight(index: number) {\n        const nativeTexture = this.quadTextures[index];\n        if (nativeTexture.h) {\n            // Render texture;\n            return nativeTexture.h;\n        } else {\n            return this.quadElementCores[index].displayedTextureSource!.h;\n        }\n    }\n\n    add(texture: NativeTexture, elementCore: ElementCore) {\n        this.quadTextures.push(texture);\n        this.quadElementCores.push(elementCore);\n    }\n}\n","import { CoreContext } from \"./CoreContext\";\nimport { Shader } from \"../Shader\";\nimport { ElementCore } from \"./ElementCore\";\nimport { RenderTextureInfo } from \"./RenderTextureInfo\";\n\nexport class CoreQuadOperation {\n    public length: number = 0;\n\n    constructor(\n        public readonly context: CoreContext,\n        public readonly shader: Shader,\n        public readonly shaderOwner: ElementCore,\n        public readonly renderTextureInfo: RenderTextureInfo,\n        public readonly scissor: number[] | undefined,\n        public readonly index: number,\n    ) {}\n\n    get quadList() {\n        return this.context.renderState.quadList;\n    }\n\n    getTexture(index: number) {\n        return this.quadList.getTexture(this.index + index);\n    }\n\n    getElementCore(index: number) {\n        return this.quadList.getElementCore(this.index + index);\n    }\n\n    getElement(index: number) {\n        return this.quadList.getElement(this.index + index);\n    }\n\n    getElementWidth(index: number) {\n        return this.getElement(index).renderWidth;\n    }\n\n    getElementHeight(index: number) {\n        return this.getElement(index).renderHeight;\n    }\n\n    getTextureWidth(index: number) {\n        return this.quadList.getTextureWidth(this.index + index);\n    }\n\n    getTextureHeight(index: number) {\n        return this.quadList.getTextureHeight(this.index + index);\n    }\n\n    getRenderWidth() {\n        if (this.renderTextureInfo) {\n            return this.renderTextureInfo.w;\n        } else {\n            return this.context.stage.w;\n        }\n    }\n\n    getRenderHeight() {\n        if (this.renderTextureInfo) {\n            return this.renderTextureInfo.h;\n        } else {\n            return this.context.stage.h;\n        }\n    }\n}\n","import { CoreContext } from \"./CoreContext\";\nimport { CoreRenderState } from \"./CoreRenderState\";\nimport { RenderTexture } from \"../../renderer/RenderTexture\";\nimport { CoreQuadOperation } from \"./CoreQuadOperation\";\n\nexport class CoreRenderExecutor<CoreRenderStateType extends CoreRenderState = CoreRenderState> {\n    renderState: CoreRenderStateType;\n\n    protected _renderTexture: RenderTexture | undefined;\n\n    constructor(public context: CoreContext) {\n        this.renderState = context.renderState as CoreRenderStateType;\n    }\n\n    destroy() {}\n\n    protected _reset() {\n        this._bindRenderTexture(undefined);\n        this._setScissor(undefined);\n        this._clearRenderTexture();\n    }\n\n    execute() {\n        this._reset();\n\n        const quadOps = this.renderState.quadOperations;\n\n        let i = 0;\n        const n = quadOps.length;\n        while (i < n) {\n            this._processQuadOperation(quadOps[i]);\n            i++;\n        }\n    }\n\n    protected _processQuadOperation(quadOperation: CoreQuadOperation) {\n        if (quadOperation.renderTextureInfo && quadOperation.renderTextureInfo.ignore) {\n            // Ignore quad operations when we are 're-using' another texture as the render texture result.\n            return;\n        }\n\n        this._setupQuadOperation(quadOperation);\n        this._execQuadOperation(quadOperation);\n    }\n\n    protected _setupQuadOperation(quadOperation: CoreQuadOperation) {}\n\n    protected _execQuadOperation(op: CoreQuadOperation) {\n        // Set render texture.\n        const renderTexture = op.renderTextureInfo ? op.renderTextureInfo.renderTexture : undefined;\n\n        if (this._renderTexture !== renderTexture) {\n            this._bindRenderTexture(renderTexture);\n        }\n\n        if (op.renderTextureInfo && !op.renderTextureInfo.cleared) {\n            this._setScissor(undefined);\n            this._clearRenderTexture();\n            op.renderTextureInfo.cleared = true;\n            this._setScissor(op.scissor);\n        } else {\n            this._setScissor(op.scissor);\n        }\n\n        this._renderQuadOperation(op);\n    }\n\n    protected _renderQuadOperation(op: CoreQuadOperation) {}\n\n    protected _bindRenderTexture(renderTexture: RenderTexture | undefined) {\n        this._renderTexture = renderTexture;\n    }\n\n    protected _clearRenderTexture() {}\n\n    protected _setScissor(area: number[] | undefined) {}\n}\n","import { Stage } from \"../tree/Stage\";\nimport { CoreContext } from \"../tree/core/CoreContext\";\nimport { Shader } from \"../tree/Shader\";\nimport { Constructor } from \"../util/types\";\nimport { TextureSourceOptions } from \"../tree/Texture\";\nimport { TextureSource } from \"../tree/TextureSource\";\nimport { NativeTexture } from \"./NativeTexture\";\nimport { CoreRenderState } from \"../tree/core/CoreRenderState\";\nimport { CoreRenderExecutor } from \"../tree/core/CoreRenderExecutor\";\nimport { CoreQuadList } from \"../tree/core/CoreQuadList\";\nimport { RenderTextureInfo } from \"../tree/core/RenderTextureInfo\";\nimport { ElementCore } from \"../tree/core/ElementCore\";\nimport { CoreQuadOperation } from \"../tree/core/CoreQuadOperation\";\nimport { RenderTexture } from \"./RenderTexture\";\n\nexport abstract class Renderer {\n    _defaultShader?: Shader = undefined;\n\n    constructor(public stage: Stage) {}\n\n    gc(aggressive: boolean): void {}\n\n    abstract destroy(): void;\n\n    getDefaultShader(context = this.stage.context) {\n        if (!this._defaultShader) {\n            this._defaultShader = this._createDefaultShader(context);\n        }\n        return this._defaultShader;\n    }\n\n    protected abstract _createDefaultShader(context: CoreContext): Shader;\n\n    isValidShaderType(shaderType: Constructor<Shader>) {\n        return shaderType.prototype instanceof this._getShaderBaseType();\n    }\n\n    getSupportedShaderType(shaderType: Constructor<Shader>) {\n        if (!this.isValidShaderType(shaderType)) {\n            const convertedShaderType = this._getShaderAlternative(shaderType);\n            if (!convertedShaderType) {\n                return undefined;\n            }\n            return convertedShaderType;\n        } else {\n            return shaderType;\n        }\n    }\n\n    abstract _getShaderBaseType(): Constructor<Shader>;\n\n    protected _getShaderAlternative(shaderType: Constructor<Shader>): Constructor<Shader> | undefined {\n        return undefined;\n    }\n\n    abstract copyRenderTexture(\n        renderTexture: RenderTexture,\n        nativeTexture: NativeTexture,\n        options: CopyRenderTextureOptions,\n    ): void;\n\n    abstract freeTextureSource(textureSource: TextureSource): void;\n\n    abstract uploadTextureSource(textureSource: TextureSource, options: TextureSourceOptions): NativeTexture;\n\n    abstract createCoreRenderState(context: CoreContext): CoreRenderState;\n\n    abstract createCoreRenderExecutor(context: CoreContext): CoreRenderExecutor;\n\n    abstract createRenderTexture(w: number, h: number, pw: number, ph: number): RenderTexture;\n\n    abstract freeRenderTexture(renderTexture: RenderTexture): void;\n\n    abstract createCoreQuadList(): CoreQuadList;\n\n    abstract createCoreQuadOperation(\n        context: CoreContext,\n        shader: Shader,\n        shaderOwner: ElementCore,\n        renderTextureInfo: RenderTextureInfo,\n        scissor: number[] | undefined,\n        index: number,\n    ): CoreQuadOperation;\n\n    onResizeCanvasSize() {\n        // Not implemented.\n    }\n}\n\nexport type CopyRenderTextureOptions = {\n    sx?: number;\n    sy?: number;\n    x?: number;\n    y?: number;\n    w?: number;\n    h?: number;\n};\n","import { TextureSource } from \"./TextureSource\";\nimport { Stage } from \"./Stage\";\nimport { TextureSourceLoader, TextureSourceOptions } from \"./Texture\";\n\nexport class TextureManager {\n    // The currently used amount of texture memory.\n    private _usedMemory: number = 0;\n\n    // All texture sources that are uploaded to the GPU.\n    private _uploadedTextureSources: TextureSource[] = [];\n\n    // The texture source lookup id to texture source hashmap.\n    private textureSourceHashmap = new Map<string, TextureSource>();\n\n    constructor(private stage: Stage) {}\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    destroy() {\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\n            this._nativeFreeTextureSource(this._uploadedTextureSources[i]);\n        }\n\n        this.textureSourceHashmap.clear();\n        this._usedMemory = 0;\n    }\n\n    getReusableTextureSource(id: string): TextureSource | undefined {\n        return this.textureSourceHashmap.get(id);\n    }\n\n    getTextureSource(loader: TextureSourceLoader, lookupId: string | undefined) {\n        // Check if texture source is already known.\n        let textureSource = lookupId ? this.textureSourceHashmap.get(lookupId) : undefined;\n        if (!textureSource) {\n            // Create new texture source.\n            textureSource = new TextureSource(this, loader);\n\n            if (lookupId) {\n                textureSource.lookupId = lookupId;\n                this.textureSourceHashmap.set(lookupId, textureSource);\n            }\n        }\n\n        return textureSource;\n    }\n\n    uploadTextureSource(textureSource: TextureSource, options: TextureSourceOptions) {\n        if (textureSource.isLoaded()) return;\n\n        this._addMemoryUsage(textureSource.w * textureSource.h);\n\n        // Load texture.\n        const nativeTexture = this._nativeUploadTextureSource(textureSource, options);\n\n        textureSource._nativeTexture = nativeTexture;\n\n        // We attach w and h to native texture (we need it in CoreRenderState._isRenderTextureReusable).\n        nativeTexture.w = textureSource.w;\n        nativeTexture.h = textureSource.h;\n\n        nativeTexture.updateFrame = this.stage.frameCounter;\n\n        this._uploadedTextureSources.push(textureSource);\n\n        this.addToLookupMap(textureSource);\n    }\n\n    private _addMemoryUsage(delta: number) {\n        this._usedMemory += delta;\n        this.stage.addMemoryUsage(delta);\n    }\n\n    addToLookupMap(textureSource: TextureSource) {\n        const lookupId = textureSource.lookupId;\n        if (lookupId) {\n            if (!this.textureSourceHashmap.has(lookupId)) {\n                this.textureSourceHashmap.set(lookupId, textureSource);\n            }\n        }\n    }\n\n    gc() {\n        this.freeUnusedTextureSources();\n        this._cleanupLookupMap();\n    }\n\n    private freeUnusedTextureSources() {\n        const remainingTextureSources = [];\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\n            const ts = this._uploadedTextureSources[i];\n            if (ts.allowCleanup()) {\n                this._freeManagedTextureSource(ts);\n            } else {\n                remainingTextureSources.push(ts);\n            }\n        }\n\n        this._uploadedTextureSources = remainingTextureSources;\n\n        this._cleanupLookupMap();\n    }\n\n    private _freeManagedTextureSource(textureSource: TextureSource) {\n        if (textureSource.isLoaded()) {\n            this._nativeFreeTextureSource(textureSource);\n            this._addMemoryUsage(-textureSource.w * textureSource.h);\n        }\n\n        // Should be reloaded.\n        textureSource.setNotLoaded();\n    }\n\n    private _cleanupLookupMap() {\n        // We keep those that still have value (are being loaded or already loaded, or are likely to be reused).\n        this.textureSourceHashmap.forEach((textureSource, lookupId) => {\n            if (!(textureSource.isLoaded() || textureSource.isLoading()) && !textureSource.isUsed()) {\n                this.textureSourceHashmap.delete(lookupId);\n            }\n        });\n    }\n\n    freeTextureSource(textureSource: TextureSource) {\n        const index = this._uploadedTextureSources.indexOf(textureSource);\n        const managed = index !== -1;\n\n        if (textureSource.isLoaded()) {\n            if (managed) {\n                this._addMemoryUsage(-textureSource.w * textureSource.h);\n                this._uploadedTextureSources.splice(index, 1);\n            }\n            this._nativeFreeTextureSource(textureSource);\n        }\n\n        // Should be reloaded.\n        textureSource.setNotLoaded();\n    }\n\n    private _nativeUploadTextureSource(textureSource: TextureSource, options: TextureSourceOptions) {\n        return this.stage.renderer.uploadTextureSource(textureSource, options);\n    }\n\n    private _nativeFreeTextureSource(textureSource: TextureSource) {\n        this.stage.renderer.freeTextureSource(textureSource);\n        textureSource.clearNativeTexture();\n    }\n\n    getStage() {\n        return this.stage;\n    }\n}\n","import { AnyClass } from \"./types\";\n\nexport class Delegator {\n    public static delegate<T extends AnyClass, U extends AnyClass>(base: T, delegate: U, property: string) {\n        const descriptors = Object.getOwnPropertyDescriptors(delegate.prototype);\n        const names = Object.keys(descriptors);\n        for (let i = 0, n = names.length; i < n; i++) {\n            const name = names[i];\n            if (name !== \"constructor\") {\n                this.delegateProperty(name, descriptors[name], base.prototype, property);\n            }\n        }\n    }\n\n    private static delegateProperty(name: string, descriptor: PropertyDescriptor, obj: any, objProperty: string) {\n        const proxyDescriptor: PropertyDescriptor = { ...descriptor };\n        if (proxyDescriptor.get) {\n            proxyDescriptor.get = function () {\n                return (this as any)[objProperty][name];\n            };\n        }\n        if (proxyDescriptor.set) {\n            proxyDescriptor.set = function (v: any) {\n                (this as any)[objProperty][name] = v;\n            };\n        }\n        if (proxyDescriptor.value && proxyDescriptor.value instanceof Function) {\n            proxyDescriptor.value = function (...args: any[]) {\n                return (this as any)[objProperty][name](...args);\n            };\n        }\n        Object.defineProperty(obj, name, proxyDescriptor);\n    }\n}\n","import { Node, ensureFloat, ensureInt } from \"./Node\";\nimport { Element, TextTexture } from \"tree2d\";\nimport { TextTextureSettings } from \"./textures/TextTextureSettings\";\nimport { Delegator } from \"../utils/Delegator\";\nimport { VugelStage } from \"../../wrapper\";\n\nclass Paragraph extends Node {\n    private settings = new TextTextureSettings(() => this.update());\n\n    private _text: string = \"\";\n    private _lineHeight: number = 0;\n    private _fontColor: number = 0xffffffff;\n\n    set \"line-height\"(v: number) {\n        this._lineHeight = ensureFloat(v);\n        this.update();\n    }\n\n    set \"font-color\"(v: number) {\n        this._fontColor = ensureInt(v);\n        this.update();\n    }\n\n    constructor(stage: VugelStage) {\n        super(stage);\n        this.el.flex = true;\n        this.el.flexWrap = true;\n    }\n\n    set text(text: string) {\n        this._text = text;\n        this.update();\n    }\n\n    setElementText(text: string) {\n        this._text = text.trim();\n        this.update();\n    }\n\n    static newlinePattern = \"@+~^\";\n\n    private update() {\n        const s = this.settings.textSettings;\n        const fontSize = s.fontSize || 24;\n        const lineHeight = Math.round(this._lineHeight || fontSize * 1.3);\n        const letterSpacing = Math.round(fontSize * 0.2);\n        const margin = Math.round(lineHeight - fontSize);\n        const fontColor = this._fontColor || 0xffffffff;\n\n        const text = this._text.replace(/(\\r?\\n)/, ` ${Paragraph.newlinePattern} `);\n\n        const words = text.split(/\\s+/);\n        if (words.length > 1 || words[0] != \"\") {\n            const els = words.map((word: string) => {\n                const el = new Element(this.stage);\n                if (word === Paragraph.newlinePattern) {\n                    // Force line break.\n                    el.w = (w: number) => w;\n                    el.h = 0;\n                } else {\n                    const texture = new TextTexture(this.stage);\n                    texture.text = word;\n                    texture.setSettings(s);\n                    el.texture = texture;\n                    el.marginRight = letterSpacing;\n                    el.marginTop = Math.round(margin * 0.8);\n                    el.marginBottom = Math.round(margin * 0.2);\n                    el.color = fontColor;\n                }\n                return el;\n            });\n\n            this.el.childList.setItems(els);\n        }\n    }\n}\n\nDelegator.delegate(Paragraph, TextTextureSettings, \"settings\");\ninterface Paragraph extends TextTextureSettings {}\n\nexport { Paragraph };\n","export { compileVugel } from \"./compiler/compileVugel\";\n\nexport { Vugel } from \"./wrapper\";\nexport { VugelEventListener, VugelMouseEvent, VugelEvent } from \"./events\";\n\nexport { compile, parse } from \"./compiler/compile\";\n\nexport * from \"./runtime/index\";\n","import { RenderFunction, warn } from \"@vue/runtime-core\";\nimport { CompilerError, CompilerOptions } from \"@vue/compiler-core\";\nimport { compile } from \"./compile\";\nimport * as runtimeVugel from \"../runtime\";\n\nconst compileCache: Record<string, RenderFunction> = Object.create(null);\n\nexport function compileVugel(template: string | HTMLElement, options?: CompilerOptions): RenderFunction {\n    if (!(typeof template === \"string\")) {\n        if (template.nodeType) {\n            template = template.innerHTML;\n        } else {\n            warn(`invalid template option: `, template);\n            return () => {};\n        }\n    }\n\n    const key = template;\n    const cached = compileCache[key];\n    if (cached) {\n        return cached;\n    }\n\n    if (template[0] === \"#\") {\n        const el = document.querySelector(template);\n        if (!el) {\n            warn(`Template element not found or is empty: ${template}`);\n        }\n        template = el ? el.innerHTML : ``;\n    }\n\n    const { code } = compile(template, {\n        hoistStatic: true,\n        onError(err: CompilerError) {\n            const message = `Template compilation error: ${err.message}`;\n            const codeFrame = err.loc;\n            warn(codeFrame ? `${message}\\n${codeFrame}` : message);\n        },\n        ...options,\n    });\n\n    const render = new Function(\"Vue\", code)(runtimeVugel) as RenderFunction;\n    return (compileCache[key] = render);\n}\n","import { isString, hyphenate, isObject, isArray, extend, makeMap, NO, isSymbol, NOOP, PatchFlagNames, isGloballyWhitelisted, isOn, capitalize, camelize } from '@vue/shared';\nexport { generateCodeFrame } from '@vue/shared';\n\nfunction defaultOnError(error) {\r\n    throw error;\r\n}\r\nfunction createCompilerError(code, loc, messages, additionalMessage) {\r\n    const msg = (process.env.NODE_ENV !== 'production') || !true\r\n        ? (messages || errorMessages)[code] + (additionalMessage || ``)\r\n        : code;\r\n    const error = new SyntaxError(String(msg));\r\n    error.code = code;\r\n    error.loc = loc;\r\n    return error;\r\n}\r\nconst errorMessages = {\r\n    // parse errors\r\n    [0 /* ABRUPT_CLOSING_OF_EMPTY_COMMENT */]: 'Illegal comment.',\r\n    [1 /* CDATA_IN_HTML_CONTENT */]: 'CDATA section is allowed only in XML context.',\r\n    [2 /* DUPLICATE_ATTRIBUTE */]: 'Duplicate attribute.',\r\n    [3 /* END_TAG_WITH_ATTRIBUTES */]: 'End tag cannot have attributes.',\r\n    [4 /* END_TAG_WITH_TRAILING_SOLIDUS */]: \"Illegal '/' in tags.\",\r\n    [5 /* EOF_BEFORE_TAG_NAME */]: 'Unexpected EOF in tag.',\r\n    [6 /* EOF_IN_CDATA */]: 'Unexpected EOF in CDATA section.',\r\n    [7 /* EOF_IN_COMMENT */]: 'Unexpected EOF in comment.',\r\n    [8 /* EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */]: 'Unexpected EOF in script.',\r\n    [9 /* EOF_IN_TAG */]: 'Unexpected EOF in tag.',\r\n    [10 /* INCORRECTLY_CLOSED_COMMENT */]: 'Incorrectly closed comment.',\r\n    [11 /* INCORRECTLY_OPENED_COMMENT */]: 'Incorrectly opened comment.',\r\n    [12 /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */]: \"Illegal tag name. Use '&lt;' to print '<'.\",\r\n    [13 /* MISSING_ATTRIBUTE_VALUE */]: 'Attribute value was expected.',\r\n    [14 /* MISSING_END_TAG_NAME */]: 'End tag name was expected.',\r\n    [15 /* MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */]: 'Whitespace was expected.',\r\n    [16 /* NESTED_COMMENT */]: \"Unexpected '<!--' in comment.\",\r\n    [17 /* UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */]: 'Attribute name cannot contain U+0022 (\"), U+0027 (\\'), and U+003C (<).',\r\n    [18 /* UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */]: 'Unquoted attribute value cannot contain U+0022 (\"), U+0027 (\\'), U+003C (<), U+003D (=), and U+0060 (`).',\r\n    [19 /* UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */]: \"Attribute name cannot start with '='.\",\r\n    [21 /* UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */]: \"'<?' is allowed only in XML context.\",\r\n    [22 /* UNEXPECTED_SOLIDUS_IN_TAG */]: \"Illegal '/' in tags.\",\r\n    // Vue-specific parse errors\r\n    [23 /* X_INVALID_END_TAG */]: 'Invalid end tag.',\r\n    [24 /* X_MISSING_END_TAG */]: 'Element is missing end tag.',\r\n    [25 /* X_MISSING_INTERPOLATION_END */]: 'Interpolation end sign was not found.',\r\n    [26 /* X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */]: 'End bracket for dynamic directive argument was not found. ' +\r\n        'Note that dynamic directive argument cannot contain spaces.',\r\n    // transform errors\r\n    [27 /* X_V_IF_NO_EXPRESSION */]: `v-if/v-else-if is missing expression.`,\r\n    [28 /* X_V_ELSE_NO_ADJACENT_IF */]: `v-else/v-else-if has no adjacent v-if.`,\r\n    [29 /* X_V_FOR_NO_EXPRESSION */]: `v-for is missing expression.`,\r\n    [30 /* X_V_FOR_MALFORMED_EXPRESSION */]: `v-for has invalid expression.`,\r\n    [31 /* X_V_BIND_NO_EXPRESSION */]: `v-bind is missing expression.`,\r\n    [32 /* X_V_ON_NO_EXPRESSION */]: `v-on is missing expression.`,\r\n    [33 /* X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */]: `Unexpected custom directive on <slot> outlet.`,\r\n    [34 /* X_V_SLOT_MIXED_SLOT_USAGE */]: `Mixed v-slot usage on both the component and nested <template>.` +\r\n        `When there are multiple named slots, all slots should use <template> ` +\r\n        `syntax to avoid scope ambiguity.`,\r\n    [35 /* X_V_SLOT_DUPLICATE_SLOT_NAMES */]: `Duplicate slot names found. `,\r\n    [36 /* X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */]: `Extraneous children found when component already has explicitly named ` +\r\n        `default slot. These children will be ignored.`,\r\n    [37 /* X_V_SLOT_MISPLACED */]: `v-slot can only be used on components or <template> tags.`,\r\n    [38 /* X_V_MODEL_NO_EXPRESSION */]: `v-model is missing expression.`,\r\n    [39 /* X_V_MODEL_MALFORMED_EXPRESSION */]: `v-model value must be a valid JavaScript member expression.`,\r\n    [40 /* X_V_MODEL_ON_SCOPE_VARIABLE */]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\r\n    [41 /* X_INVALID_EXPRESSION */]: `Error parsing JavaScript expression: `,\r\n    [42 /* X_KEEP_ALIVE_INVALID_CHILDREN */]: `<KeepAlive> expects exactly one child component.`,\r\n    // generic errors\r\n    [43 /* X_PREFIX_ID_NOT_SUPPORTED */]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\r\n    [44 /* X_MODULE_MODE_NOT_SUPPORTED */]: `ES module mode is not supported in this build of compiler.`,\r\n    [45 /* X_CACHE_HANDLER_NOT_SUPPORTED */]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\r\n    [46 /* X_SCOPE_ID_NOT_SUPPORTED */]: `\"scopeId\" option is only supported in module mode.`\r\n};\n\nconst FRAGMENT = Symbol((process.env.NODE_ENV !== 'production') ? `Fragment` : ``);\r\nconst TELEPORT = Symbol((process.env.NODE_ENV !== 'production') ? `Teleport` : ``);\r\nconst SUSPENSE = Symbol((process.env.NODE_ENV !== 'production') ? `Suspense` : ``);\r\nconst KEEP_ALIVE = Symbol((process.env.NODE_ENV !== 'production') ? `KeepAlive` : ``);\r\nconst BASE_TRANSITION = Symbol((process.env.NODE_ENV !== 'production') ? `BaseTransition` : ``);\r\nconst OPEN_BLOCK = Symbol((process.env.NODE_ENV !== 'production') ? `openBlock` : ``);\r\nconst CREATE_BLOCK = Symbol((process.env.NODE_ENV !== 'production') ? `createBlock` : ``);\r\nconst CREATE_VNODE = Symbol((process.env.NODE_ENV !== 'production') ? `createVNode` : ``);\r\nconst CREATE_COMMENT = Symbol((process.env.NODE_ENV !== 'production') ? `createCommentVNode` : ``);\r\nconst CREATE_TEXT = Symbol((process.env.NODE_ENV !== 'production') ? `createTextVNode` : ``);\r\nconst CREATE_STATIC = Symbol((process.env.NODE_ENV !== 'production') ? `createStaticVNode` : ``);\r\nconst RESOLVE_COMPONENT = Symbol((process.env.NODE_ENV !== 'production') ? `resolveComponent` : ``);\r\nconst RESOLVE_DYNAMIC_COMPONENT = Symbol((process.env.NODE_ENV !== 'production') ? `resolveDynamicComponent` : ``);\r\nconst RESOLVE_DIRECTIVE = Symbol((process.env.NODE_ENV !== 'production') ? `resolveDirective` : ``);\r\nconst WITH_DIRECTIVES = Symbol((process.env.NODE_ENV !== 'production') ? `withDirectives` : ``);\r\nconst RENDER_LIST = Symbol((process.env.NODE_ENV !== 'production') ? `renderList` : ``);\r\nconst RENDER_SLOT = Symbol((process.env.NODE_ENV !== 'production') ? `renderSlot` : ``);\r\nconst CREATE_SLOTS = Symbol((process.env.NODE_ENV !== 'production') ? `createSlots` : ``);\r\nconst TO_DISPLAY_STRING = Symbol((process.env.NODE_ENV !== 'production') ? `toDisplayString` : ``);\r\nconst MERGE_PROPS = Symbol((process.env.NODE_ENV !== 'production') ? `mergeProps` : ``);\r\nconst TO_HANDLERS = Symbol((process.env.NODE_ENV !== 'production') ? `toHandlers` : ``);\r\nconst CAMELIZE = Symbol((process.env.NODE_ENV !== 'production') ? `camelize` : ``);\r\nconst SET_BLOCK_TRACKING = Symbol((process.env.NODE_ENV !== 'production') ? `setBlockTracking` : ``);\r\nconst PUSH_SCOPE_ID = Symbol((process.env.NODE_ENV !== 'production') ? `pushScopeId` : ``);\r\nconst POP_SCOPE_ID = Symbol((process.env.NODE_ENV !== 'production') ? `popScopeId` : ``);\r\nconst WITH_SCOPE_ID = Symbol((process.env.NODE_ENV !== 'production') ? `withScopeId` : ``);\r\nconst WITH_CTX = Symbol((process.env.NODE_ENV !== 'production') ? `withCtx` : ``);\r\n// Name mapping for runtime helpers that need to be imported from 'vue' in\r\n// generated code. Make sure these are correctly exported in the runtime!\r\n// Using `any` here because TS doesn't allow symbols as index type.\r\nconst helperNameMap = {\r\n    [FRAGMENT]: `Fragment`,\r\n    [TELEPORT]: `Teleport`,\r\n    [SUSPENSE]: `Suspense`,\r\n    [KEEP_ALIVE]: `KeepAlive`,\r\n    [BASE_TRANSITION]: `BaseTransition`,\r\n    [OPEN_BLOCK]: `openBlock`,\r\n    [CREATE_BLOCK]: `createBlock`,\r\n    [CREATE_VNODE]: `createVNode`,\r\n    [CREATE_COMMENT]: `createCommentVNode`,\r\n    [CREATE_TEXT]: `createTextVNode`,\r\n    [CREATE_STATIC]: `createStaticVNode`,\r\n    [RESOLVE_COMPONENT]: `resolveComponent`,\r\n    [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\r\n    [RESOLVE_DIRECTIVE]: `resolveDirective`,\r\n    [WITH_DIRECTIVES]: `withDirectives`,\r\n    [RENDER_LIST]: `renderList`,\r\n    [RENDER_SLOT]: `renderSlot`,\r\n    [CREATE_SLOTS]: `createSlots`,\r\n    [TO_DISPLAY_STRING]: `toDisplayString`,\r\n    [MERGE_PROPS]: `mergeProps`,\r\n    [TO_HANDLERS]: `toHandlers`,\r\n    [CAMELIZE]: `camelize`,\r\n    [SET_BLOCK_TRACKING]: `setBlockTracking`,\r\n    [PUSH_SCOPE_ID]: `pushScopeId`,\r\n    [POP_SCOPE_ID]: `popScopeId`,\r\n    [WITH_SCOPE_ID]: `withScopeId`,\r\n    [WITH_CTX]: `withCtx`\r\n};\r\nfunction registerRuntimeHelpers(helpers) {\r\n    Object.getOwnPropertySymbols(helpers).forEach(s => {\r\n        helperNameMap[s] = helpers[s];\r\n    });\r\n}\n\n// AST Utilities ---------------------------------------------------------------\r\n// Some expressions, e.g. sequence and conditional expressions, are never\r\n// associated with template nodes, so their source locations are just a stub.\r\n// Container types like CompoundExpression also don't need a real location.\r\nconst locStub = {\r\n    source: '',\r\n    start: { line: 1, column: 1, offset: 0 },\r\n    end: { line: 1, column: 1, offset: 0 }\r\n};\r\nfunction createRoot(children, loc = locStub) {\r\n    return {\r\n        type: 0 /* ROOT */,\r\n        children,\r\n        helpers: [],\r\n        components: [],\r\n        directives: [],\r\n        hoists: [],\r\n        imports: [],\r\n        cached: 0,\r\n        temps: 0,\r\n        codegenNode: undefined,\r\n        loc\r\n    };\r\n}\r\nfunction createVNodeCall(context, tag, props, children, patchFlag, dynamicProps, directives, isBlock = false, isForBlock = false, loc = locStub) {\r\n    if (context) {\r\n        if (isBlock) {\r\n            context.helper(OPEN_BLOCK);\r\n            context.helper(CREATE_BLOCK);\r\n        }\r\n        else {\r\n            context.helper(CREATE_VNODE);\r\n        }\r\n        if (directives) {\r\n            context.helper(WITH_DIRECTIVES);\r\n        }\r\n    }\r\n    return {\r\n        type: 13 /* VNODE_CALL */,\r\n        tag,\r\n        props,\r\n        children,\r\n        patchFlag,\r\n        dynamicProps,\r\n        directives,\r\n        isBlock,\r\n        isForBlock,\r\n        loc\r\n    };\r\n}\r\nfunction createArrayExpression(elements, loc = locStub) {\r\n    return {\r\n        type: 17 /* JS_ARRAY_EXPRESSION */,\r\n        loc,\r\n        elements\r\n    };\r\n}\r\nfunction createObjectExpression(properties, loc = locStub) {\r\n    return {\r\n        type: 15 /* JS_OBJECT_EXPRESSION */,\r\n        loc,\r\n        properties\r\n    };\r\n}\r\nfunction createObjectProperty(key, value) {\r\n    return {\r\n        type: 16 /* JS_PROPERTY */,\r\n        loc: locStub,\r\n        key: isString(key) ? createSimpleExpression(key, true) : key,\r\n        value\r\n    };\r\n}\r\nfunction createSimpleExpression(content, isStatic, loc = locStub, isConstant = false) {\r\n    return {\r\n        type: 4 /* SIMPLE_EXPRESSION */,\r\n        loc,\r\n        isConstant,\r\n        content,\r\n        isStatic\r\n    };\r\n}\r\nfunction createInterpolation(content, loc) {\r\n    return {\r\n        type: 5 /* INTERPOLATION */,\r\n        loc,\r\n        content: isString(content)\r\n            ? createSimpleExpression(content, false, loc)\r\n            : content\r\n    };\r\n}\r\nfunction createCompoundExpression(children, loc = locStub) {\r\n    return {\r\n        type: 8 /* COMPOUND_EXPRESSION */,\r\n        loc,\r\n        children\r\n    };\r\n}\r\nfunction createCallExpression(callee, args = [], loc = locStub) {\r\n    return {\r\n        type: 14 /* JS_CALL_EXPRESSION */,\r\n        loc,\r\n        callee,\r\n        arguments: args\r\n    };\r\n}\r\nfunction createFunctionExpression(params, returns = undefined, newline = false, isSlot = false, loc = locStub) {\r\n    return {\r\n        type: 18 /* JS_FUNCTION_EXPRESSION */,\r\n        params,\r\n        returns,\r\n        newline,\r\n        isSlot,\r\n        loc\r\n    };\r\n}\r\nfunction createConditionalExpression(test, consequent, alternate, newline = true) {\r\n    return {\r\n        type: 19 /* JS_CONDITIONAL_EXPRESSION */,\r\n        test,\r\n        consequent,\r\n        alternate,\r\n        newline,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createCacheExpression(index, value, isVNode = false) {\r\n    return {\r\n        type: 20 /* JS_CACHE_EXPRESSION */,\r\n        index,\r\n        value,\r\n        isVNode,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createBlockStatement(body) {\r\n    return {\r\n        type: 21 /* JS_BLOCK_STATEMENT */,\r\n        body,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createTemplateLiteral(elements) {\r\n    return {\r\n        type: 22 /* JS_TEMPLATE_LITERAL */,\r\n        elements,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createIfStatement(test, consequent, alternate) {\r\n    return {\r\n        type: 23 /* JS_IF_STATEMENT */,\r\n        test,\r\n        consequent,\r\n        alternate,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createAssignmentExpression(left, right) {\r\n    return {\r\n        type: 24 /* JS_ASSIGNMENT_EXPRESSION */,\r\n        left,\r\n        right,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createSequenceExpression(expressions) {\r\n    return {\r\n        type: 25 /* JS_SEQUENCE_EXPRESSION */,\r\n        expressions,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createReturnStatement(returns) {\r\n    return {\r\n        type: 26 /* JS_RETURN_STATEMENT */,\r\n        returns,\r\n        loc: locStub\r\n    };\r\n}\n\nconst isBuiltInType = (tag, expected) => tag === expected || tag === hyphenate(expected);\r\nfunction isCoreComponent(tag) {\r\n    if (isBuiltInType(tag, 'Teleport')) {\r\n        return TELEPORT;\r\n    }\r\n    else if (isBuiltInType(tag, 'Suspense')) {\r\n        return SUSPENSE;\r\n    }\r\n    else if (isBuiltInType(tag, 'KeepAlive')) {\r\n        return KEEP_ALIVE;\r\n    }\r\n    else if (isBuiltInType(tag, 'BaseTransition')) {\r\n        return BASE_TRANSITION;\r\n    }\r\n}\r\n// cache node requires\r\n// lazy require dependencies so that they don't end up in rollup's dep graph\r\n// and thus can be tree-shaken in browser builds.\r\nlet _parse;\r\nlet _walk;\r\nfunction loadDep(name) {\r\n    {\r\n        // This is only used when we are building a dev-only build of the compiler\r\n        // which runs in the browser but also uses Node deps.\r\n        return window._deps[name];\r\n    }\r\n}\r\nconst parseJS = (code, options) => {\r\n    assert(!true, `Expression AST analysis can only be performed in non-browser builds.`);\r\n    if (!_parse) {\r\n        _parse = loadDep('@babel/parser').parse;\r\n    }\r\n    return _parse(code, options);\r\n};\r\nconst walkJS = (ast, walker) => {\r\n    assert(!true, `Expression AST analysis can only be performed in non-browser builds.`);\r\n    const walk = _walk || (_walk = loadDep('estree-walker').walk);\r\n    return walk(ast, walker);\r\n};\r\nconst nonIdentifierRE = /^\\d|[^\\$\\w]/;\r\nconst isSimpleIdentifier = (name) => !nonIdentifierRE.test(name);\r\nconst memberExpRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\[[^\\]]+\\])*$/;\r\nconst isMemberExpression = (path) => memberExpRE.test(path);\r\nfunction getInnerRange(loc, offset, length) {\r\n    const source = loc.source.substr(offset, length);\r\n    const newLoc = {\r\n        source,\r\n        start: advancePositionWithClone(loc.start, loc.source, offset),\r\n        end: loc.end\r\n    };\r\n    if (length != null) {\r\n        newLoc.end = advancePositionWithClone(loc.start, loc.source, offset + length);\r\n    }\r\n    return newLoc;\r\n}\r\nfunction advancePositionWithClone(pos, source, numberOfCharacters = source.length) {\r\n    return advancePositionWithMutation({ ...pos }, source, numberOfCharacters);\r\n}\r\n// advance by mutation without cloning (for performance reasons), since this\r\n// gets called a lot in the parser\r\nfunction advancePositionWithMutation(pos, source, numberOfCharacters = source.length) {\r\n    let linesCount = 0;\r\n    let lastNewLinePos = -1;\r\n    for (let i = 0; i < numberOfCharacters; i++) {\r\n        if (source.charCodeAt(i) === 10 /* newline char code */) {\r\n            linesCount++;\r\n            lastNewLinePos = i;\r\n        }\r\n    }\r\n    pos.offset += numberOfCharacters;\r\n    pos.line += linesCount;\r\n    pos.column =\r\n        lastNewLinePos === -1\r\n            ? pos.column + numberOfCharacters\r\n            : numberOfCharacters - lastNewLinePos;\r\n    return pos;\r\n}\r\nfunction assert(condition, msg) {\r\n    /* istanbul ignore if */\r\n    if (!condition) {\r\n        throw new Error(msg || `unexpected compiler condition`);\r\n    }\r\n}\r\nfunction findDir(node, name, allowEmpty = false) {\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 7 /* DIRECTIVE */ &&\r\n            (allowEmpty || p.exp) &&\r\n            (isString(name) ? p.name === name : name.test(p.name))) {\r\n            return p;\r\n        }\r\n    }\r\n}\r\nfunction findProp(node, name, dynamicOnly = false, allowEmpty = false) {\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 6 /* ATTRIBUTE */) {\r\n            if (dynamicOnly)\r\n                continue;\r\n            if (p.name === name && (p.value || allowEmpty)) {\r\n                return p;\r\n            }\r\n        }\r\n        else if (p.name === 'bind' && p.exp && isBindKey(p.arg, name)) {\r\n            return p;\r\n        }\r\n    }\r\n}\r\nfunction isBindKey(arg, name) {\r\n    return !!(arg &&\r\n        arg.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n        arg.isStatic &&\r\n        arg.content === name);\r\n}\r\nfunction hasDynamicKeyVBind(node) {\r\n    return node.props.some(p => p.type === 7 /* DIRECTIVE */ &&\r\n        p.name === 'bind' &&\r\n        (!p.arg || // v-bind=\"obj\"\r\n            p.arg.type !== 4 /* SIMPLE_EXPRESSION */ || // v-bind:[_ctx.foo]\r\n            !p.arg.isStatic) // v-bind:[foo]\r\n    );\r\n}\r\nfunction isText(node) {\r\n    return node.type === 5 /* INTERPOLATION */ || node.type === 2 /* TEXT */;\r\n}\r\nfunction isVSlot(p) {\r\n    return p.type === 7 /* DIRECTIVE */ && p.name === 'slot';\r\n}\r\nfunction isTemplateNode(node) {\r\n    return (node.type === 1 /* ELEMENT */ && node.tagType === 3 /* TEMPLATE */);\r\n}\r\nfunction isSlotOutlet(node) {\r\n    return node.type === 1 /* ELEMENT */ && node.tagType === 2 /* SLOT */;\r\n}\r\nfunction injectProp(node, prop, context) {\r\n    let propsWithInjection;\r\n    const props = node.type === 13 /* VNODE_CALL */ ? node.props : node.arguments[2];\r\n    if (props == null || isString(props)) {\r\n        propsWithInjection = createObjectExpression([prop]);\r\n    }\r\n    else if (props.type === 14 /* JS_CALL_EXPRESSION */) {\r\n        // merged props... add ours\r\n        // only inject key to object literal if it's the first argument so that\r\n        // if doesn't override user provided keys\r\n        const first = props.arguments[0];\r\n        if (!isString(first) && first.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n            first.properties.unshift(prop);\r\n        }\r\n        else {\r\n            props.arguments.unshift(createObjectExpression([prop]));\r\n        }\r\n        propsWithInjection = props;\r\n    }\r\n    else if (props.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n        let alreadyExists = false;\r\n        // check existing key to avoid overriding user provided keys\r\n        if (prop.key.type === 4 /* SIMPLE_EXPRESSION */) {\r\n            const propKeyName = prop.key.content;\r\n            alreadyExists = props.properties.some(p => p.key.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n                p.key.content === propKeyName);\r\n        }\r\n        if (!alreadyExists) {\r\n            props.properties.unshift(prop);\r\n        }\r\n        propsWithInjection = props;\r\n    }\r\n    else {\r\n        // single v-bind with expression, return a merged replacement\r\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n            createObjectExpression([prop]),\r\n            props\r\n        ]);\r\n    }\r\n    if (node.type === 13 /* VNODE_CALL */) {\r\n        node.props = propsWithInjection;\r\n    }\r\n    else {\r\n        node.arguments[2] = propsWithInjection;\r\n    }\r\n}\r\nfunction toValidAssetId(name, type) {\r\n    return `_${type}_${name.replace(/[^\\w]/g, '_')}`;\r\n}\r\n// Check if a node contains expressions that reference current context scope ids\r\nfunction hasScopeRef(node, ids) {\r\n    if (!node || Object.keys(ids).length === 0) {\r\n        return false;\r\n    }\r\n    switch (node.type) {\r\n        case 1 /* ELEMENT */:\r\n            for (let i = 0; i < node.props.length; i++) {\r\n                const p = node.props[i];\r\n                if (p.type === 7 /* DIRECTIVE */ &&\r\n                    (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))) {\r\n                    return true;\r\n                }\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 11 /* FOR */:\r\n            if (hasScopeRef(node.source, ids)) {\r\n                return true;\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 9 /* IF */:\r\n            return node.branches.some(b => hasScopeRef(b, ids));\r\n        case 10 /* IF_BRANCH */:\r\n            if (hasScopeRef(node.condition, ids)) {\r\n                return true;\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 4 /* SIMPLE_EXPRESSION */:\r\n            return (!node.isStatic &&\r\n                isSimpleIdentifier(node.content) &&\r\n                !!ids[node.content]);\r\n        case 8 /* COMPOUND_EXPRESSION */:\r\n            return node.children.some(c => isObject(c) && hasScopeRef(c, ids));\r\n        case 5 /* INTERPOLATION */:\r\n        case 12 /* TEXT_CALL */:\r\n            return hasScopeRef(node.content, ids);\r\n        case 2 /* TEXT */:\r\n        case 3 /* COMMENT */:\r\n            return false;\r\n        default:\r\n            if ((process.env.NODE_ENV !== 'production')) ;\r\n            return false;\r\n    }\r\n}\n\n// The default decoder only provides escapes for characters reserved as part of\r\n// the tempalte syntax, and is only used if the custom renderer did not provide\r\n// a platform-specific decoder.\r\nconst decodeRE = /&(gt|lt|amp|apos|quot);/g;\r\nconst decodeMap = {\r\n    gt: '>',\r\n    lt: '<',\r\n    amp: '&',\r\n    apos: \"'\",\r\n    quot: '\"'\r\n};\r\nconst defaultParserOptions = {\r\n    delimiters: [`{{`, `}}`],\r\n    getNamespace: () => 0 /* HTML */,\r\n    getTextMode: () => 0 /* DATA */,\r\n    isVoidTag: NO,\r\n    isPreTag: NO,\r\n    isCustomElement: NO,\r\n    decodeEntities: (rawText) => rawText.replace(decodeRE, (_, p1) => decodeMap[p1]),\r\n    onError: defaultOnError\r\n};\r\nfunction baseParse(content, options = {}) {\r\n    const context = createParserContext(content, options);\r\n    const start = getCursor(context);\r\n    return createRoot(parseChildren(context, 0 /* DATA */, []), getSelection(context, start));\r\n}\r\nfunction createParserContext(content, options) {\r\n    return {\r\n        options: {\r\n            ...defaultParserOptions,\r\n            ...options\r\n        },\r\n        column: 1,\r\n        line: 1,\r\n        offset: 0,\r\n        originalSource: content,\r\n        source: content,\r\n        inPre: false,\r\n        inVPre: false\r\n    };\r\n}\r\nfunction parseChildren(context, mode, ancestors) {\r\n    const parent = last(ancestors);\r\n    const ns = parent ? parent.ns : 0 /* HTML */;\r\n    const nodes = [];\r\n    while (!isEnd(context, mode, ancestors)) {\r\n        const s = context.source;\r\n        let node = undefined;\r\n        if (mode === 0 /* DATA */ || mode === 1 /* RCDATA */) {\r\n            if (!context.inVPre && startsWith(s, context.options.delimiters[0])) {\r\n                // '{{'\r\n                node = parseInterpolation(context, mode);\r\n            }\r\n            else if (mode === 0 /* DATA */ && s[0] === '<') {\r\n                // https://html.spec.whatwg.org/multipage/parsing.html#tag-open-state\r\n                if (s.length === 1) {\r\n                    emitError(context, 5 /* EOF_BEFORE_TAG_NAME */, 1);\r\n                }\r\n                else if (s[1] === '!') {\r\n                    // https://html.spec.whatwg.org/multipage/parsing.html#markup-declaration-open-state\r\n                    if (startsWith(s, '<!--')) {\r\n                        node = parseComment(context);\r\n                    }\r\n                    else if (startsWith(s, '<!DOCTYPE')) {\r\n                        // Ignore DOCTYPE by a limitation.\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                    else if (startsWith(s, '<![CDATA[')) {\r\n                        if (ns !== 0 /* HTML */) {\r\n                            node = parseCDATA(context, ancestors);\r\n                        }\r\n                        else {\r\n                            emitError(context, 1 /* CDATA_IN_HTML_CONTENT */);\r\n                            node = parseBogusComment(context);\r\n                        }\r\n                    }\r\n                    else {\r\n                        emitError(context, 11 /* INCORRECTLY_OPENED_COMMENT */);\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                }\r\n                else if (s[1] === '/') {\r\n                    // https://html.spec.whatwg.org/multipage/parsing.html#end-tag-open-state\r\n                    if (s.length === 2) {\r\n                        emitError(context, 5 /* EOF_BEFORE_TAG_NAME */, 2);\r\n                    }\r\n                    else if (s[2] === '>') {\r\n                        emitError(context, 14 /* MISSING_END_TAG_NAME */, 2);\r\n                        advanceBy(context, 3);\r\n                        continue;\r\n                    }\r\n                    else if (/[a-z]/i.test(s[2])) {\r\n                        emitError(context, 23 /* X_INVALID_END_TAG */);\r\n                        parseTag(context, 1 /* End */, parent);\r\n                        continue;\r\n                    }\r\n                    else {\r\n                        emitError(context, 12 /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */, 2);\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                }\r\n                else if (/[a-z]/i.test(s[1])) {\r\n                    node = parseElement(context, ancestors);\r\n                }\r\n                else if (s[1] === '?') {\r\n                    emitError(context, 21 /* UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */, 1);\r\n                    node = parseBogusComment(context);\r\n                }\r\n                else {\r\n                    emitError(context, 12 /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */, 1);\r\n                }\r\n            }\r\n        }\r\n        if (!node) {\r\n            node = parseText(context, mode);\r\n        }\r\n        if (isArray(node)) {\r\n            for (let i = 0; i < node.length; i++) {\r\n                pushNode(nodes, node[i]);\r\n            }\r\n        }\r\n        else {\r\n            pushNode(nodes, node);\r\n        }\r\n    }\r\n    // Whitespace management for more efficient output\r\n    // (same as v2 whitespace: 'condense')\r\n    let removedWhitespace = false;\r\n    if (mode !== 2 /* RAWTEXT */) {\r\n        if (!context.inPre) {\r\n            for (let i = 0; i < nodes.length; i++) {\r\n                const node = nodes[i];\r\n                if (node.type === 2 /* TEXT */) {\r\n                    if (!/[^\\t\\r\\n\\f ]/.test(node.content)) {\r\n                        const prev = nodes[i - 1];\r\n                        const next = nodes[i + 1];\r\n                        // If:\r\n                        // - the whitespace is the first or last node, or:\r\n                        // - the whitespace is adjacent to a comment, or:\r\n                        // - the whitespace is between two elements AND contains newline\r\n                        // Then the whitespace is ignored.\r\n                        if (!prev ||\r\n                            !next ||\r\n                            prev.type === 3 /* COMMENT */ ||\r\n                            next.type === 3 /* COMMENT */ ||\r\n                            (prev.type === 1 /* ELEMENT */ &&\r\n                                next.type === 1 /* ELEMENT */ &&\r\n                                /[\\r\\n]/.test(node.content))) {\r\n                            removedWhitespace = true;\r\n                            nodes[i] = null;\r\n                        }\r\n                        else {\r\n                            // Otherwise, condensed consecutive whitespace inside the text down to\r\n                            // a single space\r\n                            node.content = ' ';\r\n                        }\r\n                    }\r\n                    else {\r\n                        node.content = node.content.replace(/[\\t\\r\\n\\f ]+/g, ' ');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (parent && context.options.isPreTag(parent.tag)) {\r\n            // remove leading newline per html spec\r\n            // https://html.spec.whatwg.org/multipage/grouping-content.html#the-pre-element\r\n            const first = nodes[0];\r\n            if (first && first.type === 2 /* TEXT */) {\r\n                first.content = first.content.replace(/^\\r?\\n/, '');\r\n            }\r\n        }\r\n    }\r\n    return removedWhitespace ? nodes.filter(Boolean) : nodes;\r\n}\r\nfunction pushNode(nodes, node) {\r\n    // ignore comments in production\r\n    /* istanbul ignore next */\r\n    if (!(process.env.NODE_ENV !== 'production') && node.type === 3 /* COMMENT */) {\r\n        return;\r\n    }\r\n    if (node.type === 2 /* TEXT */) {\r\n        const prev = last(nodes);\r\n        // Merge if both this and the previous node are text and those are\r\n        // consecutive. This happens for cases like \"a < b\".\r\n        if (prev &&\r\n            prev.type === 2 /* TEXT */ &&\r\n            prev.loc.end.offset === node.loc.start.offset) {\r\n            prev.content += node.content;\r\n            prev.loc.end = node.loc.end;\r\n            prev.loc.source += node.loc.source;\r\n            return;\r\n        }\r\n    }\r\n    nodes.push(node);\r\n}\r\nfunction parseCDATA(context, ancestors) {\r\n    advanceBy(context, 9);\r\n    const nodes = parseChildren(context, 3 /* CDATA */, ancestors);\r\n    if (context.source.length === 0) {\r\n        emitError(context, 6 /* EOF_IN_CDATA */);\r\n    }\r\n    else {\r\n        advanceBy(context, 3);\r\n    }\r\n    return nodes;\r\n}\r\nfunction parseComment(context) {\r\n    const start = getCursor(context);\r\n    let content;\r\n    // Regular comment.\r\n    const match = /--(\\!)?>/.exec(context.source);\r\n    if (!match) {\r\n        content = context.source.slice(4);\r\n        advanceBy(context, context.source.length);\r\n        emitError(context, 7 /* EOF_IN_COMMENT */);\r\n    }\r\n    else {\r\n        if (match.index <= 3) {\r\n            emitError(context, 0 /* ABRUPT_CLOSING_OF_EMPTY_COMMENT */);\r\n        }\r\n        if (match[1]) {\r\n            emitError(context, 10 /* INCORRECTLY_CLOSED_COMMENT */);\r\n        }\r\n        content = context.source.slice(4, match.index);\r\n        // Advancing with reporting nested comments.\r\n        const s = context.source.slice(0, match.index);\r\n        let prevIndex = 1, nestedIndex = 0;\r\n        while ((nestedIndex = s.indexOf('<!--', prevIndex)) !== -1) {\r\n            advanceBy(context, nestedIndex - prevIndex + 1);\r\n            if (nestedIndex + 4 < s.length) {\r\n                emitError(context, 16 /* NESTED_COMMENT */);\r\n            }\r\n            prevIndex = nestedIndex + 1;\r\n        }\r\n        advanceBy(context, match.index + match[0].length - prevIndex + 1);\r\n    }\r\n    return {\r\n        type: 3 /* COMMENT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseBogusComment(context) {\r\n    const start = getCursor(context);\r\n    const contentStart = context.source[1] === '?' ? 1 : 2;\r\n    let content;\r\n    const closeIndex = context.source.indexOf('>');\r\n    if (closeIndex === -1) {\r\n        content = context.source.slice(contentStart);\r\n        advanceBy(context, context.source.length);\r\n    }\r\n    else {\r\n        content = context.source.slice(contentStart, closeIndex);\r\n        advanceBy(context, closeIndex + 1);\r\n    }\r\n    return {\r\n        type: 3 /* COMMENT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseElement(context, ancestors) {\r\n    // Start tag.\r\n    const wasInPre = context.inPre;\r\n    const wasInVPre = context.inVPre;\r\n    const parent = last(ancestors);\r\n    const element = parseTag(context, 0 /* Start */, parent);\r\n    const isPreBoundary = context.inPre && !wasInPre;\r\n    const isVPreBoundary = context.inVPre && !wasInVPre;\r\n    if (element.isSelfClosing || context.options.isVoidTag(element.tag)) {\r\n        return element;\r\n    }\r\n    // Children.\r\n    ancestors.push(element);\r\n    const mode = context.options.getTextMode(element.tag, element.ns, parent);\r\n    const children = parseChildren(context, mode, ancestors);\r\n    ancestors.pop();\r\n    element.children = children;\r\n    // End tag.\r\n    if (startsWithEndTagOpen(context.source, element.tag)) {\r\n        parseTag(context, 1 /* End */, parent);\r\n    }\r\n    else {\r\n        emitError(context, 24 /* X_MISSING_END_TAG */, 0, element.loc.start);\r\n        if (context.source.length === 0 && element.tag.toLowerCase() === 'script') {\r\n            const first = children[0];\r\n            if (first && startsWith(first.loc.source, '<!--')) {\r\n                emitError(context, 8 /* EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */);\r\n            }\r\n        }\r\n    }\r\n    element.loc = getSelection(context, element.loc.start);\r\n    if (isPreBoundary) {\r\n        context.inPre = false;\r\n    }\r\n    if (isVPreBoundary) {\r\n        context.inVPre = false;\r\n    }\r\n    return element;\r\n}\r\nconst isSpecialTemplateDirective = /*#__PURE__*/ makeMap(`if,else,else-if,for,slot`);\r\n/**\r\n * Parse a tag (E.g. `<div id=a>`) with that type (start tag or end tag).\r\n */\r\nfunction parseTag(context, type, parent) {\r\n    // Tag open.\r\n    const start = getCursor(context);\r\n    const match = /^<\\/?([a-z][^\\t\\r\\n\\f />]*)/i.exec(context.source);\r\n    const tag = match[1];\r\n    const ns = context.options.getNamespace(tag, parent);\r\n    advanceBy(context, match[0].length);\r\n    advanceSpaces(context);\r\n    // save current state in case we need to re-parse attributes with v-pre\r\n    const cursor = getCursor(context);\r\n    const currentSource = context.source;\r\n    // Attributes.\r\n    let props = parseAttributes(context, type);\r\n    // check <pre> tag\r\n    if (context.options.isPreTag(tag)) {\r\n        context.inPre = true;\r\n    }\r\n    // check v-pre\r\n    if (!context.inVPre &&\r\n        props.some(p => p.type === 7 /* DIRECTIVE */ && p.name === 'pre')) {\r\n        context.inVPre = true;\r\n        // reset context\r\n        extend(context, cursor);\r\n        context.source = currentSource;\r\n        // re-parse attrs and filter out v-pre itself\r\n        props = parseAttributes(context, type).filter(p => p.name !== 'v-pre');\r\n    }\r\n    // Tag close.\r\n    let isSelfClosing = false;\r\n    if (context.source.length === 0) {\r\n        emitError(context, 9 /* EOF_IN_TAG */);\r\n    }\r\n    else {\r\n        isSelfClosing = startsWith(context.source, '/>');\r\n        if (type === 1 /* End */ && isSelfClosing) {\r\n            emitError(context, 4 /* END_TAG_WITH_TRAILING_SOLIDUS */);\r\n        }\r\n        advanceBy(context, isSelfClosing ? 2 : 1);\r\n    }\r\n    let tagType = 0 /* ELEMENT */;\r\n    const options = context.options;\r\n    if (!context.inVPre && !options.isCustomElement(tag)) {\r\n        const hasVIs = props.some(p => p.type === 7 /* DIRECTIVE */ && p.name === 'is');\r\n        if (options.isNativeTag && !hasVIs) {\r\n            if (!options.isNativeTag(tag))\r\n                tagType = 1 /* COMPONENT */;\r\n        }\r\n        else if (hasVIs ||\r\n            isCoreComponent(tag) ||\r\n            (options.isBuiltInComponent && options.isBuiltInComponent(tag)) ||\r\n            /^[A-Z]/.test(tag) ||\r\n            tag === 'component') {\r\n            tagType = 1 /* COMPONENT */;\r\n        }\r\n        if (tag === 'slot') {\r\n            tagType = 2 /* SLOT */;\r\n        }\r\n        else if (tag === 'template' &&\r\n            props.some(p => {\r\n                return (p.type === 7 /* DIRECTIVE */ && isSpecialTemplateDirective(p.name));\r\n            })) {\r\n            tagType = 3 /* TEMPLATE */;\r\n        }\r\n    }\r\n    return {\r\n        type: 1 /* ELEMENT */,\r\n        ns,\r\n        tag,\r\n        tagType,\r\n        props,\r\n        isSelfClosing,\r\n        children: [],\r\n        loc: getSelection(context, start),\r\n        codegenNode: undefined // to be created during transform phase\r\n    };\r\n}\r\nfunction parseAttributes(context, type) {\r\n    const props = [];\r\n    const attributeNames = new Set();\r\n    while (context.source.length > 0 &&\r\n        !startsWith(context.source, '>') &&\r\n        !startsWith(context.source, '/>')) {\r\n        if (startsWith(context.source, '/')) {\r\n            emitError(context, 22 /* UNEXPECTED_SOLIDUS_IN_TAG */);\r\n            advanceBy(context, 1);\r\n            advanceSpaces(context);\r\n            continue;\r\n        }\r\n        if (type === 1 /* End */) {\r\n            emitError(context, 3 /* END_TAG_WITH_ATTRIBUTES */);\r\n        }\r\n        const attr = parseAttribute(context, attributeNames);\r\n        if (type === 0 /* Start */) {\r\n            props.push(attr);\r\n        }\r\n        if (/^[^\\t\\r\\n\\f />]/.test(context.source)) {\r\n            emitError(context, 15 /* MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */);\r\n        }\r\n        advanceSpaces(context);\r\n    }\r\n    return props;\r\n}\r\nfunction parseAttribute(context, nameSet) {\r\n    // Name.\r\n    const start = getCursor(context);\r\n    const match = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source);\r\n    const name = match[0];\r\n    if (nameSet.has(name)) {\r\n        emitError(context, 2 /* DUPLICATE_ATTRIBUTE */);\r\n    }\r\n    nameSet.add(name);\r\n    if (name[0] === '=') {\r\n        emitError(context, 19 /* UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */);\r\n    }\r\n    {\r\n        const pattern = /[\"'<]/g;\r\n        let m;\r\n        while ((m = pattern.exec(name))) {\r\n            emitError(context, 17 /* UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */, m.index);\r\n        }\r\n    }\r\n    advanceBy(context, name.length);\r\n    // Value\r\n    let value = undefined;\r\n    if (/^[\\t\\r\\n\\f ]*=/.test(context.source)) {\r\n        advanceSpaces(context);\r\n        advanceBy(context, 1);\r\n        advanceSpaces(context);\r\n        value = parseAttributeValue(context);\r\n        if (!value) {\r\n            emitError(context, 13 /* MISSING_ATTRIBUTE_VALUE */);\r\n        }\r\n    }\r\n    const loc = getSelection(context, start);\r\n    if (!context.inVPre && /^(v-|:|@|#)/.test(name)) {\r\n        const match = /(?:^v-([a-z0-9-]+))?(?:(?::|^@|^#)([^\\.]+))?(.+)?$/i.exec(name);\r\n        let arg;\r\n        if (match[2]) {\r\n            const startOffset = name.indexOf(match[2]);\r\n            const loc = getSelection(context, getNewPosition(context, start, startOffset), getNewPosition(context, start, startOffset + match[2].length));\r\n            let content = match[2];\r\n            let isStatic = true;\r\n            if (content.startsWith('[')) {\r\n                isStatic = false;\r\n                if (!content.endsWith(']')) {\r\n                    emitError(context, 26 /* X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */);\r\n                }\r\n                content = content.substr(1, content.length - 2);\r\n            }\r\n            arg = {\r\n                type: 4 /* SIMPLE_EXPRESSION */,\r\n                content,\r\n                isStatic,\r\n                isConstant: isStatic,\r\n                loc\r\n            };\r\n        }\r\n        if (value && value.isQuoted) {\r\n            const valueLoc = value.loc;\r\n            valueLoc.start.offset++;\r\n            valueLoc.start.column++;\r\n            valueLoc.end = advancePositionWithClone(valueLoc.start, value.content);\r\n            valueLoc.source = valueLoc.source.slice(1, -1);\r\n        }\r\n        return {\r\n            type: 7 /* DIRECTIVE */,\r\n            name: match[1] ||\r\n                (startsWith(name, ':')\r\n                    ? 'bind'\r\n                    : startsWith(name, '@')\r\n                        ? 'on'\r\n                        : 'slot'),\r\n            exp: value && {\r\n                type: 4 /* SIMPLE_EXPRESSION */,\r\n                content: value.content,\r\n                isStatic: false,\r\n                // Treat as non-constant by default. This can be potentially set to\r\n                // true by `transformExpression` to make it eligible for hoisting.\r\n                isConstant: false,\r\n                loc: value.loc\r\n            },\r\n            arg,\r\n            modifiers: match[3] ? match[3].substr(1).split('.') : [],\r\n            loc\r\n        };\r\n    }\r\n    return {\r\n        type: 6 /* ATTRIBUTE */,\r\n        name,\r\n        value: value && {\r\n            type: 2 /* TEXT */,\r\n            content: value.content,\r\n            loc: value.loc\r\n        },\r\n        loc\r\n    };\r\n}\r\nfunction parseAttributeValue(context) {\r\n    const start = getCursor(context);\r\n    let content;\r\n    const quote = context.source[0];\r\n    const isQuoted = quote === `\"` || quote === `'`;\r\n    if (isQuoted) {\r\n        // Quoted value.\r\n        advanceBy(context, 1);\r\n        const endIndex = context.source.indexOf(quote);\r\n        if (endIndex === -1) {\r\n            content = parseTextData(context, context.source.length, 4 /* ATTRIBUTE_VALUE */);\r\n        }\r\n        else {\r\n            content = parseTextData(context, endIndex, 4 /* ATTRIBUTE_VALUE */);\r\n            advanceBy(context, 1);\r\n        }\r\n    }\r\n    else {\r\n        // Unquoted\r\n        const match = /^[^\\t\\r\\n\\f >]+/.exec(context.source);\r\n        if (!match) {\r\n            return undefined;\r\n        }\r\n        const unexpectedChars = /[\"'<=`]/g;\r\n        let m;\r\n        while ((m = unexpectedChars.exec(match[0]))) {\r\n            emitError(context, 18 /* UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */, m.index);\r\n        }\r\n        content = parseTextData(context, match[0].length, 4 /* ATTRIBUTE_VALUE */);\r\n    }\r\n    return { content, isQuoted, loc: getSelection(context, start) };\r\n}\r\nfunction parseInterpolation(context, mode) {\r\n    const [open, close] = context.options.delimiters;\r\n    const closeIndex = context.source.indexOf(close, open.length);\r\n    if (closeIndex === -1) {\r\n        emitError(context, 25 /* X_MISSING_INTERPOLATION_END */);\r\n        return undefined;\r\n    }\r\n    const start = getCursor(context);\r\n    advanceBy(context, open.length);\r\n    const innerStart = getCursor(context);\r\n    const innerEnd = getCursor(context);\r\n    const rawContentLength = closeIndex - open.length;\r\n    const rawContent = context.source.slice(0, rawContentLength);\r\n    const preTrimContent = parseTextData(context, rawContentLength, mode);\r\n    const content = preTrimContent.trim();\r\n    const startOffset = preTrimContent.indexOf(content);\r\n    if (startOffset > 0) {\r\n        advancePositionWithMutation(innerStart, rawContent, startOffset);\r\n    }\r\n    const endOffset = rawContentLength - (preTrimContent.length - content.length - startOffset);\r\n    advancePositionWithMutation(innerEnd, rawContent, endOffset);\r\n    advanceBy(context, close.length);\r\n    return {\r\n        type: 5 /* INTERPOLATION */,\r\n        content: {\r\n            type: 4 /* SIMPLE_EXPRESSION */,\r\n            isStatic: false,\r\n            // Set `isConstant` to false by default and will decide in transformExpression\r\n            isConstant: false,\r\n            content,\r\n            loc: getSelection(context, innerStart, innerEnd)\r\n        },\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseText(context, mode) {\r\n    const endTokens = ['<', context.options.delimiters[0]];\r\n    if (mode === 3 /* CDATA */) {\r\n        endTokens.push(']]>');\r\n    }\r\n    let endIndex = context.source.length;\r\n    for (let i = 0; i < endTokens.length; i++) {\r\n        const index = context.source.indexOf(endTokens[i], 1);\r\n        if (index !== -1 && endIndex > index) {\r\n            endIndex = index;\r\n        }\r\n    }\r\n    const start = getCursor(context);\r\n    const content = parseTextData(context, endIndex, mode);\r\n    return {\r\n        type: 2 /* TEXT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\n/**\r\n * Get text data with a given length from the current location.\r\n * This translates HTML entities in the text data.\r\n */\r\nfunction parseTextData(context, length, mode) {\r\n    const rawText = context.source.slice(0, length);\r\n    advanceBy(context, length);\r\n    if (mode === 2 /* RAWTEXT */ ||\r\n        mode === 3 /* CDATA */ ||\r\n        rawText.indexOf('&') === -1) {\r\n        return rawText;\r\n    }\r\n    else {\r\n        // DATA or RCDATA containing \"&\"\". Entity decoding required.\r\n        return context.options.decodeEntities(rawText, mode === 4 /* ATTRIBUTE_VALUE */);\r\n    }\r\n}\r\nfunction getCursor(context) {\r\n    const { column, line, offset } = context;\r\n    return { column, line, offset };\r\n}\r\nfunction getSelection(context, start, end) {\r\n    end = end || getCursor(context);\r\n    return {\r\n        start,\r\n        end,\r\n        source: context.originalSource.slice(start.offset, end.offset)\r\n    };\r\n}\r\nfunction last(xs) {\r\n    return xs[xs.length - 1];\r\n}\r\nfunction startsWith(source, searchString) {\r\n    return source.startsWith(searchString);\r\n}\r\nfunction advanceBy(context, numberOfCharacters) {\r\n    const { source } = context;\r\n    advancePositionWithMutation(context, source, numberOfCharacters);\r\n    context.source = source.slice(numberOfCharacters);\r\n}\r\nfunction advanceSpaces(context) {\r\n    const match = /^[\\t\\r\\n\\f ]+/.exec(context.source);\r\n    if (match) {\r\n        advanceBy(context, match[0].length);\r\n    }\r\n}\r\nfunction getNewPosition(context, start, numberOfCharacters) {\r\n    return advancePositionWithClone(start, context.originalSource.slice(start.offset, numberOfCharacters), numberOfCharacters);\r\n}\r\nfunction emitError(context, code, offset, loc = getCursor(context)) {\r\n    if (offset) {\r\n        loc.offset += offset;\r\n        loc.column += offset;\r\n    }\r\n    context.options.onError(createCompilerError(code, {\r\n        start: loc,\r\n        end: loc,\r\n        source: ''\r\n    }));\r\n}\r\nfunction isEnd(context, mode, ancestors) {\r\n    const s = context.source;\r\n    switch (mode) {\r\n        case 0 /* DATA */:\r\n            if (startsWith(s, '</')) {\r\n                //TODO: probably bad performance\r\n                for (let i = ancestors.length - 1; i >= 0; --i) {\r\n                    if (startsWithEndTagOpen(s, ancestors[i].tag)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n        case 1 /* RCDATA */:\r\n        case 2 /* RAWTEXT */: {\r\n            const parent = last(ancestors);\r\n            if (parent && startsWithEndTagOpen(s, parent.tag)) {\r\n                return true;\r\n            }\r\n            break;\r\n        }\r\n        case 3 /* CDATA */:\r\n            if (startsWith(s, ']]>')) {\r\n                return true;\r\n            }\r\n            break;\r\n    }\r\n    return !s;\r\n}\r\nfunction startsWithEndTagOpen(source, tag) {\r\n    return (startsWith(source, '</') &&\r\n        source.substr(2, tag.length).toLowerCase() === tag.toLowerCase() &&\r\n        /[\\t\\n\\f />]/.test(source[2 + tag.length] || '>'));\r\n}\n\nfunction hoistStatic(root, context) {\r\n    walk(root.children, context, new Map(), \r\n    // Root node is unfortuantely non-hoistable due to potential parent\r\n    // fallthrough attributes.\r\n    isSingleElementRoot(root, root.children[0]));\r\n}\r\nfunction isSingleElementRoot(root, child) {\r\n    const { children } = root;\r\n    return (children.length === 1 &&\r\n        child.type === 1 /* ELEMENT */ &&\r\n        !isSlotOutlet(child));\r\n}\r\nfunction walk(children, context, resultCache, doNotHoistNode = false) {\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // only plain elements are eligible for hoisting.\r\n        if (child.type === 1 /* ELEMENT */ &&\r\n            child.tagType === 0 /* ELEMENT */) {\r\n            if (!doNotHoistNode && isStaticNode(child, resultCache)) {\r\n                child.codegenNode.patchFlag =\r\n                    -1 /* HOISTED */ + ((process.env.NODE_ENV !== 'production') ? ` /* HOISTED */` : ``);\r\n                const hoisted = context.transformHoist\r\n                    ? context.transformHoist(child, context)\r\n                    : child.codegenNode;\r\n                child.codegenNode = context.hoist(hoisted);\r\n                continue;\r\n            }\r\n            else {\r\n                // node may contain dynamic children, but its props may be eligible for\r\n                // hoisting.\r\n                const codegenNode = child.codegenNode;\r\n                if (codegenNode.type === 13 /* VNODE_CALL */) {\r\n                    const flag = getPatchFlag(codegenNode);\r\n                    if ((!flag ||\r\n                        flag === 512 /* NEED_PATCH */ ||\r\n                        flag === 1 /* TEXT */) &&\r\n                        !hasDynamicKeyOrRef(child) &&\r\n                        !hasCachedProps()) {\r\n                        const props = getNodeProps(child);\r\n                        if (props) {\r\n                            codegenNode.props = context.hoist(props);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (child.type === 1 /* ELEMENT */) {\r\n            walk(child.children, context, resultCache);\r\n        }\r\n        else if (child.type === 11 /* FOR */) {\r\n            // Do not hoist v-for single child because it has to be a block\r\n            walk(child.children, context, resultCache, child.children.length === 1);\r\n        }\r\n        else if (child.type === 9 /* IF */) {\r\n            for (let i = 0; i < child.branches.length; i++) {\r\n                const branchChildren = child.branches[i].children;\r\n                // Do not hoist v-if single child because it has to be a block\r\n                walk(branchChildren, context, resultCache, branchChildren.length === 1);\r\n            }\r\n        }\r\n        else if (child.type === 12 /* TEXT_CALL */ &&\r\n            isStaticNode(child.content, resultCache)) {\r\n            child.codegenNode = context.hoist(child.codegenNode);\r\n        }\r\n    }\r\n}\r\nfunction isStaticNode(node, resultCache = new Map()) {\r\n    switch (node.type) {\r\n        case 1 /* ELEMENT */:\r\n            if (node.tagType !== 0 /* ELEMENT */) {\r\n                return false;\r\n            }\r\n            const cached = resultCache.get(node);\r\n            if (cached !== undefined) {\r\n                return cached;\r\n            }\r\n            const codegenNode = node.codegenNode;\r\n            if (codegenNode.type !== 13 /* VNODE_CALL */) {\r\n                return false;\r\n            }\r\n            const flag = getPatchFlag(codegenNode);\r\n            if (!flag && !hasDynamicKeyOrRef(node) && !hasCachedProps()) {\r\n                // element self is static. check its children.\r\n                for (let i = 0; i < node.children.length; i++) {\r\n                    if (!isStaticNode(node.children[i], resultCache)) {\r\n                        resultCache.set(node, false);\r\n                        return false;\r\n                    }\r\n                }\r\n                // only svg/foreignObject could be block here, however if they are static\r\n                // then they don't need to be blocks since there will be no nested\r\n                // updates.\r\n                if (codegenNode.isBlock) {\r\n                    codegenNode.isBlock = false;\r\n                }\r\n                resultCache.set(node, true);\r\n                return true;\r\n            }\r\n            else {\r\n                resultCache.set(node, false);\r\n                return false;\r\n            }\r\n        case 2 /* TEXT */:\r\n        case 3 /* COMMENT */:\r\n            return true;\r\n        case 9 /* IF */:\r\n        case 11 /* FOR */:\r\n        case 10 /* IF_BRANCH */:\r\n            return false;\r\n        case 5 /* INTERPOLATION */:\r\n        case 12 /* TEXT_CALL */:\r\n            return isStaticNode(node.content, resultCache);\r\n        case 4 /* SIMPLE_EXPRESSION */:\r\n            return node.isConstant;\r\n        case 8 /* COMPOUND_EXPRESSION */:\r\n            return node.children.every(child => {\r\n                return (isString(child) || isSymbol(child) || isStaticNode(child, resultCache));\r\n            });\r\n        default:\r\n            if ((process.env.NODE_ENV !== 'production')) ;\r\n            return false;\r\n    }\r\n}\r\nfunction hasDynamicKeyOrRef(node) {\r\n    return !!(findProp(node, 'key', true) || findProp(node, 'ref', true));\r\n}\r\nfunction hasCachedProps(node) {\r\n    {\r\n        return false;\r\n    }\r\n}\r\nfunction getNodeProps(node) {\r\n    const codegenNode = node.codegenNode;\r\n    if (codegenNode.type === 13 /* VNODE_CALL */) {\r\n        return codegenNode.props;\r\n    }\r\n}\r\nfunction getPatchFlag(node) {\r\n    const flag = node.patchFlag;\r\n    return flag ? parseInt(flag, 10) : undefined;\r\n}\n\nfunction createTransformContext(root, { prefixIdentifiers = false, hoistStatic = false, cacheHandlers = false, nodeTransforms = [], directiveTransforms = {}, transformHoist = null, isBuiltInComponent = NOOP, expressionPlugins = [], scopeId = null, ssr = false, onError = defaultOnError }) {\r\n    const context = {\r\n        // options\r\n        prefixIdentifiers,\r\n        hoistStatic,\r\n        cacheHandlers,\r\n        nodeTransforms,\r\n        directiveTransforms,\r\n        transformHoist,\r\n        isBuiltInComponent,\r\n        expressionPlugins,\r\n        scopeId,\r\n        ssr,\r\n        onError,\r\n        // state\r\n        root,\r\n        helpers: new Set(),\r\n        components: new Set(),\r\n        directives: new Set(),\r\n        hoists: [],\r\n        imports: new Set(),\r\n        temps: 0,\r\n        cached: 0,\r\n        identifiers: {},\r\n        scopes: {\r\n            vFor: 0,\r\n            vSlot: 0,\r\n            vPre: 0,\r\n            vOnce: 0\r\n        },\r\n        parent: null,\r\n        currentNode: root,\r\n        childIndex: 0,\r\n        // methods\r\n        helper(name) {\r\n            context.helpers.add(name);\r\n            return name;\r\n        },\r\n        helperString(name) {\r\n            return `_${helperNameMap[context.helper(name)]}`;\r\n        },\r\n        replaceNode(node) {\r\n            /* istanbul ignore if */\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!context.currentNode) {\r\n                    throw new Error(`Node being replaced is already removed.`);\r\n                }\r\n                if (!context.parent) {\r\n                    throw new Error(`Cannot replace root node.`);\r\n                }\r\n            }\r\n            context.parent.children[context.childIndex] = context.currentNode = node;\r\n        },\r\n        removeNode(node) {\r\n            if ((process.env.NODE_ENV !== 'production') && !context.parent) {\r\n                throw new Error(`Cannot remove root node.`);\r\n            }\r\n            const list = context.parent.children;\r\n            const removalIndex = node\r\n                ? list.indexOf(node)\r\n                : context.currentNode\r\n                    ? context.childIndex\r\n                    : -1;\r\n            /* istanbul ignore if */\r\n            if ((process.env.NODE_ENV !== 'production') && removalIndex < 0) {\r\n                throw new Error(`node being removed is not a child of current parent`);\r\n            }\r\n            if (!node || node === context.currentNode) {\r\n                // current node removed\r\n                context.currentNode = null;\r\n                context.onNodeRemoved();\r\n            }\r\n            else {\r\n                // sibling node removed\r\n                if (context.childIndex > removalIndex) {\r\n                    context.childIndex--;\r\n                    context.onNodeRemoved();\r\n                }\r\n            }\r\n            context.parent.children.splice(removalIndex, 1);\r\n        },\r\n        onNodeRemoved: () => { },\r\n        addIdentifiers(exp) {\r\n        },\r\n        removeIdentifiers(exp) {\r\n        },\r\n        hoist(exp) {\r\n            context.hoists.push(exp);\r\n            return createSimpleExpression(`_hoisted_${context.hoists.length}`, false, exp.loc, true);\r\n        },\r\n        cache(exp, isVNode = false) {\r\n            return createCacheExpression(++context.cached, exp, isVNode);\r\n        }\r\n    };\r\n    return context;\r\n}\r\nfunction transform(root, options) {\r\n    const context = createTransformContext(root, options);\r\n    traverseNode(root, context);\r\n    if (options.hoistStatic) {\r\n        hoistStatic(root, context);\r\n    }\r\n    if (!options.ssr) {\r\n        createRootCodegen(root, context);\r\n    }\r\n    // finalize meta information\r\n    root.helpers = [...context.helpers];\r\n    root.components = [...context.components];\r\n    root.directives = [...context.directives];\r\n    root.imports = [...context.imports];\r\n    root.hoists = context.hoists;\r\n    root.temps = context.temps;\r\n    root.cached = context.cached;\r\n}\r\nfunction createRootCodegen(root, context) {\r\n    const { helper } = context;\r\n    const { children } = root;\r\n    const child = children[0];\r\n    if (children.length === 1) {\r\n        // if the single child is an element, turn it into a block.\r\n        if (isSingleElementRoot(root, child) && child.codegenNode) {\r\n            // single element root is never hoisted so codegenNode will never be\r\n            // SimpleExpressionNode\r\n            const codegenNode = child.codegenNode;\r\n            if (codegenNode.type === 13 /* VNODE_CALL */) {\r\n                codegenNode.isBlock = true;\r\n                helper(OPEN_BLOCK);\r\n                helper(CREATE_BLOCK);\r\n            }\r\n            root.codegenNode = codegenNode;\r\n        }\r\n        else {\r\n            // - single <slot/>, IfNode, ForNode: already blocks.\r\n            // - single text node: always patched.\r\n            // root codegen falls through via genNode()\r\n            root.codegenNode = child;\r\n        }\r\n    }\r\n    else if (children.length > 1) {\r\n        // root has multiple nodes - return a fragment block.\r\n        root.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, root.children, `${64 /* STABLE_FRAGMENT */} /* ${PatchFlagNames[64 /* STABLE_FRAGMENT */]} */`, undefined, undefined, true);\r\n    }\r\n}\r\nfunction traverseChildren(parent, context) {\r\n    let i = 0;\r\n    const nodeRemoved = () => {\r\n        i--;\r\n    };\r\n    for (; i < parent.children.length; i++) {\r\n        const child = parent.children[i];\r\n        if (isString(child))\r\n            continue;\r\n        context.parent = parent;\r\n        context.childIndex = i;\r\n        context.onNodeRemoved = nodeRemoved;\r\n        traverseNode(child, context);\r\n    }\r\n}\r\nfunction traverseNode(node, context) {\r\n    context.currentNode = node;\r\n    // apply transform plugins\r\n    const { nodeTransforms } = context;\r\n    const exitFns = [];\r\n    for (let i = 0; i < nodeTransforms.length; i++) {\r\n        const onExit = nodeTransforms[i](node, context);\r\n        if (onExit) {\r\n            if (isArray(onExit)) {\r\n                exitFns.push(...onExit);\r\n            }\r\n            else {\r\n                exitFns.push(onExit);\r\n            }\r\n        }\r\n        if (!context.currentNode) {\r\n            // node was removed\r\n            return;\r\n        }\r\n        else {\r\n            // node may have been replaced\r\n            node = context.currentNode;\r\n        }\r\n    }\r\n    switch (node.type) {\r\n        case 3 /* COMMENT */:\r\n            if (!context.ssr) {\r\n                // inject import for the Comment symbol, which is needed for creating\r\n                // comment nodes with `createVNode`\r\n                context.helper(CREATE_COMMENT);\r\n            }\r\n            break;\r\n        case 5 /* INTERPOLATION */:\r\n            // no need to traverse, but we need to inject toString helper\r\n            if (!context.ssr) {\r\n                context.helper(TO_DISPLAY_STRING);\r\n            }\r\n            break;\r\n        // for container types, further traverse downwards\r\n        case 9 /* IF */:\r\n            for (let i = 0; i < node.branches.length; i++) {\r\n                traverseNode(node.branches[i], context);\r\n            }\r\n            break;\r\n        case 10 /* IF_BRANCH */:\r\n        case 11 /* FOR */:\r\n        case 1 /* ELEMENT */:\r\n        case 0 /* ROOT */:\r\n            traverseChildren(node, context);\r\n            break;\r\n    }\r\n    // exit transforms\r\n    let i = exitFns.length;\r\n    while (i--) {\r\n        exitFns[i]();\r\n    }\r\n}\r\nfunction createStructuralDirectiveTransform(name, fn) {\r\n    const matches = isString(name)\r\n        ? (n) => n === name\r\n        : (n) => name.test(n);\r\n    return (node, context) => {\r\n        if (node.type === 1 /* ELEMENT */) {\r\n            const { props } = node;\r\n            // structural directive transforms are not concerned with slots\r\n            // as they are handled separately in vSlot.ts\r\n            if (node.tagType === 3 /* TEMPLATE */ && props.some(isVSlot)) {\r\n                return;\r\n            }\r\n            const exitFns = [];\r\n            for (let i = 0; i < props.length; i++) {\r\n                const prop = props[i];\r\n                if (prop.type === 7 /* DIRECTIVE */ && matches(prop.name)) {\r\n                    // structural directives are removed to avoid infinite recursion\r\n                    // also we remove them *before* applying so that it can further\r\n                    // traverse itself in case it moves the node around\r\n                    props.splice(i, 1);\r\n                    i--;\r\n                    const onExit = fn(node, prop, context);\r\n                    if (onExit)\r\n                        exitFns.push(onExit);\r\n                }\r\n            }\r\n            return exitFns;\r\n        }\r\n    };\r\n}\n\nfunction createCodegenContext(ast, { mode = 'function', prefixIdentifiers = mode === 'module', sourceMap = false, filename = `template.vue.html`, scopeId = null, optimizeBindings = false, runtimeGlobalName = `Vue`, runtimeModuleName = `vue`, ssr = false }) {\r\n    const context = {\r\n        mode,\r\n        prefixIdentifiers,\r\n        sourceMap,\r\n        filename,\r\n        scopeId,\r\n        optimizeBindings,\r\n        runtimeGlobalName,\r\n        runtimeModuleName,\r\n        ssr,\r\n        source: ast.loc.source,\r\n        code: ``,\r\n        column: 1,\r\n        line: 1,\r\n        offset: 0,\r\n        indentLevel: 0,\r\n        map: undefined,\r\n        helper(key) {\r\n            return `_${helperNameMap[key]}`;\r\n        },\r\n        push(code, node) {\r\n            context.code += code;\r\n        },\r\n        indent() {\r\n            newline(++context.indentLevel);\r\n        },\r\n        deindent(withoutNewLine = false) {\r\n            if (withoutNewLine) {\r\n                --context.indentLevel;\r\n            }\r\n            else {\r\n                newline(--context.indentLevel);\r\n            }\r\n        },\r\n        newline() {\r\n            newline(context.indentLevel);\r\n        }\r\n    };\r\n    function newline(n) {\r\n        context.push('\\n' + `  `.repeat(n));\r\n    }\r\n    return context;\r\n}\r\nfunction generate(ast, options = {}) {\r\n    const context = createCodegenContext(ast, options);\r\n    const { mode, push, prefixIdentifiers, indent, deindent, newline, scopeId, ssr } = context;\r\n    const hasHelpers = ast.helpers.length > 0;\r\n    const useWithBlock = !prefixIdentifiers && mode !== 'module';\r\n    // preambles\r\n    {\r\n        genFunctionPreamble(ast, context);\r\n    }\r\n    if (!ssr) {\r\n        push(`function render(_ctx, _cache) {`);\r\n    }\r\n    else {\r\n        push(`function ssrRender(_ctx, _push, _parent) {`);\r\n    }\r\n    indent();\r\n    if (useWithBlock) {\r\n        push(`with (_ctx) {`);\r\n        indent();\r\n        // function mode const declarations should be inside with block\r\n        // also they should be renamed to avoid collision with user properties\r\n        if (hasHelpers) {\r\n            push(`const { ${ast.helpers\r\n                .map(s => `${helperNameMap[s]}: _${helperNameMap[s]}`)\r\n                .join(', ')} } = _Vue`);\r\n            push(`\\n`);\r\n            newline();\r\n        }\r\n    }\r\n    // generate asset resolution statements\r\n    if (ast.components.length) {\r\n        genAssets(ast.components, 'component', context);\r\n        if (ast.directives.length || ast.temps > 0) {\r\n            newline();\r\n        }\r\n    }\r\n    if (ast.directives.length) {\r\n        genAssets(ast.directives, 'directive', context);\r\n        if (ast.temps > 0) {\r\n            newline();\r\n        }\r\n    }\r\n    if (ast.temps > 0) {\r\n        push(`let `);\r\n        for (let i = 0; i < ast.temps; i++) {\r\n            push(`${i > 0 ? `, ` : ``}_temp${i}`);\r\n        }\r\n    }\r\n    if (ast.components.length || ast.directives.length || ast.temps) {\r\n        push(`\\n`);\r\n        newline();\r\n    }\r\n    // generate the VNode tree expression\r\n    if (!ssr) {\r\n        push(`return `);\r\n    }\r\n    if (ast.codegenNode) {\r\n        genNode(ast.codegenNode, context);\r\n    }\r\n    else {\r\n        push(`null`);\r\n    }\r\n    if (useWithBlock) {\r\n        deindent();\r\n        push(`}`);\r\n    }\r\n    deindent();\r\n    push(`}`);\r\n    return {\r\n        ast,\r\n        code: context.code,\r\n        // SourceMapGenerator does have toJSON() method but it's not in the types\r\n        map: context.map ? context.map.toJSON() : undefined\r\n    };\r\n}\r\nfunction genFunctionPreamble(ast, context) {\r\n    const { ssr, prefixIdentifiers, push, newline, runtimeModuleName, runtimeGlobalName } = context;\r\n    const VueBinding =  runtimeGlobalName;\r\n    const aliasHelper = (s) => `${helperNameMap[s]}: _${helperNameMap[s]}`;\r\n    // Generate const declaration for helpers\r\n    // In prefix mode, we place the const declaration at top so it's done\r\n    // only once; But if we not prefixing, we place the declaration inside the\r\n    // with block so it doesn't incur the `in` check cost for every helper access.\r\n    if (ast.helpers.length > 0) {\r\n        {\r\n            // \"with\" mode.\r\n            // save Vue in a separate variable to avoid collision\r\n            push(`const _Vue = ${VueBinding}\\n`);\r\n            // in \"with\" mode, helpers are declared inside the with block to avoid\r\n            // has check cost, but hoists are lifted out of the function - we need\r\n            // to provide the helper here.\r\n            if (ast.hoists.length) {\r\n                const staticHelpers = [\r\n                    CREATE_VNODE,\r\n                    CREATE_COMMENT,\r\n                    CREATE_TEXT,\r\n                    CREATE_STATIC\r\n                ]\r\n                    .filter(helper => ast.helpers.includes(helper))\r\n                    .map(aliasHelper)\r\n                    .join(', ');\r\n                push(`const { ${staticHelpers} } = _Vue\\n`);\r\n            }\r\n        }\r\n    }\r\n    genHoists(ast.hoists, context);\r\n    newline();\r\n    push(`return `);\r\n}\r\nfunction genAssets(assets, type, { helper, push, newline }) {\r\n    const resolver = helper(type === 'component' ? RESOLVE_COMPONENT : RESOLVE_DIRECTIVE);\r\n    for (let i = 0; i < assets.length; i++) {\r\n        const id = assets[i];\r\n        push(`const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)})`);\r\n        if (i < assets.length - 1) {\r\n            newline();\r\n        }\r\n    }\r\n}\r\nfunction genHoists(hoists, context) {\r\n    if (!hoists.length) {\r\n        return;\r\n    }\r\n    const { push, newline, helper, scopeId, mode } = context;\r\n    newline();\r\n    hoists.forEach((exp, i) => {\r\n        push(`const _hoisted_${i + 1} = `);\r\n        genNode(exp, context);\r\n        newline();\r\n    });\r\n}\r\nfunction isText$1(n) {\r\n    return (isString(n) ||\r\n        n.type === 4 /* SIMPLE_EXPRESSION */ ||\r\n        n.type === 2 /* TEXT */ ||\r\n        n.type === 5 /* INTERPOLATION */ ||\r\n        n.type === 8 /* COMPOUND_EXPRESSION */);\r\n}\r\nfunction genNodeListAsArray(nodes, context) {\r\n    const multilines = nodes.length > 3 ||\r\n        (( (process.env.NODE_ENV !== 'production')) && nodes.some(n => isArray(n) || !isText$1(n)));\r\n    context.push(`[`);\r\n    multilines && context.indent();\r\n    genNodeList(nodes, context, multilines);\r\n    multilines && context.deindent();\r\n    context.push(`]`);\r\n}\r\nfunction genNodeList(nodes, context, multilines = false, comma = true) {\r\n    const { push, newline } = context;\r\n    for (let i = 0; i < nodes.length; i++) {\r\n        const node = nodes[i];\r\n        if (isString(node)) {\r\n            push(node);\r\n        }\r\n        else if (isArray(node)) {\r\n            genNodeListAsArray(node, context);\r\n        }\r\n        else {\r\n            genNode(node, context);\r\n        }\r\n        if (i < nodes.length - 1) {\r\n            if (multilines) {\r\n                comma && push(',');\r\n                newline();\r\n            }\r\n            else {\r\n                comma && push(', ');\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction genNode(node, context) {\r\n    if (isString(node)) {\r\n        context.push(node);\r\n        return;\r\n    }\r\n    if (isSymbol(node)) {\r\n        context.push(context.helper(node));\r\n        return;\r\n    }\r\n    switch (node.type) {\r\n        case 1 /* ELEMENT */:\r\n        case 9 /* IF */:\r\n        case 11 /* FOR */:\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                assert(node.codegenNode != null, `Codegen node is missing for element/if/for node. ` +\r\n                    `Apply appropriate transforms first.`);\r\n            genNode(node.codegenNode, context);\r\n            break;\r\n        case 2 /* TEXT */:\r\n            genText(node, context);\r\n            break;\r\n        case 4 /* SIMPLE_EXPRESSION */:\r\n            genExpression(node, context);\r\n            break;\r\n        case 5 /* INTERPOLATION */:\r\n            genInterpolation(node, context);\r\n            break;\r\n        case 12 /* TEXT_CALL */:\r\n            genNode(node.codegenNode, context);\r\n            break;\r\n        case 8 /* COMPOUND_EXPRESSION */:\r\n            genCompoundExpression(node, context);\r\n            break;\r\n        case 3 /* COMMENT */:\r\n            genComment(node, context);\r\n            break;\r\n        case 13 /* VNODE_CALL */:\r\n            genVNodeCall(node, context);\r\n            break;\r\n        case 14 /* JS_CALL_EXPRESSION */:\r\n            genCallExpression(node, context);\r\n            break;\r\n        case 15 /* JS_OBJECT_EXPRESSION */:\r\n            genObjectExpression(node, context);\r\n            break;\r\n        case 17 /* JS_ARRAY_EXPRESSION */:\r\n            genArrayExpression(node, context);\r\n            break;\r\n        case 18 /* JS_FUNCTION_EXPRESSION */:\r\n            genFunctionExpression(node, context);\r\n            break;\r\n        case 19 /* JS_CONDITIONAL_EXPRESSION */:\r\n            genConditionalExpression(node, context);\r\n            break;\r\n        case 20 /* JS_CACHE_EXPRESSION */:\r\n            genCacheExpression(node, context);\r\n            break;\r\n        // SSR only types\r\n        case 21 /* JS_BLOCK_STATEMENT */:\r\n            break;\r\n        case 22 /* JS_TEMPLATE_LITERAL */:\r\n            break;\r\n        case 23 /* JS_IF_STATEMENT */:\r\n            break;\r\n        case 24 /* JS_ASSIGNMENT_EXPRESSION */:\r\n            break;\r\n        case 25 /* JS_SEQUENCE_EXPRESSION */:\r\n            break;\r\n        case 26 /* JS_RETURN_STATEMENT */:\r\n            break;\r\n        /* istanbul ignore next */\r\n        case 10 /* IF_BRANCH */:\r\n            // noop\r\n            break;\r\n        default:\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                assert(false, `unhandled codegen node type: ${node.type}`);\r\n                // make sure we exhaust all possible types\r\n                const exhaustiveCheck = node;\r\n                return exhaustiveCheck;\r\n            }\r\n    }\r\n}\r\nfunction genText(node, context) {\r\n    context.push(JSON.stringify(node.content), node);\r\n}\r\nfunction genExpression(node, context) {\r\n    const { content, isStatic } = node;\r\n    context.push(isStatic ? JSON.stringify(content) : content, node);\r\n}\r\nfunction genInterpolation(node, context) {\r\n    const { push, helper } = context;\r\n    push(`${helper(TO_DISPLAY_STRING)}(`);\r\n    genNode(node.content, context);\r\n    push(`)`);\r\n}\r\nfunction genCompoundExpression(node, context) {\r\n    for (let i = 0; i < node.children.length; i++) {\r\n        const child = node.children[i];\r\n        if (isString(child)) {\r\n            context.push(child);\r\n        }\r\n        else {\r\n            genNode(child, context);\r\n        }\r\n    }\r\n}\r\nfunction genExpressionAsPropertyKey(node, context) {\r\n    const { push } = context;\r\n    if (node.type === 8 /* COMPOUND_EXPRESSION */) {\r\n        push(`[`);\r\n        genCompoundExpression(node, context);\r\n        push(`]`);\r\n    }\r\n    else if (node.isStatic) {\r\n        // only quote keys if necessary\r\n        const text = isSimpleIdentifier(node.content)\r\n            ? node.content\r\n            : JSON.stringify(node.content);\r\n        push(text, node);\r\n    }\r\n    else {\r\n        push(`[${node.content}]`, node);\r\n    }\r\n}\r\nfunction genComment(node, context) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const { push, helper } = context;\r\n        push(`${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`, node);\r\n    }\r\n}\r\nfunction genVNodeCall(node, context) {\r\n    const { push, helper } = context;\r\n    const { tag, props, children, patchFlag, dynamicProps, directives, isBlock, isForBlock } = node;\r\n    if (directives) {\r\n        push(helper(WITH_DIRECTIVES) + `(`);\r\n    }\r\n    if (isBlock) {\r\n        push(`(${helper(OPEN_BLOCK)}(${isForBlock ? `true` : ``}), `);\r\n    }\r\n    push(helper(isBlock ? CREATE_BLOCK : CREATE_VNODE) + `(`, node);\r\n    genNodeList(genNullableArgs([tag, props, children, patchFlag, dynamicProps]), context);\r\n    push(`)`);\r\n    if (isBlock) {\r\n        push(`)`);\r\n    }\r\n    if (directives) {\r\n        push(`, `);\r\n        genNode(directives, context);\r\n        push(`)`);\r\n    }\r\n}\r\nfunction genNullableArgs(args) {\r\n    let i = args.length;\r\n    while (i--) {\r\n        if (args[i] != null)\r\n            break;\r\n    }\r\n    return args.slice(0, i + 1).map(arg => arg || `null`);\r\n}\r\n// JavaScript\r\nfunction genCallExpression(node, context) {\r\n    const callee = isString(node.callee)\r\n        ? node.callee\r\n        : context.helper(node.callee);\r\n    context.push(callee + `(`, node);\r\n    genNodeList(node.arguments, context);\r\n    context.push(`)`);\r\n}\r\nfunction genObjectExpression(node, context) {\r\n    const { push, indent, deindent, newline } = context;\r\n    const { properties } = node;\r\n    if (!properties.length) {\r\n        push(`{}`, node);\r\n        return;\r\n    }\r\n    const multilines = properties.length > 1 ||\r\n        (( (process.env.NODE_ENV !== 'production')) &&\r\n            properties.some(p => p.value.type !== 4 /* SIMPLE_EXPRESSION */));\r\n    push(multilines ? `{` : `{ `);\r\n    multilines && indent();\r\n    for (let i = 0; i < properties.length; i++) {\r\n        const { key, value } = properties[i];\r\n        // key\r\n        genExpressionAsPropertyKey(key, context);\r\n        push(`: `);\r\n        // value\r\n        genNode(value, context);\r\n        if (i < properties.length - 1) {\r\n            // will only reach this if it's multilines\r\n            push(`,`);\r\n            newline();\r\n        }\r\n    }\r\n    multilines && deindent();\r\n    push(multilines ? `}` : ` }`);\r\n}\r\nfunction genArrayExpression(node, context) {\r\n    genNodeListAsArray(node.elements, context);\r\n}\r\nfunction genFunctionExpression(node, context) {\r\n    const { push, indent, deindent, scopeId, mode } = context;\r\n    const { params, returns, body, newline, isSlot } = node;\r\n    if (isSlot) {\r\n        push(`_${helperNameMap[WITH_CTX]}(`);\r\n    }\r\n    push(`(`, node);\r\n    if (isArray(params)) {\r\n        genNodeList(params, context);\r\n    }\r\n    else if (params) {\r\n        genNode(params, context);\r\n    }\r\n    push(`) => `);\r\n    if (newline || body) {\r\n        push(`{`);\r\n        indent();\r\n    }\r\n    if (returns) {\r\n        if (newline) {\r\n            push(`return `);\r\n        }\r\n        if (isArray(returns)) {\r\n            genNodeListAsArray(returns, context);\r\n        }\r\n        else {\r\n            genNode(returns, context);\r\n        }\r\n    }\r\n    else if (body) {\r\n        genNode(body, context);\r\n    }\r\n    if (newline || body) {\r\n        deindent();\r\n        push(`}`);\r\n    }\r\n    if ( isSlot) {\r\n        push(`)`);\r\n    }\r\n}\r\nfunction genConditionalExpression(node, context) {\r\n    const { test, consequent, alternate, newline: needNewline } = node;\r\n    const { push, indent, deindent, newline } = context;\r\n    if (test.type === 4 /* SIMPLE_EXPRESSION */) {\r\n        const needsParens = !isSimpleIdentifier(test.content);\r\n        needsParens && push(`(`);\r\n        genExpression(test, context);\r\n        needsParens && push(`)`);\r\n    }\r\n    else {\r\n        push(`(`);\r\n        genNode(test, context);\r\n        push(`)`);\r\n    }\r\n    needNewline && indent();\r\n    context.indentLevel++;\r\n    needNewline || push(` `);\r\n    push(`? `);\r\n    genNode(consequent, context);\r\n    context.indentLevel--;\r\n    needNewline && newline();\r\n    needNewline || push(` `);\r\n    push(`: `);\r\n    const isNested = alternate.type === 19 /* JS_CONDITIONAL_EXPRESSION */;\r\n    if (!isNested) {\r\n        context.indentLevel++;\r\n    }\r\n    genNode(alternate, context);\r\n    if (!isNested) {\r\n        context.indentLevel--;\r\n    }\r\n    needNewline && deindent(true /* without newline */);\r\n}\r\nfunction genCacheExpression(node, context) {\r\n    const { push, helper, indent, deindent, newline } = context;\r\n    push(`_cache[${node.index}] || (`);\r\n    if (node.isVNode) {\r\n        indent();\r\n        push(`${helper(SET_BLOCK_TRACKING)}(-1),`);\r\n        newline();\r\n    }\r\n    push(`_cache[${node.index}] = `);\r\n    genNode(node.value, context);\r\n    if (node.isVNode) {\r\n        push(`,`);\r\n        newline();\r\n        push(`${helper(SET_BLOCK_TRACKING)}(1),`);\r\n        newline();\r\n        push(`_cache[${node.index}]`);\r\n        deindent();\r\n    }\r\n    push(`)`);\r\n}\n\nconst isLiteralWhitelisted = /*#__PURE__*/ makeMap('true,false,null,this');\r\nconst transformExpression = (node, context) => {\r\n    if (node.type === 5 /* INTERPOLATION */) {\r\n        node.content = processExpression(node.content, context);\r\n    }\r\n    else if (node.type === 1 /* ELEMENT */) {\r\n        // handle directives on element\r\n        for (let i = 0; i < node.props.length; i++) {\r\n            const dir = node.props[i];\r\n            // do not process for v-on & v-for since they are special handled\r\n            if (dir.type === 7 /* DIRECTIVE */ && dir.name !== 'for') {\r\n                const exp = dir.exp;\r\n                const arg = dir.arg;\r\n                // do not process exp if this is v-on:arg - we need special handling\r\n                // for wrapping inline statements.\r\n                if (exp &&\r\n                    exp.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n                    !(dir.name === 'on' && arg)) {\r\n                    dir.exp = processExpression(exp, context, \r\n                    // slot args must be processed as function params\r\n                    dir.name === 'slot');\r\n                }\r\n                if (arg && arg.type === 4 /* SIMPLE_EXPRESSION */ && !arg.isStatic) {\r\n                    dir.arg = processExpression(arg, context);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n// Important: since this function uses Node.js only dependencies, it should\r\n// always be used with a leading !true check so that it can be\r\n// tree-shaken from the browser build.\r\nfunction processExpression(node, context, \r\n// some expressions like v-slot props & v-for aliases should be parsed as\r\n// function params\r\nasParams = false, \r\n// v-on handler values may contain multiple statements\r\nasRawStatements = false) {\r\n    if (!context.prefixIdentifiers || !node.content.trim()) {\r\n        return node;\r\n    }\r\n    // fast path if expression is a simple identifier.\r\n    const rawExp = node.content;\r\n    // bail on parens to prevent any possible function invocations.\r\n    const bailConstant = rawExp.indexOf(`(`) > -1;\r\n    if (isSimpleIdentifier(rawExp)) {\r\n        if (!asParams &&\r\n            !context.identifiers[rawExp] &&\r\n            !isGloballyWhitelisted(rawExp) &&\r\n            !isLiteralWhitelisted(rawExp)) {\r\n            node.content = `_ctx.${rawExp}`;\r\n        }\r\n        else if (!context.identifiers[rawExp] && !bailConstant) {\r\n            // mark node constant for hoisting unless it's referring a scope variable\r\n            node.isConstant = true;\r\n        }\r\n        return node;\r\n    }\r\n    let ast;\r\n    // exp needs to be parsed differently:\r\n    // 1. Multiple inline statements (v-on, with presence of `;`): parse as raw\r\n    //    exp, but make sure to pad with spaces for consistent ranges\r\n    // 2. Expressions: wrap with parens (for e.g. object expressions)\r\n    // 3. Function arguments (v-for, v-slot): place in a function argument position\r\n    const source = asRawStatements\r\n        ? ` ${rawExp} `\r\n        : `(${rawExp})${asParams ? `=>{}` : ``}`;\r\n    try {\r\n        ast = parseJS(source, {\r\n            plugins: [\r\n                ...context.expressionPlugins,\r\n                // by default we enable proposals slated for ES2020.\r\n                // full list at https://babeljs.io/docs/en/next/babel-parser#plugins\r\n                // this will need to be updated as the spec moves forward.\r\n                'bigInt',\r\n                'optionalChaining',\r\n                'nullishCoalescingOperator'\r\n            ]\r\n        }).program;\r\n    }\r\n    catch (e) {\r\n        context.onError(createCompilerError(41 /* X_INVALID_EXPRESSION */, node.loc, undefined, e.message));\r\n        return node;\r\n    }\r\n    const ids = [];\r\n    const knownIds = Object.create(context.identifiers);\r\n    const isDuplicate = (node) => ids.some(id => id.start === node.start);\r\n    // walk the AST and look for identifiers that need to be prefixed with `_ctx.`.\r\n    walkJS(ast, {\r\n        enter(node, parent) {\r\n            if (node.type === 'Identifier') {\r\n                if (!isDuplicate(node)) {\r\n                    const needPrefix = shouldPrefix(node, parent);\r\n                    if (!knownIds[node.name] && needPrefix) {\r\n                        if (isPropertyShorthand(node, parent)) {\r\n                            // property shorthand like { foo }, we need to add the key since we\r\n                            // rewrite the value\r\n                            node.prefix = `${node.name}: `;\r\n                        }\r\n                        node.name = `_ctx.${node.name}`;\r\n                        ids.push(node);\r\n                    }\r\n                    else if (!isStaticPropertyKey(node, parent)) {\r\n                        // The identifier is considered constant unless it's pointing to a\r\n                        // scope variable (a v-for alias, or a v-slot prop)\r\n                        if (!(needPrefix && knownIds[node.name]) && !bailConstant) {\r\n                            node.isConstant = true;\r\n                        }\r\n                        // also generate sub-expressions for other identifiers for better\r\n                        // source map support. (except for property keys which are static)\r\n                        ids.push(node);\r\n                    }\r\n                }\r\n            }\r\n            else if (isFunction(node)) {\r\n                // walk function expressions and add its arguments to known identifiers\r\n                // so that we don't prefix them\r\n                node.params.forEach(p => walkJS(p, {\r\n                    enter(child, parent) {\r\n                        if (child.type === 'Identifier' &&\r\n                            // do not record as scope variable if is a destructured key\r\n                            !isStaticPropertyKey(child, parent) &&\r\n                            // do not record if this is a default value\r\n                            // assignment of a destructured variable\r\n                            !(parent &&\r\n                                parent.type === 'AssignmentPattern' &&\r\n                                parent.right === child)) {\r\n                            const { name } = child;\r\n                            if (node.scopeIds && node.scopeIds.has(name)) {\r\n                                return;\r\n                            }\r\n                            if (name in knownIds) {\r\n                                knownIds[name]++;\r\n                            }\r\n                            else {\r\n                                knownIds[name] = 1;\r\n                            }\r\n                            (node.scopeIds || (node.scopeIds = new Set())).add(name);\r\n                        }\r\n                    }\r\n                }));\r\n            }\r\n        },\r\n        leave(node) {\r\n            if (node !== ast.body[0].expression && node.scopeIds) {\r\n                node.scopeIds.forEach((id) => {\r\n                    knownIds[id]--;\r\n                    if (knownIds[id] === 0) {\r\n                        delete knownIds[id];\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    });\r\n    // We break up the compound expression into an array of strings and sub\r\n    // expressions (for identifiers that have been prefixed). In codegen, if\r\n    // an ExpressionNode has the `.children` property, it will be used instead of\r\n    // `.content`.\r\n    const children = [];\r\n    ids.sort((a, b) => a.start - b.start);\r\n    ids.forEach((id, i) => {\r\n        // range is offset by -1 due to the wrapping parens when parsed\r\n        const start = id.start - 1;\r\n        const end = id.end - 1;\r\n        const last = ids[i - 1];\r\n        const leadingText = rawExp.slice(last ? last.end - 1 : 0, start);\r\n        if (leadingText.length || id.prefix) {\r\n            children.push(leadingText + (id.prefix || ``));\r\n        }\r\n        const source = rawExp.slice(start, end);\r\n        children.push(createSimpleExpression(id.name, false, {\r\n            source,\r\n            start: advancePositionWithClone(node.loc.start, source, start),\r\n            end: advancePositionWithClone(node.loc.start, source, end)\r\n        }, id.isConstant /* isConstant */));\r\n        if (i === ids.length - 1 && end < rawExp.length) {\r\n            children.push(rawExp.slice(end));\r\n        }\r\n    });\r\n    let ret;\r\n    if (children.length) {\r\n        ret = createCompoundExpression(children, node.loc);\r\n    }\r\n    else {\r\n        ret = node;\r\n        ret.isConstant = !bailConstant;\r\n    }\r\n    ret.identifiers = Object.keys(knownIds);\r\n    return ret;\r\n}\r\nconst isFunction = (node) => /Function(Expression|Declaration)$/.test(node.type);\r\nconst isStaticProperty = (node) => node && node.type === 'ObjectProperty' && !node.computed;\r\nconst isPropertyShorthand = (node, parent) => {\r\n    return (isStaticProperty(parent) &&\r\n        parent.value === node &&\r\n        parent.key.type === 'Identifier' &&\r\n        parent.key.name === node.name &&\r\n        parent.key.start === node.start);\r\n};\r\nconst isStaticPropertyKey = (node, parent) => isStaticProperty(parent) && parent.key === node;\r\nfunction shouldPrefix(identifier, parent) {\r\n    if (!(isFunction(parent) &&\r\n        // not id of a FunctionDeclaration\r\n        (parent.id === identifier ||\r\n            // not a params of a function\r\n            parent.params.includes(identifier))) &&\r\n        // not a key of Property\r\n        !isStaticPropertyKey(identifier, parent) &&\r\n        // not a property of a MemberExpression\r\n        !((parent.type === 'MemberExpression' ||\r\n            parent.type === 'OptionalMemberExpression') &&\r\n            parent.property === identifier &&\r\n            !parent.computed) &&\r\n        // not in an Array destructure pattern\r\n        !(parent.type === 'ArrayPattern') &&\r\n        // skip whitelisted globals\r\n        !isGloballyWhitelisted(identifier.name) &&\r\n        // special case for webpack compilation\r\n        identifier.name !== `require` &&\r\n        // is a special keyword but parsed as identifier\r\n        identifier.name !== `arguments`) {\r\n        return true;\r\n    }\r\n}\n\nconst transformIf = createStructuralDirectiveTransform(/^(if|else|else-if)$/, (node, dir, context) => {\r\n    return processIf(node, dir, context, (ifNode, branch, isRoot) => {\r\n        // Exit callback. Complete the codegenNode when all children have been\r\n        // transformed.\r\n        return () => {\r\n            if (isRoot) {\r\n                ifNode.codegenNode = createCodegenNodeForBranch(branch, 0, context);\r\n            }\r\n            else {\r\n                // attach this branch's codegen node to the v-if root.\r\n                let parentCondition = ifNode.codegenNode;\r\n                while (parentCondition.alternate.type ===\r\n                    19 /* JS_CONDITIONAL_EXPRESSION */) {\r\n                    parentCondition = parentCondition.alternate;\r\n                }\r\n                parentCondition.alternate = createCodegenNodeForBranch(branch, ifNode.branches.length - 1, context);\r\n            }\r\n        };\r\n    });\r\n});\r\n// target-agnostic transform used for both Client and SSR\r\nfunction processIf(node, dir, context, processCodegen) {\r\n    if (dir.name !== 'else' &&\r\n        (!dir.exp || !dir.exp.content.trim())) {\r\n        const loc = dir.exp ? dir.exp.loc : node.loc;\r\n        context.onError(createCompilerError(27 /* X_V_IF_NO_EXPRESSION */, dir.loc));\r\n        dir.exp = createSimpleExpression(`true`, false, loc);\r\n    }\r\n    if (dir.name === 'if') {\r\n        const branch = createIfBranch(node, dir);\r\n        const ifNode = {\r\n            type: 9 /* IF */,\r\n            loc: node.loc,\r\n            branches: [branch]\r\n        };\r\n        context.replaceNode(ifNode);\r\n        if (processCodegen) {\r\n            return processCodegen(ifNode, branch, true);\r\n        }\r\n    }\r\n    else {\r\n        // locate the adjacent v-if\r\n        const siblings = context.parent.children;\r\n        const comments = [];\r\n        let i = siblings.indexOf(node);\r\n        while (i-- >= -1) {\r\n            const sibling = siblings[i];\r\n            if ((process.env.NODE_ENV !== 'production') && sibling && sibling.type === 3 /* COMMENT */) {\r\n                context.removeNode(sibling);\r\n                comments.unshift(sibling);\r\n                continue;\r\n            }\r\n            if (sibling && sibling.type === 9 /* IF */) {\r\n                // move the node to the if node's branches\r\n                context.removeNode();\r\n                const branch = createIfBranch(node, dir);\r\n                if ((process.env.NODE_ENV !== 'production') && comments.length) {\r\n                    branch.children = [...comments, ...branch.children];\r\n                }\r\n                sibling.branches.push(branch);\r\n                const onExit = processCodegen && processCodegen(sibling, branch, false);\r\n                // since the branch was removed, it will not be traversed.\r\n                // make sure to traverse here.\r\n                traverseNode(branch, context);\r\n                // call on exit\r\n                if (onExit)\r\n                    onExit();\r\n                // make sure to reset currentNode after traversal to indicate this\r\n                // node has been removed.\r\n                context.currentNode = null;\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(28 /* X_V_ELSE_NO_ADJACENT_IF */, node.loc));\r\n            }\r\n            break;\r\n        }\r\n    }\r\n}\r\nfunction createIfBranch(node, dir) {\r\n    return {\r\n        type: 10 /* IF_BRANCH */,\r\n        loc: node.loc,\r\n        condition: dir.name === 'else' ? undefined : dir.exp,\r\n        children: node.tagType === 3 /* TEMPLATE */ ? node.children : [node]\r\n    };\r\n}\r\nfunction createCodegenNodeForBranch(branch, index, context) {\r\n    if (branch.condition) {\r\n        return createConditionalExpression(branch.condition, createChildrenCodegenNode(branch, index, context), \r\n        // make sure to pass in asBlock: true so that the comment node call\r\n        // closes the current block.\r\n        createCallExpression(context.helper(CREATE_COMMENT), [\r\n            (process.env.NODE_ENV !== 'production') ? '\"v-if\"' : '\"\"',\r\n            'true'\r\n        ]));\r\n    }\r\n    else {\r\n        return createChildrenCodegenNode(branch, index, context);\r\n    }\r\n}\r\nfunction createChildrenCodegenNode(branch, index, context) {\r\n    const { helper } = context;\r\n    const keyProperty = createObjectProperty(`key`, createSimpleExpression(index + '', false));\r\n    const { children } = branch;\r\n    const firstChild = children[0];\r\n    const needFragmentWrapper = children.length !== 1 || firstChild.type !== 1 /* ELEMENT */;\r\n    if (needFragmentWrapper) {\r\n        if (children.length === 1 && firstChild.type === 11 /* FOR */) {\r\n            // optimize away nested fragments when child is a ForNode\r\n            const vnodeCall = firstChild.codegenNode;\r\n            injectProp(vnodeCall, keyProperty, context);\r\n            return vnodeCall;\r\n        }\r\n        else {\r\n            return createVNodeCall(context, helper(FRAGMENT), createObjectExpression([keyProperty]), children, `${64 /* STABLE_FRAGMENT */} /* ${PatchFlagNames[64 /* STABLE_FRAGMENT */]} */`, undefined, undefined, true, false, branch.loc);\r\n        }\r\n    }\r\n    else {\r\n        const vnodeCall = firstChild\r\n            .codegenNode;\r\n        // Change createVNode to createBlock.\r\n        if (vnodeCall.type === 13 /* VNODE_CALL */ &&\r\n            // component vnodes are always tracked and its children are\r\n            // compiled into slots so no need to make it a block\r\n            (firstChild.tagType !== 1 /* COMPONENT */ ||\r\n                // teleport has component type but isn't always tracked\r\n                vnodeCall.tag === TELEPORT)) {\r\n            vnodeCall.isBlock = true;\r\n            helper(OPEN_BLOCK);\r\n            helper(CREATE_BLOCK);\r\n        }\r\n        // inject branch key\r\n        injectProp(vnodeCall, keyProperty, context);\r\n        return vnodeCall;\r\n    }\r\n}\n\nconst transformFor = createStructuralDirectiveTransform('for', (node, dir, context) => {\r\n    const { helper } = context;\r\n    return processFor(node, dir, context, forNode => {\r\n        // create the loop render function expression now, and add the\r\n        // iterator on exit after all children have been traversed\r\n        const renderExp = createCallExpression(helper(RENDER_LIST), [\r\n            forNode.source\r\n        ]);\r\n        const keyProp = findProp(node, `key`);\r\n        const fragmentFlag = keyProp\r\n            ? 128 /* KEYED_FRAGMENT */\r\n            : 256 /* UNKEYED_FRAGMENT */;\r\n        forNode.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, renderExp, `${fragmentFlag} /* ${PatchFlagNames[fragmentFlag]} */`, undefined, undefined, true /* isBlock */, true /* isForBlock */, node.loc);\r\n        return () => {\r\n            // finish the codegen now that all children have been traversed\r\n            let childBlock;\r\n            const isTemplate = isTemplateNode(node);\r\n            const { children } = forNode;\r\n            const needFragmentWrapper = children.length > 1 || children[0].type !== 1 /* ELEMENT */;\r\n            const slotOutlet = isSlotOutlet(node)\r\n                ? node\r\n                : isTemplate &&\r\n                    node.children.length === 1 &&\r\n                    isSlotOutlet(node.children[0])\r\n                    ? node.children[0] // api-extractor somehow fails to infer this\r\n                    : null;\r\n            const keyProperty = keyProp\r\n                ? createObjectProperty(`key`, keyProp.type === 6 /* ATTRIBUTE */\r\n                    ? createSimpleExpression(keyProp.value.content, true)\r\n                    : keyProp.exp)\r\n                : null;\r\n            if (slotOutlet) {\r\n                // <slot v-for=\"...\"> or <template v-for=\"...\"><slot/></template>\r\n                childBlock = slotOutlet.codegenNode;\r\n                if (isTemplate && keyProperty) {\r\n                    // <template v-for=\"...\" :key=\"...\"><slot/></template>\r\n                    // we need to inject the key to the renderSlot() call.\r\n                    // the props for renderSlot is passed as the 3rd argument.\r\n                    injectProp(childBlock, keyProperty, context);\r\n                }\r\n            }\r\n            else if (needFragmentWrapper) {\r\n                // <template v-for=\"...\"> with text or multi-elements\r\n                // should generate a fragment block for each loop\r\n                childBlock = createVNodeCall(context, helper(FRAGMENT), keyProperty ? createObjectExpression([keyProperty]) : undefined, node.children, `${64 /* STABLE_FRAGMENT */} /* ${PatchFlagNames[64 /* STABLE_FRAGMENT */]} */`, undefined, undefined, true);\r\n            }\r\n            else {\r\n                // Normal element v-for. Directly use the child's codegenNode\r\n                // but mark it as a block.\r\n                childBlock = children[0]\r\n                    .codegenNode;\r\n                childBlock.isBlock = true;\r\n                helper(OPEN_BLOCK);\r\n                helper(CREATE_BLOCK);\r\n            }\r\n            renderExp.arguments.push(createFunctionExpression(createForLoopParams(forNode.parseResult), childBlock, true /* force newline */));\r\n        };\r\n    });\r\n});\r\n// target-agnostic transform used for both Client and SSR\r\nfunction processFor(node, dir, context, processCodegen) {\r\n    if (!dir.exp) {\r\n        context.onError(createCompilerError(29 /* X_V_FOR_NO_EXPRESSION */, dir.loc));\r\n        return;\r\n    }\r\n    const parseResult = parseForExpression(\r\n    // can only be simple expression because vFor transform is applied\r\n    // before expression transform.\r\n    dir.exp);\r\n    if (!parseResult) {\r\n        context.onError(createCompilerError(30 /* X_V_FOR_MALFORMED_EXPRESSION */, dir.loc));\r\n        return;\r\n    }\r\n    const { addIdentifiers, removeIdentifiers, scopes } = context;\r\n    const { source, value, key, index } = parseResult;\r\n    const forNode = {\r\n        type: 11 /* FOR */,\r\n        loc: dir.loc,\r\n        source,\r\n        valueAlias: value,\r\n        keyAlias: key,\r\n        objectIndexAlias: index,\r\n        parseResult,\r\n        children: node.tagType === 3 /* TEMPLATE */ ? node.children : [node]\r\n    };\r\n    context.replaceNode(forNode);\r\n    // bookkeeping\r\n    scopes.vFor++;\r\n    const onExit = processCodegen && processCodegen(forNode);\r\n    return () => {\r\n        scopes.vFor--;\r\n        if (onExit)\r\n            onExit();\r\n    };\r\n}\r\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\r\n// This regex doesn't cover the case if key or index aliases have destructuring,\r\n// but those do not make sense in the first place, so this works in practice.\r\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\r\nconst stripParensRE = /^\\(|\\)$/g;\r\nfunction parseForExpression(input, context) {\r\n    const loc = input.loc;\r\n    const exp = input.content;\r\n    const inMatch = exp.match(forAliasRE);\r\n    if (!inMatch)\r\n        return;\r\n    const [, LHS, RHS] = inMatch;\r\n    const result = {\r\n        source: createAliasExpression(loc, RHS.trim(), exp.indexOf(RHS, LHS.length)),\r\n        value: undefined,\r\n        key: undefined,\r\n        index: undefined\r\n    };\r\n    let valueContent = LHS.trim()\r\n        .replace(stripParensRE, '')\r\n        .trim();\r\n    const trimmedOffset = LHS.indexOf(valueContent);\r\n    const iteratorMatch = valueContent.match(forIteratorRE);\r\n    if (iteratorMatch) {\r\n        valueContent = valueContent.replace(forIteratorRE, '').trim();\r\n        const keyContent = iteratorMatch[1].trim();\r\n        let keyOffset;\r\n        if (keyContent) {\r\n            keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length);\r\n            result.key = createAliasExpression(loc, keyContent, keyOffset);\r\n        }\r\n        if (iteratorMatch[2]) {\r\n            const indexContent = iteratorMatch[2].trim();\r\n            if (indexContent) {\r\n                result.index = createAliasExpression(loc, indexContent, exp.indexOf(indexContent, result.key\r\n                    ? keyOffset + keyContent.length\r\n                    : trimmedOffset + valueContent.length));\r\n            }\r\n        }\r\n    }\r\n    if (valueContent) {\r\n        result.value = createAliasExpression(loc, valueContent, trimmedOffset);\r\n    }\r\n    return result;\r\n}\r\nfunction createAliasExpression(range, content, offset) {\r\n    return createSimpleExpression(content, false, getInnerRange(range, offset, content.length));\r\n}\r\nfunction createForLoopParams({ value, key, index }) {\r\n    const params = [];\r\n    if (value) {\r\n        params.push(value);\r\n    }\r\n    if (key) {\r\n        if (!value) {\r\n            params.push(createSimpleExpression(`_`, false));\r\n        }\r\n        params.push(key);\r\n    }\r\n    if (index) {\r\n        if (!key) {\r\n            if (!value) {\r\n                params.push(createSimpleExpression(`_`, false));\r\n            }\r\n            params.push(createSimpleExpression(`__`, false));\r\n        }\r\n        params.push(index);\r\n    }\r\n    return params;\r\n}\n\nconst isStaticExp = (p) => p.type === 4 /* SIMPLE_EXPRESSION */ && p.isStatic;\r\nconst defaultFallback = createSimpleExpression(`undefined`, false);\r\n// A NodeTransform that:\r\n// 1. Tracks scope identifiers for scoped slots so that they don't get prefixed\r\n//    by transformExpression. This is only applied in non-browser builds with\r\n//    { prefixIdentifiers: true }.\r\n// 2. Track v-slot depths so that we know a slot is inside another slot.\r\n//    Note the exit callback is executed before buildSlots() on the same node,\r\n//    so only nested slots see positive numbers.\r\nconst trackSlotScopes = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ &&\r\n        (node.tagType === 1 /* COMPONENT */ ||\r\n            node.tagType === 3 /* TEMPLATE */)) {\r\n        // We are only checking non-empty v-slot here\r\n        // since we only care about slots that introduce scope variables.\r\n        const vSlot = findDir(node, 'slot');\r\n        if (vSlot) {\r\n            const slotProps = vSlot.exp;\r\n            context.scopes.vSlot++;\r\n            return () => {\r\n                context.scopes.vSlot--;\r\n            };\r\n        }\r\n    }\r\n};\r\n// A NodeTransform that tracks scope identifiers for scoped slots with v-for.\r\n// This transform is only applied in non-browser builds with { prefixIdentifiers: true }\r\nconst trackVForSlotScopes = (node, context) => {\r\n    let vFor;\r\n    if (isTemplateNode(node) &&\r\n        node.props.some(isVSlot) &&\r\n        (vFor = findDir(node, 'for'))) {\r\n        const result = (vFor.parseResult = parseForExpression(vFor.exp));\r\n        if (result) {\r\n            const { value, key, index } = result;\r\n            const { addIdentifiers, removeIdentifiers } = context;\r\n            value && addIdentifiers(value);\r\n            key && addIdentifiers(key);\r\n            index && addIdentifiers(index);\r\n            return () => {\r\n                value && removeIdentifiers(value);\r\n                key && removeIdentifiers(key);\r\n                index && removeIdentifiers(index);\r\n            };\r\n        }\r\n    }\r\n};\r\nconst buildClientSlotFn = (props, children, loc) => createFunctionExpression(props, children, false /* newline */, true /* isSlot */, children.length ? children[0].loc : loc);\r\n// Instead of being a DirectiveTransform, v-slot processing is called during\r\n// transformElement to build the slots object for a component.\r\nfunction buildSlots(node, context, buildSlotFn = buildClientSlotFn) {\r\n    context.helper(WITH_CTX);\r\n    const { children, loc } = node;\r\n    const slotsProperties = [];\r\n    const dynamicSlots = [];\r\n    const buildDefaultSlotProperty = (props, children) => createObjectProperty(`default`, buildSlotFn(props, children, loc));\r\n    // If the slot is inside a v-for or another v-slot, force it to be dynamic\r\n    // since it likely uses a scope variable.\r\n    let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0;\r\n    // 1. Check for slot with slotProps on component itself.\r\n    //    <Comp v-slot=\"{ prop }\"/>\r\n    const onComponentSlot = findDir(node, 'slot', true);\r\n    if (onComponentSlot) {\r\n        const { arg, exp } = onComponentSlot;\r\n        slotsProperties.push(createObjectProperty(arg || createSimpleExpression('default', true), buildSlotFn(exp, children, loc)));\r\n    }\r\n    // 2. Iterate through children and check for template slots\r\n    //    <template v-slot:foo=\"{ prop }\">\r\n    let hasTemplateSlots = false;\r\n    let hasNamedDefaultSlot = false;\r\n    const implicitDefaultChildren = [];\r\n    const seenSlotNames = new Set();\r\n    for (let i = 0; i < children.length; i++) {\r\n        const slotElement = children[i];\r\n        let slotDir;\r\n        if (!isTemplateNode(slotElement) ||\r\n            !(slotDir = findDir(slotElement, 'slot', true))) {\r\n            // not a <template v-slot>, skip.\r\n            if (slotElement.type !== 3 /* COMMENT */) {\r\n                implicitDefaultChildren.push(slotElement);\r\n            }\r\n            continue;\r\n        }\r\n        if (onComponentSlot) {\r\n            // already has on-component slot - this is incorrect usage.\r\n            context.onError(createCompilerError(34 /* X_V_SLOT_MIXED_SLOT_USAGE */, slotDir.loc));\r\n            break;\r\n        }\r\n        hasTemplateSlots = true;\r\n        const { children: slotChildren, loc: slotLoc } = slotElement;\r\n        const { arg: slotName = createSimpleExpression(`default`, true), exp: slotProps, loc: dirLoc } = slotDir;\r\n        // check if name is dynamic.\r\n        let staticSlotName;\r\n        if (isStaticExp(slotName)) {\r\n            staticSlotName = slotName ? slotName.content : `default`;\r\n        }\r\n        else {\r\n            hasDynamicSlots = true;\r\n        }\r\n        const slotFunction = buildSlotFn(slotProps, slotChildren, slotLoc);\r\n        // check if this slot is conditional (v-if/v-for)\r\n        let vIf;\r\n        let vElse;\r\n        let vFor;\r\n        if ((vIf = findDir(slotElement, 'if'))) {\r\n            hasDynamicSlots = true;\r\n            dynamicSlots.push(createConditionalExpression(vIf.exp, buildDynamicSlot(slotName, slotFunction), defaultFallback));\r\n        }\r\n        else if ((vElse = findDir(slotElement, /^else(-if)?$/, true /* allowEmpty */))) {\r\n            // find adjacent v-if\r\n            let j = i;\r\n            let prev;\r\n            while (j--) {\r\n                prev = children[j];\r\n                if (prev.type !== 3 /* COMMENT */) {\r\n                    break;\r\n                }\r\n            }\r\n            if (prev && isTemplateNode(prev) && findDir(prev, 'if')) {\r\n                // remove node\r\n                children.splice(i, 1);\r\n                i--;\r\n                // attach this slot to previous conditional\r\n                let conditional = dynamicSlots[dynamicSlots.length - 1];\r\n                while (conditional.alternate.type === 19 /* JS_CONDITIONAL_EXPRESSION */) {\r\n                    conditional = conditional.alternate;\r\n                }\r\n                conditional.alternate = vElse.exp\r\n                    ? createConditionalExpression(vElse.exp, buildDynamicSlot(slotName, slotFunction), defaultFallback)\r\n                    : buildDynamicSlot(slotName, slotFunction);\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(28 /* X_V_ELSE_NO_ADJACENT_IF */, vElse.loc));\r\n            }\r\n        }\r\n        else if ((vFor = findDir(slotElement, 'for'))) {\r\n            hasDynamicSlots = true;\r\n            const parseResult = vFor.parseResult ||\r\n                parseForExpression(vFor.exp);\r\n            if (parseResult) {\r\n                // Render the dynamic slots as an array and add it to the createSlot()\r\n                // args. The runtime knows how to handle it appropriately.\r\n                dynamicSlots.push(createCallExpression(context.helper(RENDER_LIST), [\r\n                    parseResult.source,\r\n                    createFunctionExpression(createForLoopParams(parseResult), buildDynamicSlot(slotName, slotFunction), true /* force newline */)\r\n                ]));\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(30 /* X_V_FOR_MALFORMED_EXPRESSION */, vFor.loc));\r\n            }\r\n        }\r\n        else {\r\n            // check duplicate static names\r\n            if (staticSlotName) {\r\n                if (seenSlotNames.has(staticSlotName)) {\r\n                    context.onError(createCompilerError(35 /* X_V_SLOT_DUPLICATE_SLOT_NAMES */, dirLoc));\r\n                    continue;\r\n                }\r\n                seenSlotNames.add(staticSlotName);\r\n                if (staticSlotName === 'default') {\r\n                    hasNamedDefaultSlot = true;\r\n                }\r\n            }\r\n            slotsProperties.push(createObjectProperty(slotName, slotFunction));\r\n        }\r\n    }\r\n    if (!onComponentSlot) {\r\n        if (!hasTemplateSlots) {\r\n            // implicit default slot (on component)\r\n            slotsProperties.push(buildDefaultSlotProperty(undefined, children));\r\n        }\r\n        else if (implicitDefaultChildren.length) {\r\n            // implicit default slot (mixed with named slots)\r\n            if (hasNamedDefaultSlot) {\r\n                context.onError(createCompilerError(36 /* X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */, implicitDefaultChildren[0].loc));\r\n            }\r\n            else {\r\n                slotsProperties.push(buildDefaultSlotProperty(undefined, implicitDefaultChildren));\r\n            }\r\n        }\r\n    }\r\n    let slots = createObjectExpression(slotsProperties.concat(createObjectProperty(`_`, createSimpleExpression(`1`, false))), loc);\r\n    if (dynamicSlots.length) {\r\n        slots = createCallExpression(context.helper(CREATE_SLOTS), [\r\n            slots,\r\n            createArrayExpression(dynamicSlots)\r\n        ]);\r\n    }\r\n    return {\r\n        slots,\r\n        hasDynamicSlots\r\n    };\r\n}\r\nfunction buildDynamicSlot(name, fn) {\r\n    return createObjectExpression([\r\n        createObjectProperty(`name`, name),\r\n        createObjectProperty(`fn`, fn)\r\n    ]);\r\n}\n\n// some directive transforms (e.g. v-model) may return a symbol for runtime\r\n// import, which should be used instead of a resolveDirective call.\r\nconst directiveImportMap = new WeakMap();\r\n// generate a JavaScript AST for this element's codegen\r\nconst transformElement = (node, context) => {\r\n    if (!(node.type === 1 /* ELEMENT */ &&\r\n        (node.tagType === 0 /* ELEMENT */ ||\r\n            node.tagType === 1 /* COMPONENT */))) {\r\n        return;\r\n    }\r\n    // perform the work on exit, after all child expressions have been\r\n    // processed and merged.\r\n    return function postTransformElement() {\r\n        const { tag, props } = node;\r\n        const isComponent = node.tagType === 1 /* COMPONENT */;\r\n        // The goal of the transform is to create a codegenNode implementing the\r\n        // VNodeCall interface.\r\n        const vnodeTag = isComponent\r\n            ? resolveComponentType(node, context)\r\n            : `\"${tag}\"`;\r\n        let vnodeProps;\r\n        let vnodeChildren;\r\n        let vnodePatchFlag;\r\n        let patchFlag = 0;\r\n        let vnodeDynamicProps;\r\n        let dynamicPropNames;\r\n        let vnodeDirectives;\r\n        let shouldUseBlock = !isComponent &&\r\n            // <svg> and <foreignObject> must be forced into blocks so that block\r\n            // updates inside get proper isSVG flag at runtime. (#639, #643)\r\n            // This is technically web-specific, but splitting the logic out of core\r\n            // leads to too much unnecessary complexity.\r\n            (tag === 'svg' ||\r\n                tag === 'foreignObject' ||\r\n                // #938: elements with dynamic keys should be forced into blocks\r\n                findProp(node, 'key', true));\r\n        // props\r\n        if (props.length > 0) {\r\n            const propsBuildResult = buildProps(node, context);\r\n            vnodeProps = propsBuildResult.props;\r\n            patchFlag = propsBuildResult.patchFlag;\r\n            dynamicPropNames = propsBuildResult.dynamicPropNames;\r\n            const directives = propsBuildResult.directives;\r\n            vnodeDirectives =\r\n                directives && directives.length\r\n                    ? createArrayExpression(directives.map(dir => buildDirectiveArgs(dir, context)))\r\n                    : undefined;\r\n        }\r\n        // children\r\n        if (node.children.length > 0) {\r\n            if (vnodeTag === KEEP_ALIVE) {\r\n                // Although a built-in component, we compile KeepAlive with raw children\r\n                // instead of slot functions so that it can be used inside Transition\r\n                // or other Transition-wrapping HOCs.\r\n                // To ensure correct updates with block optimizations, we need to:\r\n                // 1. Force keep-alive into a block. This avoids its children being\r\n                //    collected by a parent block.\r\n                shouldUseBlock = true;\r\n                // 2. Force keep-alive to always be updated, since it uses raw children.\r\n                patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                if ((process.env.NODE_ENV !== 'production') && node.children.length > 1) {\r\n                    context.onError(createCompilerError(42 /* X_KEEP_ALIVE_INVALID_CHILDREN */, {\r\n                        start: node.children[0].loc.start,\r\n                        end: node.children[node.children.length - 1].loc.end,\r\n                        source: ''\r\n                    }));\r\n                }\r\n            }\r\n            const shouldBuildAsSlots = isComponent &&\r\n                // Teleport is not a real component and has dedicated runtime handling\r\n                vnodeTag !== TELEPORT &&\r\n                // explained above.\r\n                vnodeTag !== KEEP_ALIVE;\r\n            if (shouldBuildAsSlots) {\r\n                const { slots, hasDynamicSlots } = buildSlots(node, context);\r\n                vnodeChildren = slots;\r\n                if (hasDynamicSlots) {\r\n                    patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n            }\r\n            else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\r\n                const child = node.children[0];\r\n                const type = child.type;\r\n                // check for dynamic text children\r\n                const hasDynamicTextChild = type === 5 /* INTERPOLATION */ ||\r\n                    type === 8 /* COMPOUND_EXPRESSION */;\r\n                if (hasDynamicTextChild && !isStaticNode(child)) {\r\n                    patchFlag |= 1 /* TEXT */;\r\n                }\r\n                // pass directly if the only child is a text node\r\n                // (plain / interpolation / expression)\r\n                if (hasDynamicTextChild || type === 2 /* TEXT */) {\r\n                    vnodeChildren = child;\r\n                }\r\n                else {\r\n                    vnodeChildren = node.children;\r\n                }\r\n            }\r\n            else {\r\n                vnodeChildren = node.children;\r\n            }\r\n        }\r\n        // patchFlag & dynamicPropNames\r\n        if (patchFlag !== 0) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (patchFlag < 0) {\r\n                    // special flags (negative and mutually exclusive)\r\n                    vnodePatchFlag = patchFlag + ` /* ${PatchFlagNames[patchFlag]} */`;\r\n                }\r\n                else {\r\n                    // bitwise flags\r\n                    const flagNames = Object.keys(PatchFlagNames)\r\n                        .map(Number)\r\n                        .filter(n => n > 0 && patchFlag & n)\r\n                        .map(n => PatchFlagNames[n])\r\n                        .join(`, `);\r\n                    vnodePatchFlag = patchFlag + ` /* ${flagNames} */`;\r\n                }\r\n            }\r\n            else {\r\n                vnodePatchFlag = String(patchFlag);\r\n            }\r\n            if (dynamicPropNames && dynamicPropNames.length) {\r\n                vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames);\r\n            }\r\n        }\r\n        node.codegenNode = createVNodeCall(context, vnodeTag, vnodeProps, vnodeChildren, vnodePatchFlag, vnodeDynamicProps, vnodeDirectives, !!shouldUseBlock, false /* isForBlock */, node.loc);\r\n    };\r\n};\r\nfunction resolveComponentType(node, context, ssr = false) {\r\n    const { tag } = node;\r\n    // 1. dynamic component\r\n    const isProp = node.tag === 'component' ? findProp(node, 'is') : findDir(node, 'is');\r\n    if (isProp) {\r\n        const exp = isProp.type === 6 /* ATTRIBUTE */\r\n            ? isProp.value && createSimpleExpression(isProp.value.content, true)\r\n            : isProp.exp;\r\n        if (exp) {\r\n            return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\r\n                exp\r\n            ]);\r\n        }\r\n    }\r\n    // 2. built-in components (Teleport, Transition, KeepAlive, Suspense...)\r\n    const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag);\r\n    if (builtIn) {\r\n        // built-ins are simply fallthroughs / have special handling during ssr\r\n        // no we don't need to import their runtime equivalents\r\n        if (!ssr)\r\n            context.helper(builtIn);\r\n        return builtIn;\r\n    }\r\n    // 3. user component (resolve)\r\n    context.helper(RESOLVE_COMPONENT);\r\n    context.components.add(tag);\r\n    return toValidAssetId(tag, `component`);\r\n}\r\nfunction buildProps(node, context, props = node.props, ssr = false) {\r\n    const { tag, loc: elementLoc } = node;\r\n    const isComponent = node.tagType === 1 /* COMPONENT */;\r\n    let properties = [];\r\n    const mergeArgs = [];\r\n    const runtimeDirectives = [];\r\n    // patchFlag analysis\r\n    let patchFlag = 0;\r\n    let hasRef = false;\r\n    let hasClassBinding = false;\r\n    let hasStyleBinding = false;\r\n    let hasHydrationEventBinding = false;\r\n    let hasDynamicKeys = false;\r\n    const dynamicPropNames = [];\r\n    const analyzePatchFlag = ({ key, value }) => {\r\n        if (key.type === 4 /* SIMPLE_EXPRESSION */ && key.isStatic) {\r\n            const name = key.content;\r\n            if (!isComponent &&\r\n                isOn(name) &&\r\n                // omit the flag for click handlers becaues hydration gives click\r\n                // dedicated fast path.\r\n                name.toLowerCase() !== 'onclick' &&\r\n                // omit v-model handlers\r\n                name !== 'onUpdate:modelValue') {\r\n                hasHydrationEventBinding = true;\r\n            }\r\n            if (value.type === 20 /* JS_CACHE_EXPRESSION */ ||\r\n                ((value.type === 4 /* SIMPLE_EXPRESSION */ ||\r\n                    value.type === 8 /* COMPOUND_EXPRESSION */) &&\r\n                    isStaticNode(value))) {\r\n                // skip if the prop is a cached handler or has constant value\r\n                return;\r\n            }\r\n            if (name === 'ref') {\r\n                hasRef = true;\r\n            }\r\n            else if (name === 'class' && !isComponent) {\r\n                hasClassBinding = true;\r\n            }\r\n            else if (name === 'style' && !isComponent) {\r\n                hasStyleBinding = true;\r\n            }\r\n            else if (name !== 'key' && !dynamicPropNames.includes(name)) {\r\n                dynamicPropNames.push(name);\r\n            }\r\n        }\r\n        else {\r\n            hasDynamicKeys = true;\r\n        }\r\n    };\r\n    for (let i = 0; i < props.length; i++) {\r\n        // static attribute\r\n        const prop = props[i];\r\n        if (prop.type === 6 /* ATTRIBUTE */) {\r\n            const { loc, name, value } = prop;\r\n            if (name === 'ref') {\r\n                hasRef = true;\r\n            }\r\n            // skip :is on <component>\r\n            if (name === 'is' && tag === 'component') {\r\n                continue;\r\n            }\r\n            properties.push(createObjectProperty(createSimpleExpression(name, true, getInnerRange(loc, 0, name.length)), createSimpleExpression(value ? value.content : '', true, value ? value.loc : loc)));\r\n        }\r\n        else {\r\n            // directives\r\n            const { name, arg, exp, loc } = prop;\r\n            const isBind = name === 'bind';\r\n            const isOn = name === 'on';\r\n            // skip v-slot - it is handled by its dedicated transform.\r\n            if (name === 'slot') {\r\n                if (!isComponent) {\r\n                    context.onError(createCompilerError(37 /* X_V_SLOT_MISPLACED */, loc));\r\n                }\r\n                continue;\r\n            }\r\n            // skip v-once - it is handled by its dedicated transform.\r\n            if (name === 'once') {\r\n                continue;\r\n            }\r\n            // skip v-is and :is on <component>\r\n            if (name === 'is' ||\r\n                (isBind && tag === 'component' && isBindKey(arg, 'is'))) {\r\n                continue;\r\n            }\r\n            // skip v-on in SSR compilation\r\n            if (isOn && ssr) {\r\n                continue;\r\n            }\r\n            // special case for v-bind and v-on with no argument\r\n            if (!arg && (isBind || isOn)) {\r\n                hasDynamicKeys = true;\r\n                if (exp) {\r\n                    if (properties.length) {\r\n                        mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));\r\n                        properties = [];\r\n                    }\r\n                    if (isBind) {\r\n                        mergeArgs.push(exp);\r\n                    }\r\n                    else {\r\n                        // v-on=\"obj\" -> toHandlers(obj)\r\n                        mergeArgs.push({\r\n                            type: 14 /* JS_CALL_EXPRESSION */,\r\n                            loc,\r\n                            callee: context.helper(TO_HANDLERS),\r\n                            arguments: [exp]\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    context.onError(createCompilerError(isBind\r\n                        ? 31 /* X_V_BIND_NO_EXPRESSION */\r\n                        : 32 /* X_V_ON_NO_EXPRESSION */, loc));\r\n                }\r\n                continue;\r\n            }\r\n            const directiveTransform = context.directiveTransforms[name];\r\n            if (directiveTransform) {\r\n                // has built-in directive transform.\r\n                const { props, needRuntime } = directiveTransform(prop, node, context);\r\n                !ssr && props.forEach(analyzePatchFlag);\r\n                properties.push(...props);\r\n                if (needRuntime) {\r\n                    runtimeDirectives.push(prop);\r\n                    if (isSymbol(needRuntime)) {\r\n                        directiveImportMap.set(prop, needRuntime);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // no built-in transform, this is a user custom directive.\r\n                runtimeDirectives.push(prop);\r\n            }\r\n        }\r\n    }\r\n    let propsExpression = undefined;\r\n    // has v-bind=\"object\" or v-on=\"object\", wrap with mergeProps\r\n    if (mergeArgs.length) {\r\n        if (properties.length) {\r\n            mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));\r\n        }\r\n        if (mergeArgs.length > 1) {\r\n            propsExpression = createCallExpression(context.helper(MERGE_PROPS), mergeArgs, elementLoc);\r\n        }\r\n        else {\r\n            // single v-bind with nothing else - no need for a mergeProps call\r\n            propsExpression = mergeArgs[0];\r\n        }\r\n    }\r\n    else if (properties.length) {\r\n        propsExpression = createObjectExpression(dedupeProperties(properties), elementLoc);\r\n    }\r\n    // patchFlag analysis\r\n    if (hasDynamicKeys) {\r\n        patchFlag |= 16 /* FULL_PROPS */;\r\n    }\r\n    else {\r\n        if (hasClassBinding) {\r\n            patchFlag |= 2 /* CLASS */;\r\n        }\r\n        if (hasStyleBinding) {\r\n            patchFlag |= 4 /* STYLE */;\r\n        }\r\n        if (dynamicPropNames.length) {\r\n            patchFlag |= 8 /* PROPS */;\r\n        }\r\n        if (hasHydrationEventBinding) {\r\n            patchFlag |= 32 /* HYDRATE_EVENTS */;\r\n        }\r\n    }\r\n    if ((patchFlag === 0 || patchFlag === 32 /* HYDRATE_EVENTS */) &&\r\n        (hasRef || runtimeDirectives.length > 0)) {\r\n        patchFlag |= 512 /* NEED_PATCH */;\r\n    }\r\n    return {\r\n        props: propsExpression,\r\n        directives: runtimeDirectives,\r\n        patchFlag,\r\n        dynamicPropNames\r\n    };\r\n}\r\n// Dedupe props in an object literal.\r\n// Literal duplicated attributes would have been warned during the parse phase,\r\n// however, it's possible to encounter duplicated `onXXX` handlers with different\r\n// modifiers. We also need to merge static and dynamic class / style attributes.\r\n// - onXXX handlers / style: merge into array\r\n// - class: merge into single expression with concatenation\r\nfunction dedupeProperties(properties) {\r\n    const knownProps = new Map();\r\n    const deduped = [];\r\n    for (let i = 0; i < properties.length; i++) {\r\n        const prop = properties[i];\r\n        // dynamic keys are always allowed\r\n        if (prop.key.type === 8 /* COMPOUND_EXPRESSION */ || !prop.key.isStatic) {\r\n            deduped.push(prop);\r\n            continue;\r\n        }\r\n        const name = prop.key.content;\r\n        const existing = knownProps.get(name);\r\n        if (existing) {\r\n            if (name === 'style' || name === 'class' || name.startsWith('on')) {\r\n                mergeAsArray(existing, prop);\r\n            }\r\n            // unexpected duplicate, should have emitted error during parse\r\n        }\r\n        else {\r\n            knownProps.set(name, prop);\r\n            deduped.push(prop);\r\n        }\r\n    }\r\n    return deduped;\r\n}\r\nfunction mergeAsArray(existing, incoming) {\r\n    if (existing.value.type === 17 /* JS_ARRAY_EXPRESSION */) {\r\n        existing.value.elements.push(incoming.value);\r\n    }\r\n    else {\r\n        existing.value = createArrayExpression([existing.value, incoming.value], existing.loc);\r\n    }\r\n}\r\nfunction buildDirectiveArgs(dir, context) {\r\n    const dirArgs = [];\r\n    const runtime = directiveImportMap.get(dir);\r\n    if (runtime) {\r\n        dirArgs.push(context.helperString(runtime));\r\n    }\r\n    else {\r\n        // inject statement for resolving directive\r\n        context.helper(RESOLVE_DIRECTIVE);\r\n        context.directives.add(dir.name);\r\n        dirArgs.push(toValidAssetId(dir.name, `directive`));\r\n    }\r\n    const { loc } = dir;\r\n    if (dir.exp)\r\n        dirArgs.push(dir.exp);\r\n    if (dir.arg) {\r\n        if (!dir.exp) {\r\n            dirArgs.push(`void 0`);\r\n        }\r\n        dirArgs.push(dir.arg);\r\n    }\r\n    if (Object.keys(dir.modifiers).length) {\r\n        if (!dir.arg) {\r\n            if (!dir.exp) {\r\n                dirArgs.push(`void 0`);\r\n            }\r\n            dirArgs.push(`void 0`);\r\n        }\r\n        const trueExpression = createSimpleExpression(`true`, false, loc);\r\n        dirArgs.push(createObjectExpression(dir.modifiers.map(modifier => createObjectProperty(modifier, trueExpression)), loc));\r\n    }\r\n    return createArrayExpression(dirArgs, dir.loc);\r\n}\r\nfunction stringifyDynamicPropNames(props) {\r\n    let propsNamesString = `[`;\r\n    for (let i = 0, l = props.length; i < l; i++) {\r\n        propsNamesString += JSON.stringify(props[i]);\r\n        if (i < l - 1)\r\n            propsNamesString += ', ';\r\n    }\r\n    return propsNamesString + `]`;\r\n}\n\nconst transformSlotOutlet = (node, context) => {\r\n    if (isSlotOutlet(node)) {\r\n        const { children, loc } = node;\r\n        const { slotName, slotProps } = processSlotOutlet(node, context);\r\n        const slotArgs = [\r\n            context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,\r\n            slotName\r\n        ];\r\n        if (slotProps) {\r\n            slotArgs.push(slotProps);\r\n        }\r\n        if (children.length) {\r\n            if (!slotProps) {\r\n                slotArgs.push(`{}`);\r\n            }\r\n            slotArgs.push(children);\r\n        }\r\n        node.codegenNode = createCallExpression(context.helper(RENDER_SLOT), slotArgs, loc);\r\n    }\r\n};\r\nfunction processSlotOutlet(node, context) {\r\n    let slotName = `\"default\"`;\r\n    let slotProps = undefined;\r\n    // check for <slot name=\"xxx\" OR :name=\"xxx\" />\r\n    const name = findProp(node, 'name');\r\n    if (name) {\r\n        if (name.type === 6 /* ATTRIBUTE */ && name.value) {\r\n            // static name\r\n            slotName = JSON.stringify(name.value.content);\r\n        }\r\n        else if (name.type === 7 /* DIRECTIVE */ && name.exp) {\r\n            // dynamic name\r\n            slotName = name.exp;\r\n        }\r\n    }\r\n    const propsWithoutName = name\r\n        ? node.props.filter(p => p !== name)\r\n        : node.props;\r\n    if (propsWithoutName.length > 0) {\r\n        const { props, directives } = buildProps(node, context, propsWithoutName);\r\n        slotProps = props;\r\n        if (directives.length) {\r\n            context.onError(createCompilerError(33 /* X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */, directives[0].loc));\r\n        }\r\n    }\r\n    return {\r\n        slotName,\r\n        slotProps\r\n    };\r\n}\n\nconst fnExpRE = /^([\\w$_]+|\\([^)]*?\\))\\s*=>|^function(?:\\s+[\\w$]+)?\\s*\\(/;\r\nconst transformOn = (dir, node, context, augmentor) => {\r\n    const { loc, modifiers, arg } = dir;\r\n    if (!dir.exp && !modifiers.length) {\r\n        context.onError(createCompilerError(32 /* X_V_ON_NO_EXPRESSION */, loc));\r\n    }\r\n    let eventName;\r\n    if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\r\n        if (arg.isStatic) {\r\n            const rawName = arg.content;\r\n            // for @vnode-xxx event listeners, auto convert it to camelCase\r\n            const normalizedName = rawName.startsWith(`vnode`)\r\n                ? capitalize(camelize(rawName))\r\n                : capitalize(rawName);\r\n            eventName = createSimpleExpression(`on${normalizedName}`, true, arg.loc);\r\n        }\r\n        else {\r\n            eventName = createCompoundExpression([`\"on\" + (`, arg, `)`]);\r\n        }\r\n    }\r\n    else {\r\n        // already a compound expression.\r\n        eventName = arg;\r\n        eventName.children.unshift(`\"on\" + (`);\r\n        eventName.children.push(`)`);\r\n    }\r\n    // handler processing\r\n    let exp = dir.exp;\r\n    if (exp && !exp.content.trim()) {\r\n        exp = undefined;\r\n    }\r\n    let isCacheable = !exp;\r\n    if (exp) {\r\n        const isMemberExp = isMemberExpression(exp.content);\r\n        const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content));\r\n        const hasMultipleStatements = exp.content.includes(`;`);\r\n        if (isInlineStatement || (isCacheable && isMemberExp)) {\r\n            // wrap inline statement in a function expression\r\n            exp = createCompoundExpression([\r\n                `$event => ${hasMultipleStatements ? `{` : `(`}`,\r\n                exp,\r\n                hasMultipleStatements ? `}` : `)`\r\n            ]);\r\n        }\r\n    }\r\n    let ret = {\r\n        props: [\r\n            createObjectProperty(eventName, exp || createSimpleExpression(`() => {}`, false, loc))\r\n        ]\r\n    };\r\n    // apply extended compiler augmentor\r\n    if (augmentor) {\r\n        ret = augmentor(ret);\r\n    }\r\n    if (isCacheable) {\r\n        // cache handlers so that it's always the same handler being passed down.\r\n        // this avoids unnecessary re-renders when users use inline handlers on\r\n        // components.\r\n        ret.props[0].value = context.cache(ret.props[0].value);\r\n    }\r\n    return ret;\r\n};\n\n// v-bind without arg is handled directly in ./transformElements.ts due to it affecting\r\n// codegen for the entire props object. This transform here is only for v-bind\r\n// *with* args.\r\nconst transformBind = (dir, node, context) => {\r\n    const { exp, modifiers, loc } = dir;\r\n    const arg = dir.arg;\r\n    if (!exp) {\r\n        context.onError(createCompilerError(31 /* X_V_BIND_NO_EXPRESSION */, loc));\r\n    }\r\n    // .prop is no longer necessary due to new patch behavior\r\n    // .sync is replaced by v-model:arg\r\n    if (modifiers.includes('camel')) {\r\n        if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\r\n            if (arg.isStatic) {\r\n                arg.content = camelize(arg.content);\r\n            }\r\n            else {\r\n                arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`;\r\n            }\r\n        }\r\n        else {\r\n            arg.children.unshift(`${context.helperString(CAMELIZE)}(`);\r\n            arg.children.push(`)`);\r\n        }\r\n    }\r\n    return {\r\n        props: [\r\n            createObjectProperty(arg, exp || createSimpleExpression('', true, loc))\r\n        ]\r\n    };\r\n};\n\n// Merge adjacent text nodes and expressions into a single expression\r\n// e.g. <div>abc {{ d }} {{ e }}</div> should have a single expression node as child.\r\nconst transformText = (node, context) => {\r\n    if (node.type === 0 /* ROOT */ ||\r\n        node.type === 1 /* ELEMENT */ ||\r\n        node.type === 11 /* FOR */ ||\r\n        node.type === 10 /* IF_BRANCH */) {\r\n        // perform the transform on node exit so that all expressions have already\r\n        // been processed.\r\n        return () => {\r\n            const children = node.children;\r\n            let currentContainer = undefined;\r\n            let hasText = false;\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (isText(child)) {\r\n                    hasText = true;\r\n                    for (let j = i + 1; j < children.length; j++) {\r\n                        const next = children[j];\r\n                        if (isText(next)) {\r\n                            if (!currentContainer) {\r\n                                currentContainer = children[i] = {\r\n                                    type: 8 /* COMPOUND_EXPRESSION */,\r\n                                    loc: child.loc,\r\n                                    children: [child]\r\n                                };\r\n                            }\r\n                            // merge adjacent text node into current\r\n                            currentContainer.children.push(` + `, next);\r\n                            children.splice(j, 1);\r\n                            j--;\r\n                        }\r\n                        else {\r\n                            currentContainer = undefined;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (!hasText ||\r\n                // if this is a plain element with a single text child, leave it\r\n                // as-is since the runtime has dedicated fast path for this by directly\r\n                // setting textContent of the element.\r\n                // for component root it's always normalized anyway.\r\n                (children.length === 1 &&\r\n                    (node.type === 0 /* ROOT */ ||\r\n                        (node.type === 1 /* ELEMENT */ &&\r\n                            node.tagType === 0 /* ELEMENT */)))) {\r\n                return;\r\n            }\r\n            // pre-convert text nodes into createTextVNode(text) calls to avoid\r\n            // runtime normalization.\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (isText(child) || child.type === 8 /* COMPOUND_EXPRESSION */) {\r\n                    const callArgs = [];\r\n                    // createTextVNode defaults to single whitespace, so if it is a\r\n                    // single space the code could be an empty call to save bytes.\r\n                    if (child.type !== 2 /* TEXT */ || child.content !== ' ') {\r\n                        callArgs.push(child);\r\n                    }\r\n                    // mark dynamic text with flag so it gets patched inside a block\r\n                    if (!context.ssr && child.type !== 2 /* TEXT */) {\r\n                        callArgs.push(`${1 /* TEXT */} /* ${PatchFlagNames[1 /* TEXT */]} */`);\r\n                    }\r\n                    children[i] = {\r\n                        type: 12 /* TEXT_CALL */,\r\n                        content: child,\r\n                        loc: child.loc,\r\n                        codegenNode: createCallExpression(context.helper(CREATE_TEXT), callArgs)\r\n                    };\r\n                }\r\n            }\r\n        };\r\n    }\r\n};\n\nconst transformOnce = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ && findDir(node, 'once', true)) {\r\n        context.helper(SET_BLOCK_TRACKING);\r\n        return () => {\r\n            if (node.codegenNode) {\r\n                node.codegenNode = context.cache(node.codegenNode, true /* isVNode */);\r\n            }\r\n        };\r\n    }\r\n};\n\nconst transformModel = (dir, node, context) => {\r\n    const { exp, arg } = dir;\r\n    if (!exp) {\r\n        context.onError(createCompilerError(38 /* X_V_MODEL_NO_EXPRESSION */, dir.loc));\r\n        return createTransformProps();\r\n    }\r\n    const expString = exp.type === 4 /* SIMPLE_EXPRESSION */ ? exp.content : exp.loc.source;\r\n    if (!isMemberExpression(expString)) {\r\n        context.onError(createCompilerError(39 /* X_V_MODEL_MALFORMED_EXPRESSION */, exp.loc));\r\n        return createTransformProps();\r\n    }\r\n    const propName = arg ? arg : createSimpleExpression('modelValue', true);\r\n    const eventName = arg\r\n        ? arg.type === 4 /* SIMPLE_EXPRESSION */ && arg.isStatic\r\n            ? `onUpdate:${arg.content}`\r\n            : createCompoundExpression(['\"onUpdate:\" + ', arg])\r\n        : `onUpdate:modelValue`;\r\n    const props = [\r\n        // modelValue: foo\r\n        createObjectProperty(propName, dir.exp),\r\n        // \"onUpdate:modelValue\": $event => (foo = $event)\r\n        createObjectProperty(eventName, createCompoundExpression([`$event => (`, exp, ` = $event)`]))\r\n    ];\r\n    // modelModifiers: { foo: true, \"bar-baz\": true }\r\n    if (dir.modifiers.length && node.tagType === 1 /* COMPONENT */) {\r\n        const modifiers = dir.modifiers\r\n            .map(m => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`)\r\n            .join(`, `);\r\n        const modifiersKey = arg\r\n            ? arg.type === 4 /* SIMPLE_EXPRESSION */ && arg.isStatic\r\n                ? `${arg.content}Modifiers`\r\n                : createCompoundExpression([arg, ' + \"Modifiers\"'])\r\n            : `modelModifiers`;\r\n        props.push(createObjectProperty(modifiersKey, createSimpleExpression(`{ ${modifiers} }`, false, dir.loc, true)));\r\n    }\r\n    return createTransformProps(props);\r\n};\r\nfunction createTransformProps(props = []) {\r\n    return { props };\r\n}\n\nfunction getBaseTransformPreset(prefixIdentifiers) {\r\n    return [\r\n        [\r\n            transformOnce,\r\n            transformIf,\r\n            transformFor,\r\n            ...( []),\r\n            transformSlotOutlet,\r\n            transformElement,\r\n            trackSlotScopes,\r\n            transformText\r\n        ],\r\n        {\r\n            on: transformOn,\r\n            bind: transformBind,\r\n            model: transformModel\r\n        }\r\n    ];\r\n}\r\n// we name it `baseCompile` so that higher order compilers like\r\n// @vue/compiler-dom can export `compile` while re-exporting everything else.\r\nfunction baseCompile(template, options = {}) {\r\n    const onError = options.onError || defaultOnError;\r\n    const isModuleMode = options.mode === 'module';\r\n    /* istanbul ignore if */\r\n    {\r\n        if (options.prefixIdentifiers === true) {\r\n            onError(createCompilerError(43 /* X_PREFIX_ID_NOT_SUPPORTED */));\r\n        }\r\n        else if (isModuleMode) {\r\n            onError(createCompilerError(44 /* X_MODULE_MODE_NOT_SUPPORTED */));\r\n        }\r\n    }\r\n    const prefixIdentifiers = !true ;\r\n    if ( options.cacheHandlers) {\r\n        onError(createCompilerError(45 /* X_CACHE_HANDLER_NOT_SUPPORTED */));\r\n    }\r\n    if (options.scopeId && !isModuleMode) {\r\n        onError(createCompilerError(46 /* X_SCOPE_ID_NOT_SUPPORTED */));\r\n    }\r\n    const ast = isString(template) ? baseParse(template, options) : template;\r\n    const [nodeTransforms, directiveTransforms] = getBaseTransformPreset();\r\n    transform(ast, {\r\n        ...options,\r\n        prefixIdentifiers,\r\n        nodeTransforms: [\r\n            ...nodeTransforms,\r\n            ...(options.nodeTransforms || []) // user transforms\r\n        ],\r\n        directiveTransforms: {\r\n            ...directiveTransforms,\r\n            ...(options.directiveTransforms || {}) // user transforms\r\n        }\r\n    });\r\n    return generate(ast, {\r\n        ...options,\r\n        prefixIdentifiers\r\n    });\r\n}\n\nconst noopDirectiveTransform = () => ({ props: [] });\n\nexport { BASE_TRANSITION, CAMELIZE, CREATE_BLOCK, CREATE_COMMENT, CREATE_SLOTS, CREATE_STATIC, CREATE_TEXT, CREATE_VNODE, FRAGMENT, KEEP_ALIVE, MERGE_PROPS, OPEN_BLOCK, POP_SCOPE_ID, PUSH_SCOPE_ID, RENDER_LIST, RENDER_SLOT, RESOLVE_COMPONENT, RESOLVE_DIRECTIVE, RESOLVE_DYNAMIC_COMPONENT, SET_BLOCK_TRACKING, SUSPENSE, TELEPORT, TO_DISPLAY_STRING, TO_HANDLERS, WITH_CTX, WITH_DIRECTIVES, WITH_SCOPE_ID, advancePositionWithClone, advancePositionWithMutation, assert, baseCompile, baseParse, buildProps, buildSlots, createArrayExpression, createAssignmentExpression, createBlockStatement, createCacheExpression, createCallExpression, createCompilerError, createCompoundExpression, createConditionalExpression, createForLoopParams, createFunctionExpression, createIfStatement, createInterpolation, createObjectExpression, createObjectProperty, createReturnStatement, createRoot, createSequenceExpression, createSimpleExpression, createStructuralDirectiveTransform, createTemplateLiteral, createTransformContext, createVNodeCall, findDir, findProp, generate, getBaseTransformPreset, getInnerRange, hasDynamicKeyVBind, hasScopeRef, helperNameMap, injectProp, isBindKey, isBuiltInType, isCoreComponent, isMemberExpression, isSimpleIdentifier, isSlotOutlet, isTemplateNode, isText, isVSlot, loadDep, locStub, noopDirectiveTransform, parseJS, processExpression, processFor, processIf, processSlotOutlet, registerRuntimeHelpers, resolveComponentType, toValidAssetId, trackSlotScopes, trackVForSlotScopes, transform, transformBind, transformElement, transformExpression, transformModel, transformOn, traverseNode, walkJS };\n","import { ParserOptions } from \"@vue/compiler-core\";\nimport { makeMap } from \"./makeMap\";\n\nexport const parserOptionsMinimal: ParserOptions = {\n    isVoidTag: () => false,\n    isNativeTag: (tag) => {\n        return isTree2dTag(tag);\n    },\n    isPreTag: () => false,\n};\n\nconst TREE2D_TAGS =\n    \"container,rectangle,picture,text,paragraph,styled-rectangle,drawing,texture,svg,grayscale,rounded,shader,box-blur\";\n\nexport const isTree2dTag = makeMap(TREE2D_TAGS);\n","// Make a map and return a function for checking if a key\n// is in that map.\nexport function makeMap(str: string, expectsLowerCase?: boolean): (key: string) => boolean {\n    const map: Record<string, boolean> = Object.create(null);\n    const list: Array<string> = str.split(\",\");\n    for (let i = 0; i < list.length; i++) {\n        map[list[i]] = true;\n    }\n    return expectsLowerCase ? (val) => !!map[val.toLowerCase()] : (val) => !!map[val];\n}\n","import { types } from \"./nodes/types\";\nimport { Base } from \"./nodes/Base\";\nimport { Comment } from \"./nodes/Comment\";\nimport { RendererOptions } from \"@vue/runtime-core\";\nimport { TextNode } from \"./nodes/TextNode\";\nimport { VugelStage } from \"../wrapper\";\n\nexport const nodeOps = (stage: VugelStage): Omit<RendererOptions<Base, Base>, \"patchProp\"> => ({\n    insert: (child, parent, anchor) => {\n        if (anchor != null) {\n            parent.insertBefore(child, anchor);\n        } else {\n            parent.appendChild(child);\n        }\n    },\n\n    remove: (child) => {\n        const parent = child.parent;\n        if (parent != null) {\n            parent.removeChild(child);\n        }\n    },\n\n    createElement: (tag: keyof typeof types, isSVG) => {\n        const type = types[tag];\n        return new type(stage);\n    },\n\n    createText: (text) => {\n        return new TextNode(text);\n    },\n\n    createComment: (text) => {\n        return new Comment(text);\n    },\n\n    setText: (node, text) => {},\n\n    setElementText: (node, text) => {\n        node.setElementText(text);\n    },\n\n    parentNode: (node) => (node.parent ? node.parent : null),\n\n    nextSibling: (node) => node.nextSibling,\n\n    querySelector: (selector) => null,\n\n    setScopeId(el, id) {\n        if (el.element) {\n            el.element.ref = id;\n        }\n    },\n});\n","import { Picture } from \"./textures\";\nimport { Rectangle } from \"./textures\";\nimport { TextTexture } from \"./textures\";\nimport { Base } from \"./Base\";\nimport { Paragraph } from \"./Paragraph\";\nimport { Container } from \"./Container\";\nimport { StyledRectangle } from \"./textures\";\nimport { Drawing } from \"./textures\";\nimport { Texture } from \"./textures\";\nimport { Svg } from \"./textures\";\nimport { Grayscale } from \"./effects\";\nimport { Rounded } from \"./effects\";\nimport { Shader } from \"./effects\";\nimport { BoxBlur } from \"./effects\";\nimport { VugelStage } from \"../../wrapper\";\n\nexport const types: Record<string, new (stage: VugelStage) => Base> = {\n    container: Container,\n\n    // textures\n    picture: Picture,\n    rectangle: Rectangle,\n    text: TextTexture,\n    \"styled-rectangle\": StyledRectangle,\n    drawing: Drawing,\n    texture: Texture,\n    svg: Svg,\n\n    // effects\n    grayscale: Grayscale,\n    rounded: Rounded,\n    \"box-blur\": BoxBlur,\n    shader: Shader,\n\n    // advanced\n    paragraph: Paragraph,\n} as const;\n","import { Element } from \"tree2d\";\nimport { DrawingFunction, DrawingTexture } from \"tree2d\";\nimport { DynamicSizeTexture } from \"./DynamicSizeTexture\";\nimport { VugelStage } from \"../../../wrapper\";\n\nexport { DrawingFunction };\n\nexport class Drawing extends DynamicSizeTexture {\n    private drawingTexture = new DrawingTexture(this.stage);\n\n    constructor(stage: VugelStage) {\n        super(stage);\n        this.textureElement.texture = this.drawingTexture;\n    }\n\n    set onDraw(f: DrawingFunction) {\n        this.drawingTexture.drawingFunction = f;\n    }\n\n    protected handleResize(element: Element, w: number, h: number) {\n        this.drawingTexture.canvasWidth = w;\n        this.drawingTexture.canvasHeight = h;\n    }\n\n    update() {\n        this.drawingTexture._changed();\n    }\n}\n","import { C2dShader } from \"./C2dShader\";\nimport { C2dDefaultShader } from \"./shaders/C2dDefaultShader\";\nimport { C2dGrayscaleShader } from \"./shaders/C2dGrayscaleShader\";\nimport { C2dBlurShader } from \"./shaders/C2dBlurShader\";\n\nexport { C2dShader, C2dDefaultShader, C2dGrayscaleShader, C2dBlurShader };\n","/**\n * Base functionality for shader setup/destroy.\n */\nimport { GLFunction } from \"./WebGLShader\";\n\nexport class WebGLShaderProgram {\n    private _program?: WebGLProgram = undefined;\n    private _uniformLocations: Map<string, WebGLUniformLocation> = new Map();\n    private _attributeLocations: Map<string, GLint> = new Map();\n    private readonly _currentUniformValues: { [key: string]: any } = {};\n\n    constructor(\n        public gl: WebGLRenderingContext,\n        public vertexShaderSource: string,\n        public fragmentShaderSource: string,\n    ) {}\n\n    compile() {\n        if (this._program) return;\n\n        const gl = this.gl;\n\n        this._program = gl.createProgram()!;\n\n        const glVertShader = this._glCompile(gl.VERTEX_SHADER, this.vertexShaderSource);\n        const glFragShader = this._glCompile(gl.FRAGMENT_SHADER, this.fragmentShaderSource);\n\n        gl.attachShader(this._program, glVertShader!);\n        gl.attachShader(this._program, glFragShader!);\n        gl.linkProgram(this._program);\n\n        // if linking fails, then log and cleanup\n        if (!gl.getProgramParameter(this._program, gl.LINK_STATUS)) {\n            console.error(\"Error: Could not initialize shader.\");\n            console.error(\"gl.VALIDATE_STATUS\", gl.getProgramParameter(this._program, gl.VALIDATE_STATUS));\n            console.error(\"gl.getError()\", gl.getError());\n\n            // if there is a program info log, log it\n            if (gl.getProgramInfoLog(this._program) !== \"\") {\n                console.warn(\"Warning: gl.getProgramInfoLog()\", gl.getProgramInfoLog(this._program));\n            }\n\n            gl.deleteProgram(this._program);\n            this._program = undefined;\n        }\n\n        // clean up some shaders\n        gl.deleteShader(glVertShader);\n        gl.deleteShader(glFragShader);\n    }\n\n    _glCompile(type: GLenum, src: string) {\n        const shader = this.gl.createShader(type);\n\n        this.gl.shaderSource(shader!, src);\n        this.gl.compileShader(shader!);\n\n        if (!this.gl.getShaderParameter(shader!, this.gl.COMPILE_STATUS)) {\n            console.log(\n                this.constructor.name,\n                \"Type: \" + (type === this.gl.VERTEX_SHADER ? \"vertex shader\" : \"fragment shader\"),\n            );\n            console.log(this.gl.getShaderInfoLog(shader!));\n            let idx = 0;\n            console.log(\n                \"========== source ==========\\n\" +\n                    src\n                        .split(\"\\n\")\n                        .map((line) => \"\" + ++idx + \": \" + line)\n                        .join(\"\\n\"),\n            );\n            return null;\n        }\n\n        return shader;\n    }\n\n    getUniformLocation(name: string) {\n        let location = this._uniformLocations.get(name);\n        if (location === undefined) {\n            location = this.gl.getUniformLocation(this._program!, name)!;\n            this._uniformLocations.set(name, location!);\n        }\n\n        return location;\n    }\n\n    getAttribLocation(name: string) {\n        let location = this._attributeLocations.get(name);\n        if (location === undefined) {\n            location = this.gl.getAttribLocation(this._program!, name);\n            this._attributeLocations.set(name, location!);\n        }\n\n        return location;\n    }\n\n    destroy() {\n        if (this._program) {\n            this.gl.deleteProgram(this._program);\n            this._program = undefined;\n        }\n    }\n\n    get glProgram() {\n        return this._program;\n    }\n\n    get compiled() {\n        return !!this._program;\n    }\n\n    private static _valueEquals<T extends any>(v1: T, v2: T) {\n        // Uniform value is either a typed array or a numeric value.\n        if (v1.length && v2.length) {\n            for (let i = 0, n = v1.length; i < n; i++) {\n                if (v1[i] !== v2[i]) return false;\n            }\n            return true;\n        } else {\n            return v1 === v2;\n        }\n    }\n\n    private static _valueClone(v: any) {\n        if (v.length) {\n            return v.slice(0);\n        } else {\n            return v;\n        }\n    }\n\n    setUniformValue(name: string, value: any, glFunction: GLFunction) {\n        const v = this._currentUniformValues[name];\n        if (v === undefined || !WebGLShaderProgram._valueEquals(v, value)) {\n            const clonedValue = WebGLShaderProgram._valueClone(value);\n            this._currentUniformValues[name] = clonedValue;\n\n            const loc = this.getUniformLocation(name);\n            if (loc) {\n                const isMatrix =\n                    glFunction === this.gl.uniformMatrix2fv ||\n                    glFunction === this.gl.uniformMatrix3fv ||\n                    glFunction === this.gl.uniformMatrix4fv;\n                if (isMatrix) {\n                    glFunction.call(this.gl, loc, false, clonedValue);\n                } else {\n                    glFunction.call(this.gl, loc, clonedValue);\n                }\n            }\n        }\n    }\n}\n","import { C2dDefaultShader } from \"./C2dDefaultShader\";\n\nexport class C2dBlurShader extends C2dDefaultShader {\n    private _kernelRadius: number = 1;\n\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    set kernelRadius(v) {\n        this._kernelRadius = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return this._kernelRadius === 0;\n    }\n\n    _beforeDrawEl(info: any) {\n        info.target.context.filter = \"blur(\" + this._kernelRadius + \"px)\";\n    }\n\n    _afterDrawEl(info: any) {\n        info.target.context.filter = \"none\";\n    }\n}\n","export { WebGLShader } from \"./WebGLShader\";\nexport { WebGLDefaultShader } from \"./shaders/WebGLDefaultShader\";\nexport { WebGLGrayscaleShader } from \"./shaders/WebGLGrayscaleShader\";\nexport { WebGLBoxBlurShader } from \"./shaders/WebGLBoxBlurShader\";\nexport { WebGLDitheringShader } from \"./shaders/WebGLDitheringShader\";\nexport { WebGLCircularPushShader } from \"./shaders/WebGLCircularPushShader\";\nexport { WebGLInversionShader } from \"./shaders/WebGLInversionShader\";\nexport { WebGLLinearBlurShader } from \"./shaders/WebGLLinearBlurShader\";\nexport { WebGLOutlineShader } from \"./shaders/WebGLOutlineShader\";\nexport { WebGLPixelateShader } from \"./shaders/WebGLPixelateShader\";\nexport { WebGLRadialFilterShader } from \"./shaders/WebGLRadialFilterShader\";\nexport { WebGLRoundedRectangleShader } from \"./shaders/WebGLRoundedRectangleShader\";\nexport { WebGLRadialGradientShader } from \"./shaders/WebGLRadialGradientShader\";\nexport { WebGLLight3dShader } from \"./shaders/WebGLLight3dShader\";\n","import { WebGLDefaultShader } from \"./WebGLDefaultShader\";\nimport { WebGLCoreQuadOperation } from \"../WebGLCoreQuadOperation\";\n\n/**\n * 4x4 box blur shader which works in conjunction with a 50% rescale.\n */\nexport class WebGLBoxBlurShader extends WebGLDefaultShader {\n    setupUniforms(operation: WebGLCoreQuadOperation) {\n        super.setupUniforms(operation);\n        const dx = 1.0 / operation.getTextureWidth(0);\n        const dy = 1.0 / operation.getTextureHeight(0);\n        this._setUniform(\"stepTextureCoord\", new Float32Array([dx, dy]), this.gl.uniform2fv);\n    }\n}\n\nWebGLBoxBlurShader.prototype.vertexShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    uniform vec2 stepTextureCoord;\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec4 vColor;\n    varying vec2 vTextureCoordUl;\n    varying vec2 vTextureCoordUr;\n    varying vec2 vTextureCoordBl;\n    varying vec2 vTextureCoordBr;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoordUl = aTextureCoord - stepTextureCoord;\n        vTextureCoordBr = aTextureCoord + stepTextureCoord;\n        vTextureCoordUr = vec2(vTextureCoordBr.x, vTextureCoordUl.y);\n        vTextureCoordBl = vec2(vTextureCoordUl.x, vTextureCoordBr.y);\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nWebGLBoxBlurShader.prototype.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoordUl;\n    varying vec2 vTextureCoordUr;\n    varying vec2 vTextureCoordBl;\n    varying vec2 vTextureCoordBr;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec4 color = 0.25 * (texture2D(uSampler, vTextureCoordUl) + texture2D(uSampler, vTextureCoordUr) + texture2D(uSampler, vTextureCoordBl) + texture2D(uSampler, vTextureCoordBr));\n        gl_FragColor = color * vColor;\n    }\n`;\n","import { NoiseTexture } from \"../../../textures/NoiseTexture\";\nimport { WebGLDefaultShader } from \"./WebGLDefaultShader\";\nimport { WebGLCoreQuadOperation } from \"../WebGLCoreQuadOperation\";\n\n/**\n * This shader can be used to fix a problem that is known as 'gradient banding'.\n */\nexport class WebGLDitheringShader extends WebGLDefaultShader {\n    private _noiseTexture: NoiseTexture = new NoiseTexture(this.context.stage);\n    private _graining: number = 1 / 256;\n    private _random: boolean = false;\n\n    set graining(v: number) {\n        this._graining = v;\n        this.redraw();\n    }\n\n    get graining() {\n        return this._graining;\n    }\n\n    set random(v: boolean) {\n        this._random = v;\n        this.redraw();\n    }\n\n    get random() {\n        return this._random;\n    }\n\n    setExtraAttribsInBuffer(operation: WebGLCoreQuadOperation) {\n        // Make sure that the noise texture is uploaded to the GPU.\n        this._noiseTexture.load();\n\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        const floats = operation.quadList.floats;\n\n        const length = operation.length;\n\n        for (let i = 0; i < length; i++) {\n            // Calculate noise texture coordinates so that it spans the full element.\n            let brx = operation.getElementWidth(i) / this._noiseTexture.getRenderWidth();\n            let bry = operation.getElementHeight(i) / this._noiseTexture.getRenderHeight();\n\n            let ulx = 0;\n            let uly = 0;\n            if (this._random) {\n                ulx = Math.random();\n                uly = Math.random();\n\n                brx += ulx;\n                bry += uly;\n\n                if (Math.random() < 0.5) {\n                    // Flip for more randomness.\n                    const t = ulx;\n                    ulx = brx;\n                    brx = t;\n                }\n\n                if (Math.random() < 0.5) {\n                    // Flip for more randomness.\n                    const t = uly;\n                    uly = bry;\n                    bry = t;\n                }\n            }\n\n            // Specify all corner points.\n            floats[offset] = ulx;\n            floats[offset + 1] = uly;\n\n            floats[offset + 2] = brx;\n            floats[offset + 3] = uly;\n\n            floats[offset + 4] = brx;\n            floats[offset + 5] = bry;\n\n            floats[offset + 6] = ulx;\n            floats[offset + 7] = bry;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation: WebGLCoreQuadOperation) {\n        const gl = this.gl;\n        gl.vertexAttribPointer(\n            this._attrib(\"aNoiseTextureCoord\"),\n            2,\n            gl.FLOAT,\n            false,\n            8,\n            this.getVertexAttribPointerOffset(operation),\n        );\n\n        const glTexture = this._noiseTexture.source!.nativeTexture!;\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n    setupUniforms(operation: WebGLCoreQuadOperation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"uNoiseSampler\", 1, this.gl.uniform1i);\n        this._setUniform(\"graining\", 2 * this._graining, this.gl.uniform1f);\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        const gl = this.gl;\n        gl.enableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        const gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\n    }\n\n    useDefault() {\n        return this._graining === 0;\n    }\n\n    afterDraw(operation: WebGLCoreQuadOperation) {\n        if (this._random) {\n            this.redraw();\n        }\n    }\n}\n\nWebGLDitheringShader.prototype.vertexShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec2 aNoiseTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec2 vNoiseTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vNoiseTextureCoord = aNoiseTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nWebGLDitheringShader.prototype.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec2 vNoiseTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform sampler2D uNoiseSampler;\n    uniform float graining;\n    void main(void){\n        vec4 noise = texture2D(uNoiseSampler, vNoiseTextureCoord);\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        gl_FragColor = (color * vColor) + graining * (noise.r - 0.5);\n    }\n`;\n","import { WebGLDefaultShader } from \"./WebGLDefaultShader\";\nimport { CoreContext } from \"../../../tree/core/CoreContext\";\nimport { WebGLCoreQuadOperation } from \"../WebGLCoreQuadOperation\";\n\nexport class WebGLCircularPushShader extends WebGLDefaultShader {\n    private _inputValue: number = 0;\n\n    private _maxDerivative: number = 0.01;\n    private _normalizedValue: number = 0;\n\n    // The offset between buckets. A value between 0 and 1.\n    private _offset: number = 0;\n\n    private _amount: number = 0.1;\n    private _aspectRatio: number = 1;\n\n    private _offsetX: number = 0;\n    private _offsetY: number = 0;\n\n    private _valuesTexture?: WebGLTexture = undefined;\n    private _values: Uint8Array = new Uint8Array([]);\n\n    private _buckets: number = 0;\n\n    constructor(context: CoreContext) {\n        super(context);\n\n        this.buckets = 100;\n    }\n\n    get aspectRatio() {\n        return this._aspectRatio;\n    }\n\n    set aspectRatio(v) {\n        this._aspectRatio = v;\n        this.redraw();\n    }\n\n    get offsetX() {\n        return this._offsetX;\n    }\n\n    set offsetX(v) {\n        this._offsetX = v;\n        this.redraw();\n    }\n\n    get offsetY() {\n        return this._offsetY;\n    }\n\n    set offsetY(v) {\n        this._offsetY = v;\n        this.redraw();\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    set inputValue(v) {\n        this._inputValue = v;\n    }\n\n    get inputValue() {\n        return this._inputValue;\n    }\n\n    set maxDerivative(v) {\n        this._maxDerivative = v;\n    }\n\n    get maxDerivative() {\n        return this._maxDerivative;\n    }\n\n    set buckets(v: number) {\n        if (v > 100) {\n            console.warn(\"CircularPushShader: supports max 100 buckets\");\n            v = 100;\n        }\n\n        // This should be set before starting.\n        this._buckets = v;\n\n        // Init values array in the correct length.\n        this._values = new Uint8Array(this._getValues(v));\n\n        this.redraw();\n    }\n\n    get buckets() {\n        return this._buckets;\n    }\n\n    _getValues(n: number) {\n        const v = [];\n        for (let i = 0; i < n; i++) {\n            v.push(this._inputValue);\n        }\n        return v;\n    }\n\n    /**\n     * Progresses the shader with the specified (fractional) number of buckets.\n     * @param o - A number from 0 to 1 (1 = all buckets).\n     */\n    progress(o: number) {\n        this._offset += o * this._buckets;\n        const full = Math.floor(this._offset);\n        this._offset -= full;\n        this._shiftBuckets(full);\n        this.redraw();\n    }\n\n    private _shiftBuckets(n: number) {\n        for (let i = this._buckets - 1; i >= 0; i--) {\n            const targetIndex = i - n;\n            if (targetIndex < 0) {\n                this._normalizedValue = Math.min(\n                    this._normalizedValue + this._maxDerivative,\n                    Math.max(this._normalizedValue - this._maxDerivative, this._inputValue),\n                );\n                this._values[i] = 255 * this._normalizedValue;\n            } else {\n                this._values[i] = this._values[targetIndex];\n            }\n        }\n    }\n\n    set offset(v: number) {\n        this._offset = v;\n        this.redraw();\n    }\n\n    get offset() {\n        return this._offset;\n    }\n\n    setupUniforms(operation: WebGLCoreQuadOperation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"aspectRatio\", this._aspectRatio, this.gl.uniform1f);\n        this._setUniform(\"offsetX\", this._offsetX, this.gl.uniform1f);\n        this._setUniform(\"offsetY\", this._offsetY, this.gl.uniform1f);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n        this._setUniform(\"offset\", this._offset, this.gl.uniform1f);\n        this._setUniform(\"buckets\", this._buckets, this.gl.uniform1f);\n        this._setUniform(\"uValueSampler\", 1, this.gl.uniform1i);\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    beforeDraw(operation: WebGLCoreQuadOperation) {\n        const gl = this.gl;\n        gl.activeTexture(gl.TEXTURE1);\n        if (!this._valuesTexture) {\n            this._valuesTexture = gl.createTexture()!!;\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        } else {\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\n        }\n\n        // Upload new values.\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.ALPHA, this._buckets, 1, 0, gl.ALPHA, gl.UNSIGNED_BYTE, this._values);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n\n    cleanup() {\n        if (this._valuesTexture) {\n            this.gl.deleteTexture(this._valuesTexture);\n        }\n    }\n}\n\nWebGLCircularPushShader.prototype.vertexShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    uniform float offsetX;\n    uniform float offsetY;\n    uniform float aspectRatio;\n    varying vec2 vTextureCoord;\n    varying vec2 vPos;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vPos = vTextureCoord * 2.0 - 1.0;\n        vPos.y = vPos.y * aspectRatio;\n        vPos.y = vPos.y + offsetY;\n        vPos.x = vPos.x + offsetX;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nWebGLCircularPushShader.prototype.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vPos;\n    uniform float amount;\n    uniform float offset;\n    uniform float values[100];\n    uniform float buckets;\n    uniform sampler2D uSampler;\n    uniform sampler2D uValueSampler;\n    void main(void){\n        float l = length(vPos);\n        float m = (l * buckets * 0.678 - offset) / buckets;\n        float f = texture2D(uValueSampler, vec2(m, 0.0)).a * amount;\n        vec2 unit = vPos / l;\n        gl_FragColor = texture2D(uSampler, vTextureCoord - f * unit) * vColor;\n    }\n`;\n","import { WebGLDefaultShader } from \"./WebGLDefaultShader\";\nimport { CoreContext } from \"../../../tree/core/CoreContext\";\nimport { WebGLCoreQuadOperation } from \"../WebGLCoreQuadOperation\";\n\nexport class WebGLInversionShader extends WebGLDefaultShader {\n    private _amount: number = 1;\n\n    constructor(context: CoreContext) {\n        super(context);\n    }\n\n    set amount(v: number) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    setupUniforms(operation: WebGLCoreQuadOperation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n    }\n}\n\nWebGLInversionShader.prototype.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float amount;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        color.rgb = color.rgb * (1.0 - amount) + amount * (1.0 * color.a - color.rgb); \n        gl_FragColor = color * vColor;\n    }\n`;\n","import { WebGLDefaultShader } from \"./WebGLDefaultShader\";\nimport { CoreContext } from \"../../../tree/core/CoreContext\";\nimport { WebGLCoreQuadOperation } from \"../WebGLCoreQuadOperation\";\n\nexport class WebGLLinearBlurShader extends WebGLDefaultShader {\n    private _direction: Float32Array = new Float32Array([1, 0]);\n    private _kernelRadius: number = 1;\n\n    constructor(context: CoreContext) {\n        super(context);\n    }\n\n    get x() {\n        return this._direction[0];\n    }\n\n    set x(v) {\n        this._direction[0] = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._direction[1];\n    }\n\n    set y(v) {\n        this._direction[1] = v;\n        this.redraw();\n    }\n\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    set kernelRadius(v) {\n        this._kernelRadius = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return this._kernelRadius === 0;\n    }\n\n    setupUniforms(operation: WebGLCoreQuadOperation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"direction\", this._direction, this.gl.uniform2fv);\n        this._setUniform(\"kernelRadius\", this._kernelRadius, this.gl.uniform1i);\n\n        const w = operation.getRenderWidth();\n        const h = operation.getRenderHeight();\n        this._setUniform(\"resolution\", new Float32Array([w, h]), this.gl.uniform2fv);\n    }\n}\n\nWebGLLinearBlurShader.prototype.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    uniform vec2 resolution;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 direction;\n    uniform int kernelRadius;\n    \n    vec4 blur1(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.3333333333333333) * direction;\n        color += texture2D(image, uv) * 0.29411764705882354;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.35294117647058826;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.35294117647058826;\n        return color; \n    }\n    \n    vec4 blur2(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.3846153846) * direction;\n        vec2 off2 = vec2(3.2307692308) * direction;\n        color += texture2D(image, uv) * 0.2270270270;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.3162162162;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.3162162162;\n        color += texture2D(image, uv + (off2 / resolution)) * 0.0702702703;\n        color += texture2D(image, uv - (off2 / resolution)) * 0.0702702703;\n        return color;\n    }\n    \n    vec4 blur3(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.411764705882353) * direction;\n        vec2 off2 = vec2(3.2941176470588234) * direction;\n        vec2 off3 = vec2(5.176470588235294) * direction;\n        color += texture2D(image, uv) * 0.1964825501511404;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.2969069646728344;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.2969069646728344;\n        color += texture2D(image, uv + (off2 / resolution)) * 0.09447039785044732;\n        color += texture2D(image, uv - (off2 / resolution)) * 0.09447039785044732;\n        color += texture2D(image, uv + (off3 / resolution)) * 0.010381362401148057;\n        color += texture2D(image, uv - (off3 / resolution)) * 0.010381362401148057;\n        return color;\n    }    \n\n    void main(void){\n        if (kernelRadius == 1) {\n            gl_FragColor = blur1(uSampler, vTextureCoord, resolution, direction) * vColor;\n        } else if (kernelRadius == 2) {\n            gl_FragColor = blur2(uSampler, vTextureCoord, resolution, direction) * vColor;\n        } else {\n            gl_FragColor = blur3(uSampler, vTextureCoord, resolution, direction) * vColor;\n        }\n    }\n`;\n","import { ColorUtils } from \"../../../tree/ColorUtils\";\nimport { WebGLDefaultShader } from \"./WebGLDefaultShader\";\nimport { CoreContext } from \"../../../tree/core/CoreContext\";\nimport { WebGLCoreQuadOperation } from \"../WebGLCoreQuadOperation\";\n\nexport class WebGLOutlineShader extends WebGLDefaultShader {\n    private _width: number = 5;\n    private _col: number = 0xffffffff;\n    private _color: number[] = [1, 1, 1, 1];\n\n    constructor(context: CoreContext) {\n        super(context);\n    }\n\n    set width(v: number) {\n        this._width = v;\n        this.redraw();\n    }\n\n    get width() {\n        return this._width;\n    }\n\n    get color() {\n        return this._col;\n    }\n\n    set color(v) {\n        if (this._col !== v) {\n            const col = ColorUtils.getRgbaComponentsNormalized(v);\n            col[0] = col[0] * col[3];\n            col[1] = col[1] * col[3];\n            col[2] = col[2] * col[3];\n\n            this._color = col;\n\n            this.redraw();\n\n            this._col = v;\n        }\n    }\n\n    useDefault() {\n        return this._width === 0 || this._color[3] === 0;\n    }\n\n    setupUniforms(operation: WebGLCoreQuadOperation) {\n        super.setupUniforms(operation);\n        const gl = this.gl;\n        this._setUniform(\"color\", new Float32Array(this._color), gl.uniform4fv);\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        this.gl.enableVertexAttribArray(this._attrib(\"aCorner\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        this.gl.disableVertexAttribArray(this._attrib(\"aCorner\"));\n    }\n\n    setExtraAttribsInBuffer(operation: WebGLCoreQuadOperation) {\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        const floats = operation.quadList.floats;\n\n        const length = operation.length;\n\n        for (let i = 0; i < length; i++) {\n            const elementCore = operation.getElementCore(i);\n\n            // We are setting attributes such that if the value is < 0 or > 1, a border should be drawn.\n            const ddw = this._width / elementCore.getLayoutW();\n            const dw = ddw / (1 - 2 * ddw);\n            const ddh = this._width / elementCore.getLayoutH();\n            const dh = ddh / (1 - 2 * ddh);\n\n            // Specify all corner points.\n            floats[offset] = -dw;\n            floats[offset + 1] = -dh;\n\n            floats[offset + 2] = 1 + dw;\n            floats[offset + 3] = -dh;\n\n            floats[offset + 4] = 1 + dw;\n            floats[offset + 5] = 1 + dh;\n\n            floats[offset + 6] = -dw;\n            floats[offset + 7] = 1 + dh;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation: WebGLCoreQuadOperation) {\n        const gl = this.gl;\n        gl.vertexAttribPointer(\n            this._attrib(\"aCorner\"),\n            2,\n            gl.FLOAT,\n            false,\n            8,\n            this.getVertexAttribPointerOffset(operation),\n        );\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n}\n\nWebGLOutlineShader.prototype.vertexShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    attribute vec2 aCorner;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec2 vCorner;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vCorner = aCorner;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nWebGLOutlineShader.prototype.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vCorner;\n    uniform vec4 color;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec2 m = min(vCorner, 1.0 - vCorner);\n        float value = step(0.0, min(m.x, m.y));\n        gl_FragColor = mix(color, texture2D(uSampler, vTextureCoord) * vColor, value);\n    }\n`;\n","import { WebGLDefaultShader } from \"./WebGLDefaultShader\";\nimport { CoreContext } from \"../../../tree/core/CoreContext\";\nimport { WebGLCoreQuadOperation } from \"../WebGLCoreQuadOperation\";\n\nexport class WebGLPixelateShader extends WebGLDefaultShader {\n    private _size = new Float32Array([4, 4]);\n\n    constructor(context: CoreContext) {\n        super(context);\n    }\n\n    get x() {\n        return this._size[0];\n    }\n\n    set x(v) {\n        this._size[0] = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._size[1];\n    }\n\n    set y(v) {\n        this._size[1] = v;\n        this.redraw();\n    }\n\n    get size() {\n        return this._size[0];\n    }\n\n    set size(v) {\n        this._size[0] = v;\n        this._size[1] = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return this._size[0] === 0 && this._size[1] === 0;\n    }\n\n    setupUniforms(operation: WebGLCoreQuadOperation) {\n        super.setupUniforms(operation);\n        const gl = this.gl;\n        this._setUniform(\"size\", new Float32Array(this._size), gl.uniform2fv);\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        this.gl.enableVertexAttribArray(this._attrib(\"aTextureRes\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        this.gl.disableVertexAttribArray(this._attrib(\"aTextureRes\"));\n    }\n\n    setExtraAttribsInBuffer(operation: WebGLCoreQuadOperation) {\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        const floats = operation.quadList.floats;\n\n        const length = operation.length;\n        for (let i = 0; i < length; i++) {\n            const w = operation.quadList.getTextureWidth(operation.index + i);\n            const h = operation.quadList.getTextureHeight(operation.index + i);\n\n            floats[offset] = w;\n            floats[offset + 1] = h;\n            floats[offset + 2] = w;\n            floats[offset + 3] = h;\n            floats[offset + 4] = w;\n            floats[offset + 5] = h;\n            floats[offset + 6] = w;\n            floats[offset + 7] = h;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation: WebGLCoreQuadOperation) {\n        const gl = this.gl;\n        gl.vertexAttribPointer(\n            this._attrib(\"aTextureRes\"),\n            2,\n            gl.FLOAT,\n            false,\n            this.getExtraAttribBytesPerVertex(),\n            this.getVertexAttribPointerOffset(operation),\n        );\n    }\n}\n\nWebGLPixelateShader.prototype.vertexShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    attribute vec2 aTextureRes;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vTextureRes;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        vTextureRes = aTextureRes;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nWebGLPixelateShader.prototype.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vTextureRes;\n\n    uniform vec2 size;\n    uniform sampler2D uSampler;\n    \n    vec2 mapCoord( vec2 coord )\n    {\n        coord *= vTextureRes.xy;\n        return coord;\n    }\n    \n    vec2 unmapCoord( vec2 coord )\n    {\n        coord /= vTextureRes.xy;\n        return coord;\n    }\n    \n    vec2 pixelate(vec2 coord, vec2 size)\n    {\n        return floor( coord / size ) * size;\n    }\n    \n    void main(void)\n    {\n        vec2 coord = mapCoord(vTextureCoord);\n        coord = pixelate(coord, size);\n        coord = unmapCoord(coord);\n        gl_FragColor = texture2D(uSampler, coord) * vColor;\n    }\n`;\n","import { WebGLDefaultShader } from \"./WebGLDefaultShader\";\nimport { CoreContext } from \"../../../tree/core/CoreContext\";\nimport { WebGLCoreQuadOperation } from \"../WebGLCoreQuadOperation\";\n\nexport class WebGLRadialFilterShader extends WebGLDefaultShader {\n    private _radius: number = 0;\n    private _cutoff: number = 1;\n\n    constructor(context: CoreContext) {\n        super(context);\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set cutoff(v) {\n        this._cutoff = v;\n        this.redraw();\n    }\n\n    get cutoff() {\n        return this._cutoff;\n    }\n\n    useDefault() {\n        return this._radius === 0;\n    }\n\n    setupUniforms(operation: WebGLCoreQuadOperation) {\n        super.setupUniforms(operation);\n        // We substract half a pixel to get a better cutoff effect.\n        this._setUniform(\"radius\", (2 * (this._radius - 0.5)) / operation.getRenderWidth(), this.gl.uniform1f);\n        this._setUniform(\"cutoff\", (0.5 * operation.getRenderWidth()) / this._cutoff, this.gl.uniform1f);\n    }\n}\n\nWebGLRadialFilterShader.prototype.vertexShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 pos;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n        pos = gl_Position.xy;\n    }\n`;\n\nWebGLRadialFilterShader.prototype.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec2 pos;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float radius;\n    uniform float cutoff;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        float f = max(0.0, min(1.0, 1.0 - (length(pos) - radius) * cutoff));\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor * f;\n    }\n`;\n","import { WebGLDefaultShader } from \"./WebGLDefaultShader\";\nimport { CoreContext } from \"../../../tree/core/CoreContext\";\nimport { WebGLCoreQuadOperation } from \"../WebGLCoreQuadOperation\";\n\nexport class WebGLRoundedRectangleShader extends WebGLDefaultShader {\n    private _radius: number = 0;\n\n    constructor(context: CoreContext) {\n        super(context);\n    }\n\n    set radius(v: number) {\n        if (v < 1) {\n            v = 1;\n        }\n        this._radius = v;\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    setupUniforms(operation: WebGLCoreQuadOperation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n\n        const pixelRatio = this.context.stage.getPixelRatio();\n        this._setUniform(\"radius\", (this._radius + 0.5) * pixelRatio, this.gl.uniform1f);\n        this._setUniform(\n            \"resolution\",\n            new Float32Array([owner.getLayoutW() * pixelRatio, owner.getLayoutH() * pixelRatio]),\n            this.gl.uniform2fv,\n        );\n    }\n}\n\nWebGLRoundedRectangleShader.prototype.vertexShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    \n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    \n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nWebGLRoundedRectangleShader.prototype.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    #define PI 3.14159265359\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform float radius;\n    float roundBox(vec2 p, vec2 b, float r) {\n        float d = length(max(abs(p)-b+r, 0.1))-r;\n        return smoothstep(0.0, 1.0, d);\n    }\n    void main() {\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        vec2 halfRes = 0.5 * resolution.xy;\n        float b = roundBox(vTextureCoord.xy * resolution - halfRes, halfRes, radius);\n        gl_FragColor = mix(color, vec4(0.0), b);\n    }\n`;\n","import { WebGLDefaultShader } from \"./WebGLDefaultShader\";\nimport { ColorUtils } from \"../../../tree/ColorUtils\";\nimport { WebGLCoreQuadOperation } from \"../WebGLCoreQuadOperation\";\n\nexport class WebGLRadialGradientShader extends WebGLDefaultShader {\n    private _x: number = 0;\n    private _y: number = 0;\n\n    private _radiusX: number = 100;\n    private _radiusY: number = 100;\n\n    private _color: number = 0xffffffff;\n    private _rawColor: Float32Array = new Float32Array([255, 255, 255, 255]);\n\n    set x(v: number) {\n        this._x = v;\n        this.redraw();\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set y(v: number) {\n        this._y = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set radiusX(v) {\n        this._radiusX = v;\n        this.redraw();\n    }\n\n    get radiusX() {\n        return this._radiusX;\n    }\n\n    set radiusY(v) {\n        this._radiusY = v;\n        this.redraw();\n    }\n\n    get radiusY() {\n        return this._radiusY;\n    }\n\n    set radius(v: number) {\n        this.radiusX = v;\n        this.radiusY = v;\n    }\n\n    get radius() {\n        return this.radiusX;\n    }\n\n    get color() {\n        return this._color;\n    }\n\n    set color(v: number) {\n        if (this._color !== v) {\n            const col = ColorUtils.getRgbaComponentsNormalized(v);\n            col[0] = col[0] * col[3];\n            col[1] = col[1] * col[3];\n            col[2] = col[2] * col[3];\n\n            this._rawColor = new Float32Array(col);\n\n            this.redraw();\n\n            this._color = v;\n        }\n    }\n\n    setupUniforms(operation: WebGLCoreQuadOperation) {\n        super.setupUniforms(operation);\n        // We substract half a pixel to get a better cutoff effect.\n        const rtc = operation.getNormalRenderTextureCoords(this._x, this._y);\n        this._setUniform(\"center\", new Float32Array(rtc), this.gl.uniform2fv);\n\n        this._setUniform(\"radius\", (2 * this._radiusX) / operation.getRenderWidth(), this.gl.uniform1f);\n\n        // Radial gradient shader is expected to be used on a single element. That element's alpha is used.\n        this._setUniform(\"alpha\", operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n\n        this._setUniform(\"color\", this._rawColor, this.gl.uniform4fv);\n        this._setUniform(\n            \"aspectRatio\",\n            ((this._radiusX / this._radiusY) * operation.getRenderHeight()) / operation.getRenderWidth(),\n            this.gl.uniform1f,\n        );\n    }\n}\n\nWebGLRadialGradientShader.prototype.vertexShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    uniform vec2 center;\n    uniform float aspectRatio;\n    varying vec2 pos;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n        pos = gl_Position.xy - center;\n        pos.y = pos.y * aspectRatio;\n    }\n`;\n\nWebGLRadialGradientShader.prototype.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 pos;\n    uniform sampler2D uSampler;\n    uniform float radius;\n    uniform vec4 color;\n    uniform float alpha;\n    void main(void){\n        float dist = length(pos);\n        gl_FragColor = mix(color * alpha, texture2D(uSampler, vTextureCoord) * vColor, min(1.0, dist / radius));\n    }\n`;\n","import { WebGLDefaultShader } from \"./WebGLDefaultShader\";\nimport { CoreContext } from \"../../../tree/core/CoreContext\";\nimport { WebGLCoreQuadOperation } from \"../WebGLCoreQuadOperation\";\n\nexport class WebGLLight3dShader extends WebGLDefaultShader {\n    private _strength: number = 0.5;\n    private _ambient: number = 0.5;\n    private _fudge: number = 0.4;\n\n    private _rx: number = 0;\n    private _ry: number = 0;\n\n    private _z: number = 0;\n\n    private _pivotX: number = NaN;\n    private _pivotY: number = NaN;\n    private _pivotZ: number = NaN;\n\n    private _lightY: number = 0;\n    private _lightZ: number = 0;\n\n    constructor(context: CoreContext) {\n        super(context);\n    }\n\n    setupUniforms(operation: WebGLCoreQuadOperation) {\n        super.setupUniforms(operation);\n\n        const vr = operation.shaderOwner;\n        const element = vr.element;\n\n        const pivotX = isNaN(this._pivotX) ? element.pivotX * vr.getLayoutW() : this._pivotX;\n        const pivotY = isNaN(this._pivotY) ? element.pivotY * vr.getLayoutH() : this._pivotY;\n        const coords = vr.getRenderTextureCoords(pivotX, pivotY);\n\n        // Counter normal rotation.\n\n        const rz = -Math.atan2(vr.renderContext.tc, vr.renderContext.ta);\n\n        const gl = this.gl;\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], this._pivotZ]), gl.uniform3fv);\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\n\n        this._setUniform(\"z\", this._z, gl.uniform1f);\n        this._setUniform(\"lightY\", this.lightY, gl.uniform1f);\n        this._setUniform(\"lightZ\", this.lightZ, gl.uniform1f);\n        this._setUniform(\"strength\", this._strength, gl.uniform1f);\n        this._setUniform(\"ambient\", this._ambient, gl.uniform1f);\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\n    }\n\n    set strength(v) {\n        this._strength = v;\n        this.redraw();\n    }\n\n    get strength() {\n        return this._strength;\n    }\n\n    set ambient(v) {\n        this._ambient = v;\n        this.redraw();\n    }\n\n    get ambient() {\n        return this._ambient;\n    }\n\n    set fudge(v) {\n        this._fudge = v;\n        this.redraw();\n    }\n\n    get fudge() {\n        return this._fudge;\n    }\n\n    get rx() {\n        return this._rx;\n    }\n\n    set rx(v) {\n        this._rx = v;\n        this.redraw();\n    }\n\n    get ry() {\n        return this._ry;\n    }\n\n    set ry(v) {\n        this._ry = v;\n        this.redraw();\n    }\n\n    get z() {\n        return this._z;\n    }\n\n    set z(v) {\n        this._z = v;\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        this._pivotX = v + 1;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        this._pivotY = v + 1;\n        this.redraw();\n    }\n\n    get lightY() {\n        return this._lightY;\n    }\n\n    set lightY(v) {\n        this._lightY = v;\n        this.redraw();\n    }\n\n    get pivotZ() {\n        return this._pivotZ;\n    }\n\n    set pivotZ(v) {\n        this._pivotZ = v;\n        this.redraw();\n    }\n\n    get lightZ() {\n        return this._lightZ;\n    }\n\n    set lightZ(v) {\n        this._lightZ = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return this._rx === 0 && this._ry === 0 && this._z === 0 && this._strength === 0 && this._ambient === 1;\n    }\n}\n\nWebGLLight3dShader.prototype.vertexShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform float fudge;\n    uniform float strength;\n    uniform float ambient;\n    uniform float z;\n    uniform float lightY;\n    uniform float lightZ;\n    uniform vec3 pivot;\n    uniform vec3 rot;\n    varying vec3 pos;\n\n    void main(void) {\n        pos = vec3(aVertexPosition.xy, z);\n        \n        pos -= pivot;\n        \n        // Undo XY rotation\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \n                           -sin(rot.z), cos(rot.z));\n        pos.xy = iRotXy * pos.xy;\n        \n        // Perform 3d rotations\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\n        gl_Position.y = pos.y;\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\n        \n        pos.x = gl_Position.x;\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\n        \n        // Redo XY rotation\n        iRotXy[0][1] = -iRotXy[0][1];\n        iRotXy[1][0] = -iRotXy[1][0];\n        pos.xy = iRotXy * pos.xy; \n\n        // Undo translate to pivot position\n        pos.xyz += pivot;\n\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\n        \n        // Set depth perspective\n        float perspective = 1.0 + fudge * pos.z;\n\n        pos.z += lightZ * projection.x;\n\n        // Map coords to gl coordinate space.\n        // Set z to 0 because we don't want to perform z-clipping\n        gl_Position = vec4(pos.xy, 0.0, perspective);\n\n        // Correct light source position.\n        pos.y += lightY * abs(projection.y);\n\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        \n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nWebGLLight3dShader.prototype.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec3 pos;\n    uniform sampler2D uSampler;\n    uniform float ambient;\n    uniform float strength;\n    void main(void){\n        vec4 rgba = texture2D(uSampler, vTextureCoord);\n        float d = length(pos);\n        float n = 1.0 / max(0.1, d);\n        rgba.rgb = rgba.rgb * (strength * n + ambient);\n        gl_FragColor = rgba * vColor;\n    }\n`;\n","export * from \"./DrawingTexture\";\nexport * from \"./HtmlTexture\";\nexport * from \"./ImageTexture\";\nexport * from \"./NoiseTexture\";\nexport * from \"./RectangleTexture\";\nexport * from \"./RoundRectTexture\";\nexport * from \"./SourceTexture\";\nexport * from \"./SvgTexture\";\n\nexport * from \"./text\";\n","import { Texture, TextureSourceLoader, TextureSourceOptions } from \"../tree/Texture\";\n\nexport type DrawingResult = {\n    permanent?: boolean;\n    renderInfo?: any;\n    texParams?: Record<GLenum, GLenum>;\n    texOptions?: {\n        format?: number;\n        internalFormat?: number;\n        type?: GLenum;\n    };\n};\n\nexport type DrawingFunctionOptions = {\n    context: CanvasRenderingContext2D;\n    w: number;\n    h: number;\n};\n\nexport type DrawingFunction = (options: DrawingFunctionOptions) => DrawingResult | Promise<DrawingResult>;\n\nexport class DrawingTexture extends Texture {\n    private _drawingFunction?: DrawingFunction = undefined;\n    private _canvasWidth: number = 0;\n    private _canvasHeight: number = 0;\n\n    set drawingFunction(f: DrawingFunction | undefined) {\n        this._drawingFunction = f;\n        this._changed();\n    }\n\n    get drawingFunction(): DrawingFunction | undefined {\n        return this._drawingFunction;\n    }\n\n    set canvasWidth(v: number) {\n        if (this._canvasWidth !== v) {\n            this._canvasWidth = v;\n            this._changed();\n        }\n    }\n\n    set canvasHeight(v: number) {\n        if (this._canvasHeight !== v) {\n            this._canvasHeight = v;\n            this._changed();\n        }\n    }\n\n    protected _getIsValid() {\n        return !!this._drawingFunction && this._canvasWidth > 0 && this._canvasHeight > 0;\n    }\n\n    protected _getSourceLoader(): TextureSourceLoader {\n        return (cb) => {\n            const canvas = this.stage.platform.getDrawingCanvas();\n            canvas.width = this._canvasWidth;\n            canvas.height = this._canvasHeight;\n            const context = canvas.getContext(\"2d\")!;\n            context.imageSmoothingEnabled = true;\n\n            let result;\n            try {\n                result = this._drawingFunction!({ context, w: this._canvasWidth, h: this._canvasHeight });\n            } catch (e) {\n                if (e instanceof Error) {\n                    cb(e);\n                } else {\n                    cb(new Error(\"Error while drawing: \" + e));\n                }\n                return;\n            }\n\n            const handleResult = (result: DrawingResult) => {\n                const textureSourceOptions = result as TextureSourceOptions;\n                textureSourceOptions.source = canvas;\n                cb(undefined, textureSourceOptions);\n            };\n\n            if (result instanceof Promise) {\n                result.then((r) => handleResult(r)).catch((e) => cb(e));\n            } else {\n                handleResult(result);\n            }\n        };\n    }\n}\n","import { Texture, TextureSourceCallback, TextureSourceLoader } from \"../tree/Texture\";\n\nexport class HtmlTexture extends Texture {\n    private _htmlElement?: HTMLElement = undefined;\n\n    private _scale = 1;\n\n    private static _preloadArea?: HTMLDivElement = undefined;\n\n    set htmlElement(v) {\n        this._htmlElement = v;\n        this._changed();\n    }\n\n    get htmlElement() {\n        return this._htmlElement;\n    }\n\n    set scale(v) {\n        this._scale = v;\n        this._changed();\n    }\n\n    get scale() {\n        return this._scale;\n    }\n\n    set html(v) {\n        if (!v) {\n            this.htmlElement = undefined;\n        } else {\n            const d = document.createElement(\"div\");\n            d.innerHTML = \"<div>\" + v + \"</div>\";\n            if (d.firstElementChild) {\n                this.htmlElement = d.firstElementChild as HTMLElement;\n            }\n        }\n    }\n\n    get html() {\n        return this._htmlElement ? this._htmlElement.innerHTML : \"\";\n    }\n\n    protected _getIsValid() {\n        return !!this.htmlElement;\n    }\n\n    protected _getLookupId() {\n        return this._scale + \":\" + this.html;\n    }\n\n    _getSourceLoader(): TextureSourceLoader {\n        const htmlElement = this._htmlElement!;\n        const scale = this._scale;\n        return (cb: TextureSourceCallback) => {\n            const html2canvas: any = (window as any).html2canvas;\n            if (!(window as any).html2canvas) {\n                return cb(new Error(\"Please include html2canvas (https://html2canvas.hertzen.com/)\"));\n            }\n\n            const area = HtmlTexture.getPreloadArea();\n            area.appendChild(htmlElement);\n\n            html2canvas(htmlElement, { backgroundColor: null, scale })\n                .then((canvas: HTMLCanvasElement) => {\n                    area.removeChild(htmlElement);\n                    if (canvas.height === 0) {\n                        return cb(new Error(\"Canvas height is 0\"));\n                    }\n                    cb(undefined, { source: canvas, width: canvas.width, height: canvas.height });\n                })\n                .catch((e: any) => {\n                    console.error(e);\n                });\n        };\n    }\n\n    static getPreloadArea() {\n        if (!this._preloadArea) {\n            // Preload area must be included in document body and must be visible to trigger html element rendering.\n            this._preloadArea = document.createElement(\"div\");\n            if (this._preloadArea.attachShadow) {\n                // Use a shadow DOM if possible to prevent styling from interfering.\n                this._preloadArea.attachShadow({ mode: \"closed\" });\n            }\n            this._preloadArea.style.opacity = \"0\";\n            this._preloadArea.style.pointerEvents = \"none\";\n            this._preloadArea.style.position = \"fixed\";\n            this._preloadArea.style.display = \"block\";\n            this._preloadArea.style.top = \"100vh\";\n            this._preloadArea.style.overflow = \"hidden\";\n            document.body.appendChild(this._preloadArea);\n        }\n        return this._preloadArea;\n    }\n}\n","import { Texture, TextureSourceLoader } from \"../tree/Texture\";\n\nexport class ImageTexture extends Texture {\n    private _src?: string = undefined;\n    private _hasAlpha: boolean = false;\n\n    get src() {\n        return this._src;\n    }\n\n    set src(v) {\n        if (this._src !== v) {\n            this._src = v;\n            this._changed();\n        }\n    }\n\n    get hasAlpha() {\n        return this._hasAlpha;\n    }\n\n    set hasAlpha(v) {\n        if (this._hasAlpha !== v) {\n            this._hasAlpha = v;\n            this._changed();\n        }\n    }\n\n    protected _getIsValid() {\n        return !!this._src;\n    }\n\n    protected _getLookupId() {\n        return this._src;\n    }\n\n    protected _getSourceLoader(): TextureSourceLoader {\n        const src = this._src!;\n        const hasAlpha = this._hasAlpha;\n\n        return (cb) => {\n            return this.stage.platform.loadSrcTexture({ src, hasAlpha }, cb);\n        };\n    }\n\n    getNonDefaults() {\n        const obj = super.getNonDefaults();\n        if (this._src) {\n            obj.src = this._src;\n        }\n        return obj;\n    }\n}\n","import { Texture, TextureSourceLoader } from \"../tree/Texture\";\nimport { Utils } from \"../tree/Utils\";\nimport { ColorUtils } from \"../tree/ColorUtils\";\nimport { Stage } from \"../tree/Stage\";\n\nexport type RoundRectOptions = {\n    w: number;\n    h: number;\n    radius: number[];\n    strokeWidth: number;\n    strokeColor: string | number;\n    fill: boolean;\n    fillColor: string | number;\n    shadowBlur: number;\n    shadowColor: number;\n    shadowOffsetX: number;\n    shadowOffsetY: number;\n};\n\nexport class RoundRectTexture extends Texture {\n    private _options?: Partial<RoundRectOptions> = undefined;\n\n    constructor(stage: Stage) {\n        super(stage);\n        this.pixelRatio = this.stage.pixelRatio;\n    }\n\n    set options(options: Partial<RoundRectOptions> | undefined) {\n        this._options = options;\n        this._changed();\n    }\n\n    get options(): Partial<RoundRectOptions> | undefined {\n        return this._options;\n    }\n\n    protected _getIsValid() {\n        return !!this._options && !!this._options.w && !!this._options.h;\n    }\n\n    protected _getLookupId() {\n        return \"RC$\" + Texture.getLookupIdFromSettings(this._options!) + \"|\" + this.pixelRatio;\n    }\n\n    protected _getSourceLoader(): TextureSourceLoader {\n        const options = Utils.clone(this._options);\n        const pixelRatio = this.pixelRatio;\n        return (cb) => {\n            const canvas = this.stage.platform.getDrawingCanvas();\n            const renderInfo = RoundRectTexture.drawOnCanvas(canvas, options, pixelRatio);\n            cb(undefined, { source: canvas, renderInfo });\n        };\n    }\n\n    private static drawOnCanvas(canvas: HTMLCanvasElement, options: RoundRectOptions, pixelRatio: number): any {\n        let {\n            w,\n            h,\n            radius = [0, 0, 0, 0],\n            strokeWidth = 0,\n            shadowBlur = 0,\n            shadowOffsetX = 0,\n            shadowOffsetY = 0,\n        } = options;\n\n        const { strokeColor, fill = true, fillColor = 0xffffffff, shadowColor = 0xffffffff } = options;\n\n        w *= pixelRatio;\n        h *= pixelRatio;\n        radius = radius.map((r: number) => r * pixelRatio);\n        strokeWidth *= pixelRatio;\n        shadowBlur *= pixelRatio;\n        shadowOffsetX *= pixelRatio;\n        shadowOffsetY *= pixelRatio;\n\n        const context = canvas.getContext(\"2d\")!;\n        context.imageSmoothingEnabled = true;\n\n        canvas.width = w + strokeWidth + 2 + shadowBlur * 2 + Math.abs(shadowOffsetX);\n        canvas.height = h + strokeWidth + 2 + shadowBlur * 2 + Math.abs(shadowOffsetY);\n\n        context.beginPath();\n        const x = 0.5 * strokeWidth + 1 + shadowBlur - Math.max(0, shadowOffsetX);\n        const y = 0.5 * strokeWidth + 1 + shadowBlur - Math.max(0, shadowOffsetY);\n\n        context.moveTo(x + radius[0], y);\n        context.lineTo(x + w - radius[1], y);\n        context.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\n        context.lineTo(x + w, y + h - radius[2]);\n        context.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\n        context.lineTo(x + radius[3], y + h);\n        context.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\n        context.lineTo(x, y + radius[0]);\n        context.arcTo(x, y, x + radius[0], y, radius[0]);\n        context.closePath();\n\n        if (shadowBlur) {\n            context.shadowBlur = shadowBlur;\n            context.shadowOffsetX = shadowOffsetX;\n            context.shadowOffsetY = shadowOffsetY;\n            context.shadowColor = this.convertToCanvasColor(shadowColor);\n        }\n\n        if (strokeWidth) {\n            context.strokeStyle = this.convertToCanvasColor(strokeColor);\n            context.lineWidth = strokeWidth;\n            context.stroke();\n        }\n\n        if (fill) {\n            context.fillStyle = this.convertToCanvasColor(fillColor);\n            context.fill();\n        }\n\n        return { offsetX: x / pixelRatio, offsetY: y / pixelRatio };\n    }\n\n    private static convertToCanvasColor(c: number | string): string {\n        if (Utils.isNumber(c)) {\n            return ColorUtils.getRgbaString(c);\n        } else {\n            return c;\n        }\n    }\n}\n","import { Texture } from \"../tree/Texture\";\nimport { TextureSource } from \"../tree/TextureSource\";\n\nexport class SourceTexture extends Texture {\n    private _textureSource?: TextureSource = undefined;\n\n    get textureSource(): TextureSource | undefined {\n        return this._textureSource;\n    }\n\n    set textureSource(v: TextureSource | undefined) {\n        if (v !== this._textureSource) {\n            if (v && v.isResultTexture) {\n                // In case of a result texture, automatically inherit the pixel ratio.\n                this.pixelRatio = this.stage.getPixelRatio();\n            }\n            this._textureSource = v;\n            this._changed();\n        }\n    }\n\n    protected _getIsValid() {\n        return !!this._textureSource;\n    }\n}\n","import { Texture, TextureSourceLoader } from \"../tree/Texture\";\nimport { Utils } from \"../tree/Utils\";\nimport { Stage } from \"../tree/Stage\";\n\nexport type SvgOptions = { w: number; h: number; src: string };\n\nexport class SvgTexture extends Texture {\n    private _options?: SvgOptions = undefined;\n\n    constructor(stage: Stage) {\n        super(stage);\n        this.pixelRatio = this.stage.pixelRatio;\n    }\n\n    set options(options: SvgOptions | undefined) {\n        this._options = options;\n        this._changed();\n    }\n\n    get options(): SvgOptions | undefined {\n        return this._options;\n    }\n\n    protected _getIsValid() {\n        return !!this._options && !!this._options.src && !!this._options.w && !!this._options.h;\n    }\n\n    protected _getLookupId() {\n        const { w, h, src } = this._options!;\n        return \"svg\" + [w, h, src].join(\",\") + \"|\" + this.pixelRatio;\n    }\n\n    protected _getSourceLoader(): TextureSourceLoader {\n        const options = Utils.clone(this._options);\n        return (cb) => {\n            const canvas = this.stage.platform.getDrawingCanvas();\n            const context = canvas.getContext(\"2d\")!;\n            context.imageSmoothingEnabled = true;\n\n            const img = new Image();\n            img.onload = () => {\n                const w = options.w * this.pixelRatio;\n                const h = options.h * this.pixelRatio;\n                canvas.width = w;\n                canvas.height = h;\n                context.drawImage(img, 0, 0, canvas.width, canvas.height);\n                cb(undefined, { source: canvas });\n            };\n            img.onerror = (err) => {\n                return cb(new Error(\"Image load error: \" + err.toString()));\n            };\n            img.src = options.src;\n        };\n    }\n}\n","import { Texture, TextureSourceCallback, TextureSourceLoader } from \"../../tree/Texture\";\nimport { TextTextureRenderer } from \"./TextTextureRenderer\";\nimport { TextSettings } from \"./TextSettings\";\nimport { Utils } from \"../../tree/Utils\";\nimport { Stage } from \"../../tree\";\n\nexport class TextTexture extends Texture {\n    private settings: Partial<TextSettings> = {};\n    private _text: string = \"\";\n\n    constructor(stage: Stage) {\n        super(stage);\n        this.pixelRatio = this.stage.pixelRatio;\n    }\n\n    setSettings(settings: Partial<TextSettings>) {\n        this.settings = settings;\n        this._changed();\n    }\n\n    get text() {\n        return this._text;\n    }\n\n    set text(v) {\n        if (this._text !== v) {\n            this._text = v;\n            this._changed();\n        }\n    }\n\n    get fontWeight() {\n        return this.settings.fontWeight;\n    }\n\n    set fontWeight(v) {\n        if (this.settings.fontWeight !== v) {\n            this.settings.fontWeight = v;\n            this._changed();\n        }\n    }\n\n    get fontStyle() {\n        return this.settings.fontStyle;\n    }\n\n    set fontStyle(v) {\n        if (this.settings.fontStyle !== v) {\n            this.settings.fontStyle = v;\n            this._changed();\n        }\n    }\n\n    get fontSize() {\n        return this.settings.fontSize;\n    }\n\n    set fontSize(v) {\n        if (this.settings.fontSize !== v) {\n            this.settings.fontSize = v;\n            this._changed();\n        }\n    }\n\n    get fontFace() {\n        return this.settings.fontFace;\n    }\n\n    set fontFace(v) {\n        if (this.settings.fontFace !== v) {\n            this.settings.fontFace = v;\n            this._changed();\n        }\n    }\n\n    get cutSx() {\n        return this.settings.cutSx;\n    }\n\n    set cutSx(v) {\n        if (this.settings.cutSx !== v) {\n            this.settings.cutSx = v;\n            this._changed();\n        }\n    }\n\n    get cutEx() {\n        return this.settings.cutEx;\n    }\n\n    set cutEx(v) {\n        if (this.settings.cutEx !== v) {\n            this.settings.cutEx = v;\n            this._changed();\n        }\n    }\n\n    get cutSy() {\n        return this.settings.cutSy;\n    }\n\n    set cutSy(v) {\n        if (this.settings.cutSy !== v) {\n            this.settings.cutSy = v;\n            this._changed();\n        }\n    }\n\n    get cutEy() {\n        return this.settings.cutEy;\n    }\n\n    set cutEy(v) {\n        if (this.settings.cutEy !== v) {\n            this.settings.cutEy = v;\n            this._changed();\n        }\n    }\n\n    get pixelRatio() {\n        return super.pixelRatio;\n    }\n\n    set pixelRatio(v) {\n        // We actually draw differently when the pixel ratio changes.\n        if (this.pixelRatio !== v) {\n            super.pixelRatio = v;\n            this._changed();\n        }\n    }\n\n    _getIsValid() {\n        return !!this._text;\n    }\n\n    _getLookupId() {\n        return \"TX$\" + this.text + \"|\" + Texture.getLookupIdFromSettings(this.settings) + \"|\" + this.pixelRatio;\n    }\n\n    protected _getSourceLoader(): TextureSourceLoader {\n        const args = this.cloneArgs();\n\n        return (cb: TextureSourceCallback) => {\n            const canvas = this.stage.platform.getDrawingCanvas();\n            const renderer = new TextTextureRenderer(this.stage, canvas, this.text, args, this.pixelRatio);\n            const p = renderer.draw();\n\n            const respond = () => {\n                cb(\n                    undefined,\n                    Object.assign(\n                        { renderInfo: renderer.renderInfo },\n                        this.stage.platform.getTextureOptionsForDrawingCanvas(canvas),\n                    ),\n                );\n            };\n\n            if (p) {\n                p.then(() => {\n                    respond();\n                }).catch((err) => {\n                    cb(err);\n                });\n            } else {\n                respond();\n            }\n        };\n    }\n\n    getNonDefaults() {\n        const nonDefaults = super.getNonDefaults();\n        for (const [key, value] of Object.entries(this.settings)) {\n            nonDefaults[key] = value;\n        }\n        return nonDefaults;\n    }\n\n    cloneArgs() {\n        return Utils.clone(this.settings);\n    }\n}\n","import { ColorUtils } from \"./ColorUtils\";\nimport { Element } from \"./Element\";\nimport { ElementChildList } from \"./ElementChildList\";\nimport { ElementListeners } from \"./ElementListeners\";\nimport { ObjectList } from \"./ObjectList\";\nimport { Shader } from \"./Shader\";\nimport { Stage } from \"./Stage\";\nimport { Texture } from \"./Texture\";\nimport { TextureManager } from \"./TextureManager\";\nimport { TextureSource } from \"./TextureSource\";\nimport { StageOptions } from \"./StageOptions\";\n\nexport { ElementCoordinatesInfo, FunctionH, FunctionW, FunctionX, FunctionY } from \"./core/ElementCore\";\n\nexport {\n    ColorUtils,\n    Element,\n    ElementChildList,\n    ElementListeners,\n    ObjectList,\n    Shader,\n    Stage,\n    StageOptions,\n    Texture,\n    TextureManager,\n    TextureSource,\n};\n\nexport * from \"./ElementListeners\";\n","import { ElementTexturizer } from \"./ElementTexturizer\";\nimport { Utils } from \"../Utils\";\nimport { CoreContext } from \"./CoreContext\";\nimport { TextureSource } from \"../TextureSource\";\nimport { CoreRenderState } from \"./CoreRenderState\";\nimport { Shader } from \"../Shader\";\nimport { ElementCoreContext } from \"./ElementCoreContext\";\nimport { RenderTextureInfo } from \"./RenderTextureInfo\";\nimport { ElementEventCallback } from \"../ElementListeners\";\nimport { FlexContainer, FlexItem, FlexNode, FlexSubject } from \"flexbox.js\";\nimport { Element } from \"../Element\";\n\nexport class ElementCore implements FlexSubject {\n    private _element: Element;\n\n    public readonly context: CoreContext;\n\n    /**\n     * Recalc flags in bits.\n     */\n    private flags: number = 0;\n\n    private _parent?: ElementCore = undefined;\n\n    private _onUpdate?: ElementEventCallback = undefined;\n\n    private updatedFlags: number = 0;\n\n    private _worldContext = new ElementCoreContext();\n\n    private _hasUpdates: boolean = false;\n\n    private _localAlpha: number = 1;\n\n    private _onAfterCalcs?: ElementEventCallback = undefined;\n\n    private _onAfterUpdate?: ElementEventCallback = undefined;\n\n    // All local translation/transform updates: directly propagated from x/y/w/h/scale/whatever.\n    private _localPx: number = 0;\n    private _localPy: number = 0;\n    private _localTa: number = 1;\n    private _localTb: number = 0;\n    private _localTc: number = 0;\n    private _localTd: number = 1;\n\n    private _isComplex: boolean = false;\n    private _dimsUnknown: boolean = false;\n    private _clipping: boolean = false;\n    private _zSort: boolean = false;\n    private _outOfBounds: number = 0;\n\n    /**\n     * The texture source to be displayed.\n     */\n    private _displayedTextureSource?: TextureSource = undefined;\n\n    private _zContextUsage: number = 0;\n\n    public _children?: ElementCore[] = undefined;\n\n    private _hasRenderUpdates: number = 0;\n\n    private _zIndexedChildren?: ElementCore[] = undefined;\n\n    private _renderContext: ElementCoreContext = this._worldContext;\n\n    private renderState: CoreRenderState;\n\n    private _scissor?: number[] = undefined;\n\n    // The ancestor ElementCore that defined the inherited shader. Undefined if none is active (default shader).\n    private _shaderOwner?: ElementCore = undefined;\n\n    // Counter while updating the tree order.\n    private _updateTreeOrder: number = 0;\n\n    // Texture corner point colors.\n    private _colorUl: number = 0xffffffff;\n    private _colorUr: number = 0xffffffff;\n    private _colorBl: number = 0xffffffff;\n    private _colorBr: number = 0xffffffff;\n\n    // Internal coords.\n    private _x: number = 0;\n    private _y: number = 0;\n    private _w: number = 0;\n    private _h: number = 0;\n\n    // Actual settings.\n    private _sx: number = 0;\n    private _sy: number = 0;\n    private _sw: number = 0;\n    private _sh: number = 0;\n\n    // Active texture size.\n    private _tw: number = 0;\n    private _th: number = 0;\n\n    // Defines which relative functions are enabled.\n    private _relFuncFlags: number = 0;\n\n    private _funcX?: FunctionX = undefined;\n    private _funcY?: FunctionY = undefined;\n    private _funcW?: FunctionW = undefined;\n    private _funcH?: FunctionH = undefined;\n\n    private _scaleX: number = 1;\n    private _scaleY: number = 1;\n    private _pivotX: number = 0.5;\n    private _pivotY: number = 0.5;\n    private _mountX: number = 0;\n    private _mountY: number = 0;\n    private _rotation: number = 0;\n\n    private _alpha: number = 1;\n    private _visible: boolean = true;\n\n    // Texture clipping.\n    public ulx: number = 0;\n    public uly: number = 0;\n    public brx: number = 1;\n    public bry: number = 1;\n\n    private _isRoot: boolean = false;\n\n    private _zIndex: number = 0;\n    private _forceZIndexContext: boolean = false;\n    private _zParent?: ElementCore = undefined;\n\n    /**\n     * Iff true, during next zSort, this element should be 're-sorted' because either:\n     * - zIndex did change\n     * - zParent did change\n     * - element was moved in the render tree\n     */\n    private _zIndexResort: boolean = false;\n\n    private _shader?: Shader = undefined;\n\n    // Element is rendered on another texture.\n    private _renderToTextureEnabled: boolean = false;\n\n    // Manages the render texture.\n    private _texturizer?: ElementTexturizer = undefined;\n\n    private _useRenderToTexture: boolean = false;\n\n    private _boundsMargin?: number[];\n\n    private _recBoundsMargin?: number[];\n\n    private _withinBoundsMargin: boolean = false;\n\n    private _viewport?: number[] = undefined;\n\n    // If this element is out of viewport, the branch is also skipped in updating and rendering.\n    private _clipbox: boolean = true;\n\n    // The render function. _renderComplex is only used if necessary.\n    public render: () => void = this._renderSimple;\n\n    // Flex layouting if enabled.\n    private _layout?: FlexNode = undefined;\n\n    private _stashedTexCoords?: number[] = undefined;\n    private _stashedColors?: number[] = undefined;\n\n    constructor(element: Element) {\n        this._element = element;\n\n        this.context = element.stage.context;\n\n        this.renderState = this.context.renderState;\n    }\n\n    getRenderContext(): ElementCoreContext {\n        return this._renderContext;\n    }\n\n    get x(): number | FunctionX {\n        if (this._funcX) {\n            return this._funcX;\n        } else {\n            return this._sx;\n        }\n    }\n\n    set x(v: number | FunctionX) {\n        if (Utils.isFunction(v)) {\n            this.funcX = v as FunctionX;\n        } else {\n            this._disableFuncX();\n            const dx = (v as number) - this._sx;\n            if (dx) {\n                this._sx = v as number;\n                this._x += dx;\n                this.updateLocalTranslateDelta(dx, 0);\n            }\n        }\n    }\n\n    get funcX() {\n        return this._relFuncFlags & 1 ? this._funcX : undefined;\n    }\n\n    set funcX(v) {\n        if (this._funcX !== v) {\n            this._relFuncFlags |= 1;\n            this._funcX = v;\n            this._x = 0;\n            if (this.hasFlexLayout()) {\n                this.layout.forceLayout();\n            } else {\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    _disableFuncX() {\n        this._relFuncFlags = this._relFuncFlags & (0xffff - 1);\n        this._funcX = undefined;\n    }\n\n    get y(): number | FunctionY {\n        if (this._funcY) {\n            return this._funcY;\n        } else {\n            return this._sy;\n        }\n    }\n\n    set y(v: number | FunctionY) {\n        if (Utils.isFunction(v)) {\n            this.funcY = v as FunctionY;\n        } else {\n            this._disableFuncY();\n            const dy = (v as number) - this._sy;\n            if (dy) {\n                this._sy = v as number;\n                this._y += dy;\n                this.updateLocalTranslateDelta(0, dy);\n            }\n        }\n    }\n\n    get funcY() {\n        return this._relFuncFlags & 2 ? this._funcY : undefined;\n    }\n\n    set funcY(v) {\n        if (this._funcY !== v) {\n            this._relFuncFlags |= 2;\n            this._funcY = v;\n            this._y = 0;\n            if (this.hasFlexLayout()) {\n                this.layout.forceLayout();\n            } else {\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    _disableFuncY() {\n        this._relFuncFlags = this._relFuncFlags & (0xffff - 2);\n        this._funcY = undefined;\n    }\n\n    get w(): number | FunctionW {\n        if (this._funcW) {\n            return this._funcW;\n        } else {\n            return this._sw;\n        }\n    }\n\n    set w(v: number | FunctionW) {\n        if (Utils.isFunction(v)) {\n            this.funcW = v as FunctionW;\n        } else {\n            this._disableFuncW();\n            if (this._sw !== v) {\n                this._sw = v as number;\n                this._updateBaseDimensions();\n            }\n        }\n    }\n\n    get funcW() {\n        return this._funcW;\n    }\n\n    set funcW(v) {\n        if (this._funcW !== v) {\n            this._relFuncFlags |= 4;\n            this._funcW = v;\n            this._sw = 0;\n            this._updateBaseDimensions();\n        }\n    }\n\n    _disableFuncW() {\n        this._relFuncFlags = this._relFuncFlags & (0xffff - 4);\n        this._funcW = undefined;\n    }\n\n    get h(): number | FunctionH {\n        if (this._funcH) {\n            return this._funcH;\n        } else {\n            return this._sh;\n        }\n    }\n\n    set h(v: number | FunctionH) {\n        if (Utils.isFunction(v)) {\n            this.funcH = v as FunctionH;\n        } else {\n            this._disableFuncH();\n            if (this._sh !== v) {\n                this._sh = v as number;\n                this._updateBaseDimensions();\n            }\n        }\n    }\n\n    get funcH() {\n        return this._funcH;\n    }\n\n    set funcH(v) {\n        if (this._funcH !== v) {\n            this._relFuncFlags |= 8;\n            this._funcH = v;\n            this._sh = 0;\n            this._updateBaseDimensions();\n        }\n    }\n\n    _disableFuncH() {\n        this._relFuncFlags = this._relFuncFlags & (0xffff - 8);\n        this._funcH = undefined;\n    }\n\n    get scaleX() {\n        return this._scaleX;\n    }\n\n    set scaleX(v) {\n        if (this._scaleX !== v) {\n            this._scaleX = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get scaleY() {\n        return this._scaleY;\n    }\n\n    set scaleY(v) {\n        if (this._scaleY !== v) {\n            this._scaleY = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get scale() {\n        return this.scaleX;\n    }\n\n    set scale(v) {\n        if (this._scaleX !== v || this._scaleY !== v) {\n            this._scaleX = v;\n            this._scaleY = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        if (this._pivotX !== v) {\n            this._pivotX = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        if (this._pivotY !== v) {\n            this._pivotY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get pivot() {\n        return this._pivotX;\n    }\n\n    set pivot(v) {\n        if (this._pivotX !== v || this._pivotY !== v) {\n            this._pivotX = v;\n            this._pivotY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mountX() {\n        return this._mountX;\n    }\n\n    set mountX(v) {\n        if (this._mountX !== v) {\n            this._mountX = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mountY() {\n        return this._mountY;\n    }\n\n    set mountY(v) {\n        if (this._mountY !== v) {\n            this._mountY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mount() {\n        return this._mountX;\n    }\n\n    set mount(v) {\n        if (this._mountX !== v || this._mountY !== v) {\n            this._mountX = v;\n            this._mountY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get rotation() {\n        return this._rotation;\n    }\n\n    set rotation(v) {\n        if (this._rotation !== v) {\n            this._rotation = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get alpha() {\n        return this._alpha;\n    }\n\n    set alpha(v) {\n        // Account for rounding errors.\n        v = v > 1 ? 1 : v < 1e-14 ? 0 : v;\n        if (this._alpha !== v) {\n            const prev = this._alpha;\n            this._alpha = v;\n            this.updateLocalAlpha();\n            if ((prev === 0) !== (v === 0)) {\n                this._element._updateEnabledFlag();\n            }\n        }\n    }\n\n    get visible() {\n        return this._visible;\n    }\n\n    set visible(v) {\n        if (this._visible !== v) {\n            this._visible = v;\n            this.updateLocalAlpha();\n            this._element._updateEnabledFlag();\n\n            if (this.hasFlexLayout()) {\n                this.layout.updateVisible();\n            }\n        }\n    }\n\n    _updateLocalTransform() {\n        if (this._rotation !== 0 && this._rotation % (2 * Math.PI)) {\n            // check to see if the rotation is the same as the previous render. This means we only need to use sin and cos when rotation actually changes\n            const _sr = Math.sin(this._rotation);\n            const _cr = Math.cos(this._rotation);\n\n            this._setLocalTransform(_cr * this._scaleX, -_sr * this._scaleY, _sr * this._scaleX, _cr * this._scaleY);\n        } else {\n            this._setLocalTransform(this._scaleX, 0, 0, this._scaleY);\n        }\n        this._updateLocalTranslate();\n    }\n\n    _updateLocalTranslate() {\n        this.updateLocalTranslate();\n        this._triggerRecalcTranslate();\n    }\n\n    private updateLocalTranslate() {\n        const pivotXMul = this._pivotX * this._w;\n        const pivotYMul = this._pivotY * this._h;\n        let px = this._x - (pivotXMul * this._localTa + pivotYMul * this._localTb) + pivotXMul;\n        let py = this._y - (pivotXMul * this._localTc + pivotYMul * this._localTd) + pivotYMul;\n        px -= this._mountX * this._w;\n        py -= this._mountY * this._h;\n        this._localPx = px;\n        this._localPy = py;\n    }\n\n    private updateLocalTranslateDelta(dx: number, dy: number) {\n        this._addLocalTranslate(dx, dy);\n    }\n\n    private updateLocalAlpha() {\n        this._setLocalAlpha(this._visible ? this._alpha : 0);\n    }\n\n    hasUpdates() {\n        return this._hasUpdates;\n    }\n\n    hasRenderUpdates() {\n        return this._hasRenderUpdates > 0;\n    }\n\n    hasRenderTextureUpdates() {\n        return this._hasRenderUpdates >= 3;\n    }\n\n    clearHasRenderUpdates() {\n        this._hasRenderUpdates = 0;\n    }\n\n    /**\n     * @param level - Level of updates:\n     *  0: no updates\n     *  1: re-invoke shader\n     *  3: re-create render texture and re-invoke shader\n     */\n    setHasRenderUpdates(level: number) {\n        if (this._worldContext.alpha) {\n            // Ignore if 'world invisible'. Render updates will be reset to 3 for every element that becomes visible.\n            let p: ElementCore | undefined = this as ElementCore;\n            p!._hasRenderUpdates = Math.max(level, p!._hasRenderUpdates);\n            while (true) {\n                p = p!._parent;\n                if (!p || p._hasRenderUpdates >= 3) {\n                    break;\n                }\n                p._hasRenderUpdates = 3;\n            }\n        }\n    }\n\n    /**\n     * Marks recalculation updates.\n     * @param type - What needs to be recalculated\n     *  1: alpha\n     *  2: translate\n     *  4: transform\n     *  128: becomes visible\n     *  256: flex layout updated\n     */\n    private setFlag(type: number) {\n        this.flags |= type;\n\n        this._setHasUpdates();\n\n        // Any changes in descendants should trigger texture updates.\n        if (this._parent) {\n            this._parent.setHasRenderUpdates(3);\n        }\n    }\n\n    _setHasUpdates() {\n        let p = this as ElementCore | undefined;\n        while (p && !p._hasUpdates) {\n            p._hasUpdates = true;\n            p = p._parent;\n        }\n    }\n\n    getParent(): ElementCore | undefined {\n        return this._parent;\n    }\n\n    private setParent(parent?: ElementCore) {\n        if (parent !== this._parent) {\n            const prevIsZContext = this.isZContext();\n            const prevParent = this._parent;\n            this._parent = parent;\n\n            // Notify flex layout engine.\n            if (this._layout || FlexNode.getActiveLayoutNode(parent)?.isFlexEnabled()) {\n                this.layout.setParent(prevParent, parent);\n            }\n\n            if (prevParent) {\n                // When elements are deleted, the render texture must be re-rendered.\n                prevParent.setHasRenderUpdates(3);\n            }\n\n            this.setFlag(1 + 2 + 4);\n\n            if (this._parent) {\n                // Force parent to propagate hasUpdates flag.\n                this._parent._setHasUpdates();\n            }\n\n            if (this._zIndex === 0) {\n                this.setZParent(parent);\n            } else {\n                this.setZParent(parent ? parent.findZContext() : undefined);\n            }\n\n            if (prevIsZContext !== this.isZContext()) {\n                if (!this.isZContext()) {\n                    this.disableZContext();\n                } else {\n                    const prevZContext = prevParent ? prevParent.findZContext() : undefined;\n                    this.enableZContext(prevZContext);\n                }\n            }\n\n            // Tree order did change: even if zParent stays the same, we must resort.\n            this._zIndexResort = true;\n            if (this._zParent) {\n                this._zParent.enableZSort();\n            }\n\n            if (!this._shader) {\n                const newShaderOwner = parent && !parent._renderToTextureEnabled ? parent._shaderOwner : undefined;\n                if (newShaderOwner !== this._shaderOwner) {\n                    this.setHasRenderUpdates(1);\n                    this._setShaderOwnerRecursive(newShaderOwner);\n                }\n            }\n        }\n    }\n\n    private enableZSort(force = false) {\n        if (!this._zSort && this._zContextUsage > 0) {\n            this._zSort = true;\n            if (force) {\n                // ZSort must be done, even if this element is invisible.\n                // This is done to prevent memory leaks when removing element from inactive render branches.\n                this.context.forceZSort(this);\n            }\n        }\n    }\n\n    addChildAt(index: number, child: ElementCore) {\n        if (!this._children) this._children = [];\n        this._children.splice(index, 0, child);\n        child.setParent(this);\n    }\n\n    setChildAt(index: number, child: ElementCore) {\n        if (!this._children) this._children = [];\n        this._children[index].setParent(undefined);\n        this._children[index] = child;\n        child.setParent(this);\n    }\n\n    removeChildAt(index: number) {\n        if (this._children) {\n            const child = this._children[index];\n            this._children.splice(index, 1);\n            child.setParent(undefined);\n        }\n    }\n\n    removeChildren() {\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i].setParent(undefined);\n            }\n\n            this._children.splice(0);\n\n            if (this._zIndexedChildren) {\n                this._zIndexedChildren.splice(0);\n            }\n        }\n    }\n\n    syncChildren(removed: ElementCore[], added: ElementCore[], order: ElementCore[]) {\n        this._children = order;\n        for (let i = 0, n = removed.length; i < n; i++) {\n            removed[i].setParent(undefined);\n        }\n        for (let i = 0, n = added.length; i < n; i++) {\n            added[i].setParent(this);\n        }\n    }\n\n    moveChild(fromIndex: number, toIndex: number) {\n        if (this._children) {\n            const c = this._children[fromIndex];\n            this._children.splice(fromIndex, 1);\n            this._children.splice(toIndex, 0, c);\n        }\n\n        // Tree order changed: must resort!\n        this._zIndexResort = true;\n        if (this._zParent) {\n            this._zParent.enableZSort();\n        }\n    }\n\n    private _setLocalTransform(a: number, b: number, c: number, d: number) {\n        this.setFlag(4);\n        this._localTa = a;\n        this._localTb = b;\n        this._localTc = c;\n        this._localTd = d;\n\n        // We also regard negative scaling as a complex case, so that we can optimize the non-complex case better.\n        this._isComplex = b !== 0 || c !== 0 || a < 0 || d < 0;\n    }\n\n    private _addLocalTranslate(dx: number, dy: number) {\n        this._localPx += dx;\n        this._localPy += dy;\n        this._triggerRecalcTranslate();\n    }\n\n    private _setLocalAlpha(a: number) {\n        if (!this._worldContext.alpha && this._parent && this._parent._worldContext.alpha && a) {\n            // Element is becoming visible. We need to force update.\n            this.setFlag(1 + 128);\n        } else {\n            this.setFlag(1);\n        }\n\n        if (a < 1e-14) {\n            // Tiny rounding errors may cause failing visibility tests.\n            a = 0;\n        }\n\n        this._localAlpha = a;\n    }\n\n    setTextureDimensions(w: number, h: number, isEstimate: boolean = this._dimsUnknown) {\n        // In case of an estimation, the update loop should perform different bound checks.\n        this._dimsUnknown = isEstimate;\n        if (this._tw !== w || this._th !== h) {\n            this._tw = w;\n            this._th = h;\n            this._updateBaseDimensions();\n        }\n    }\n\n    private _updateBaseDimensions() {\n        if (this._funcW || this._funcH) {\n            this._triggerRecalcTranslate();\n        }\n\n        const w = this._sw || this._tw;\n        const h = this._sh || this._th;\n\n        if (this.hasFlexLayout()) {\n            // Notify layout.\n            this.layout.updatedSourceW();\n            this.layout.updatedSourceH();\n        } else {\n            if ((!this._funcW && this._w !== w) || (!this._funcH && this._h !== h)) {\n                if (!this._funcW) {\n                    this._w = w;\n                }\n\n                if (!this._funcH) {\n                    this._h = h;\n                }\n\n                this.onDimensionsChanged();\n            }\n        }\n    }\n\n    setLayoutCoords(x: number, y: number) {\n        if (this._x !== x || this._y !== y) {\n            this._x = x;\n            this._y = y;\n            this._updateLocalTranslate();\n        }\n    }\n\n    setLayoutDimensions(w: number, h: number) {\n        if (this._w !== w || this._h !== h) {\n            this._w = w;\n            this._h = h;\n\n            this.onDimensionsChanged();\n        }\n    }\n\n    private onDimensionsChanged() {\n        // Due to width/height change: update the translation vector.\n        this._updateLocalTranslate();\n\n        if (this._texturizer) {\n            this._texturizer.releaseRenderTexture();\n            this._texturizer.updateResultTexture();\n        }\n\n        this.element._onResize(this._w, this._h);\n    }\n\n    setTextureCoords(ulx: number, uly: number, brx: number, bry: number) {\n        this.setHasRenderUpdates(3);\n\n        this.ulx = ulx;\n        this.uly = uly;\n        this.brx = brx;\n        this.bry = bry;\n    }\n\n    get displayedTextureSource(): TextureSource | undefined {\n        return this._displayedTextureSource;\n    }\n\n    setDisplayedTextureSource(textureSource: TextureSource | undefined) {\n        this.setHasRenderUpdates(3);\n        this._displayedTextureSource = textureSource;\n    }\n\n    get isRoot(): boolean {\n        return this._isRoot;\n    }\n\n    setupAsRoot() {\n        // Use parent dummy.\n        this._parent = new ElementCore(this._element);\n\n        // After setting root, make sure it's updated.\n        this._parent.w = this.context.stage.coordsWidth;\n        this._parent.h = this.context.stage.coordsHeight;\n        this._parent._hasRenderUpdates = 3;\n        this._parent._hasUpdates = true;\n\n        // Root is, and will always be, the primary zContext.\n        this._isRoot = true;\n\n        this.context.root = this;\n\n        // Set scissor area of 'fake parent' to stage's viewport.\n        this._parent._viewport = [0, 0, this.context.stage.coordsWidth, this.context.stage.coordsHeight];\n        this._parent._scissor = this._parent._viewport;\n\n        // When recBoundsMargin is undefined, the defaults are used (100 for all sides).\n        this._parent._recBoundsMargin = undefined;\n\n        this.setFlag(1 + 2 + 4);\n    }\n\n    private isAncestorOf(c: ElementCore) {\n        let p: ElementCore | undefined = c as ElementCore;\n\n        while (true) {\n            p = p!._parent;\n            if (!p) {\n                return false;\n            }\n            if (this === p) return true;\n        }\n    }\n\n    private isZContext(): boolean {\n        return (\n            this._forceZIndexContext ||\n            this._renderToTextureEnabled ||\n            this._zIndex !== 0 ||\n            this._isRoot ||\n            !this._parent\n        );\n    }\n\n    private findZContext(): ElementCore {\n        if (this.isZContext()) {\n            return this;\n        } else {\n            return this._parent!.findZContext();\n        }\n    }\n\n    private setZParent(newZParent?: ElementCore) {\n        if (this._zParent !== newZParent) {\n            if (this._zParent) {\n                if (this._zIndex !== 0) {\n                    this._zParent.decZContextUsage();\n                }\n\n                // We must filter out this item upon the next resort.\n                this._zParent.enableZSort();\n            }\n\n            if (newZParent !== undefined) {\n                const hadZContextUsage = newZParent._zContextUsage > 0;\n\n                // @pre: new parent's children array has already been modified.\n                if (this._zIndex !== 0) {\n                    newZParent.incZContextUsage();\n                }\n\n                if (newZParent._zContextUsage > 0) {\n                    if (!hadZContextUsage && this._parent === newZParent) {\n                        // This child was already in the children list.\n                        // Do not add double.\n                    } else {\n                        // Add new child to array.\n                        newZParent._zIndexedChildren!.push(this);\n                    }\n\n                    // Order should be checked.\n                    newZParent.enableZSort();\n                }\n            }\n\n            this._zParent = newZParent;\n\n            // Newly added element must be marked for resort.\n            this._zIndexResort = true;\n        }\n    }\n\n    private incZContextUsage() {\n        this._zContextUsage++;\n        if (this._zContextUsage === 1) {\n            if (!this._zIndexedChildren) {\n                this._zIndexedChildren = [];\n            }\n            if (this._children) {\n                // Copy.\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._zIndexedChildren.push(this._children[i]);\n                }\n                // Initially, children are already sorted properly (tree order).\n                this._zSort = false;\n            }\n        }\n    }\n\n    private decZContextUsage() {\n        this._zContextUsage--;\n        if (this._zContextUsage === 0) {\n            this._zSort = false;\n            this._zIndexedChildren!.splice(0);\n        }\n    }\n\n    get zIndex(): number {\n        return this._zIndex;\n    }\n\n    set zIndex(zIndex: number) {\n        if (this._zIndex !== zIndex) {\n            this.setHasRenderUpdates(1);\n\n            let newZParent = this._zParent;\n\n            const prevIsZContext = this.isZContext();\n            if (zIndex === 0 && this._zIndex !== 0) {\n                if (this._parent === this._zParent) {\n                    if (this._zParent) {\n                        this._zParent.decZContextUsage();\n                    }\n                } else {\n                    newZParent = this._parent;\n                }\n            } else if (zIndex !== 0 && this._zIndex === 0) {\n                newZParent = this._parent ? this._parent.findZContext() : undefined;\n                if (newZParent === this._zParent) {\n                    if (this._zParent) {\n                        this._zParent.incZContextUsage();\n                        this._zParent.enableZSort();\n                    }\n                }\n            } else if (zIndex !== this._zIndex) {\n                if (this._zParent && this._zParent._zContextUsage) {\n                    this._zParent.enableZSort();\n                }\n            }\n\n            if (newZParent !== this._zParent) {\n                this.setZParent(undefined);\n            }\n\n            this._zIndex = zIndex;\n\n            if (newZParent !== this._zParent) {\n                this.setZParent(newZParent);\n            }\n\n            if (prevIsZContext !== this.isZContext()) {\n                if (!this.isZContext()) {\n                    this.disableZContext();\n                } else {\n                    const prevZContext = this._parent ? this._parent.findZContext() : undefined;\n                    this.enableZContext(prevZContext);\n                }\n            }\n\n            // Make sure that resort is done.\n            this._zIndexResort = true;\n            if (this._zParent) {\n                this._zParent.enableZSort();\n            }\n        }\n    }\n\n    get forceZIndexContext() {\n        return this._forceZIndexContext;\n    }\n\n    set forceZIndexContext(v) {\n        this.setHasRenderUpdates(1);\n\n        const prevIsZContext = this.isZContext();\n        this._forceZIndexContext = v;\n\n        if (prevIsZContext !== this.isZContext()) {\n            if (!this.isZContext()) {\n                this.disableZContext();\n            } else {\n                const prevZContext = this._parent ? this._parent.findZContext() : undefined;\n                this.enableZContext(prevZContext);\n            }\n        }\n    }\n\n    private enableZContext(prevZContext?: ElementCore) {\n        if (prevZContext && prevZContext._zContextUsage > 0) {\n            // Transfer from upper z context to this z context.\n            const results = this._getZIndexedDescs();\n            results.forEach((c) => {\n                if (this.isAncestorOf(c) && c._zIndex !== 0) {\n                    c.setZParent(this);\n                }\n            });\n        }\n    }\n\n    private _getZIndexedDescs() {\n        const results: ElementCore[] = [];\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i]._getZIndexedDescsRec(results);\n            }\n        }\n        return results;\n    }\n\n    private _getZIndexedDescsRec(results: ElementCore[]) {\n        if (this._zIndex) {\n            results.push(this);\n        } else if (this._children && !this.isZContext()) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i]._getZIndexedDescsRec(results);\n            }\n        }\n    }\n\n    private disableZContext() {\n        // Transfer from this z context to upper z context.\n        if (this._zContextUsage > 0) {\n            const newZParent = this._parent ? this._parent.findZContext() : undefined;\n\n            // Make sure that z-indexed children are up to date (old ones removed).\n            if (this._zSort) {\n                this.sortZIndexedChildren();\n            }\n\n            this._zIndexedChildren!.slice().forEach((c) => {\n                if (c._zIndex !== 0) {\n                    c.setZParent(newZParent);\n                }\n            });\n        }\n    }\n\n    get colorUl() {\n        return this._colorUl;\n    }\n\n    set colorUl(color) {\n        if (this._colorUl !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorUl = color;\n        }\n    }\n\n    get colorUr() {\n        return this._colorUr;\n    }\n\n    set colorUr(color) {\n        if (this._colorUr !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorUr = color;\n        }\n    }\n\n    get colorBl() {\n        return this._colorBl;\n    }\n\n    set colorBl(color) {\n        if (this._colorBl !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorBl = color;\n        }\n    }\n\n    get colorBr() {\n        return this._colorBr;\n    }\n\n    set colorBr(color) {\n        if (this._colorBr !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorBr = color;\n        }\n    }\n\n    set onUpdate(f: ElementEventCallback | undefined) {\n        this._onUpdate = f;\n        this.setFlag(7);\n    }\n\n    get onUpdate() {\n        return this._onUpdate;\n    }\n\n    set onAfterUpdate(f: ElementEventCallback | undefined) {\n        this._onAfterUpdate = f;\n        this.setFlag(7);\n    }\n\n    get onAfterUpdate() {\n        return this._onUpdate;\n    }\n\n    set onAfterCalcs(f: ElementEventCallback | undefined) {\n        this._onAfterCalcs = f;\n        this.setFlag(7);\n    }\n\n    get onAfterCalcs() {\n        return this._onUpdate;\n    }\n\n    get shader() {\n        return this._shader;\n    }\n\n    set shader(v) {\n        this.setHasRenderUpdates(1);\n\n        const prevShader = this._shader;\n        this._shader = v;\n        if (!v && prevShader) {\n            // Disabled shader.\n            const newShaderOwner =\n                this._parent && !this._parent._renderToTextureEnabled ? this._parent._shaderOwner : undefined;\n            this._setShaderOwnerRecursive(newShaderOwner);\n        } else if (v) {\n            // Enabled shader.\n            this._setShaderOwnerRecursive(this);\n        }\n    }\n\n    get activeShader() {\n        return this._shaderOwner ? this._shaderOwner.shader! : this.renderState.defaultShader;\n    }\n\n    get activeShaderOwner() {\n        return this._shaderOwner;\n    }\n\n    get clipping() {\n        return this._clipping;\n    }\n\n    set clipping(v) {\n        if (this._clipping !== v) {\n            this._clipping = v;\n\n            // Force update of scissor by updating translate.\n            // Alpha must also be updated because the scissor area may have been empty.\n            this.setFlag(1 + 2);\n        }\n    }\n\n    get clipbox() {\n        return this._clipbox;\n    }\n\n    set clipbox(v) {\n        // In case of out-of-bounds element, all children will also be ignored.\n        // It will save us from executing the update/render loops for those.\n        // The optimization will be used immediately during the next frame.\n        this._clipbox = v;\n    }\n\n    private _setShaderOwnerRecursive(elementCore?: ElementCore) {\n        this._shaderOwner = elementCore;\n\n        if (this._children && !this._renderToTextureEnabled) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                const c = this._children[i];\n                if (!c._shader) {\n                    c._setShaderOwnerRecursive(elementCore);\n                    c._hasRenderUpdates = 3;\n                }\n            }\n        }\n    }\n\n    private _setShaderOwnerChildrenRecursive(elementCore?: ElementCore) {\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                const c = this._children[i];\n                if (!c._shader) {\n                    c._setShaderOwnerRecursive(elementCore);\n                    c._hasRenderUpdates = 3;\n                }\n            }\n        }\n    }\n\n    private _hasRenderContext() {\n        return this._renderContext !== this._worldContext;\n    }\n\n    get renderContext() {\n        return this._renderContext;\n    }\n\n    public updateRenderToTextureEnabled() {\n        // Enforce texturizer initialisation.\n        const texturizer = this.texturizer;\n        const v = texturizer.enabled;\n\n        if (v) {\n            this._enableRenderToTexture();\n        } else {\n            this._disableRenderToTexture();\n            texturizer.releaseRenderTexture();\n        }\n    }\n\n    private _enableRenderToTexture() {\n        if (!this._renderToTextureEnabled) {\n            const prevIsZContext = this.isZContext();\n\n            this._renderToTextureEnabled = true;\n\n            this._renderContext = new ElementCoreContext();\n\n            // If render to texture is active, a new shader context is started.\n            this._setShaderOwnerChildrenRecursive(undefined);\n\n            if (!prevIsZContext) {\n                // Render context forces z context.\n                this.enableZContext(this._parent ? this._parent.findZContext() : undefined);\n            }\n\n            this.setHasRenderUpdates(3);\n\n            // Make sure that the render coordinates get updated.\n            this.setFlag(7);\n\n            this.render = this._renderAdvanced;\n        }\n    }\n\n    private _disableRenderToTexture() {\n        if (this._renderToTextureEnabled) {\n            this._renderToTextureEnabled = false;\n\n            this._setShaderOwnerChildrenRecursive(this._shaderOwner);\n\n            this._renderContext = this._worldContext;\n\n            if (!this.isZContext()) {\n                this.disableZContext();\n            }\n\n            // Make sure that the render coordinates get updated.\n            this.setFlag(7);\n\n            this.setHasRenderUpdates(3);\n\n            this.render = this._renderSimple;\n        }\n    }\n\n    public isWhite() {\n        return (\n            this._colorUl === 0xffffffff &&\n            this._colorUr === 0xffffffff &&\n            this._colorBl === 0xffffffff &&\n            this._colorBr === 0xffffffff\n        );\n    }\n\n    public hasSimpleTexCoords() {\n        return this.ulx === 0 && this.uly === 0 && this.brx === 1 && this.bry === 1;\n    }\n\n    private _stashTexCoords() {\n        this._stashedTexCoords = [this.ulx, this.uly, this.brx, this.bry];\n        this.ulx = 0;\n        this.uly = 0;\n        this.brx = 1;\n        this.bry = 1;\n    }\n\n    private _unstashTexCoords() {\n        this.ulx = this._stashedTexCoords![0];\n        this.uly = this._stashedTexCoords![1];\n        this.brx = this._stashedTexCoords![2];\n        this.bry = this._stashedTexCoords![3];\n        this._stashedTexCoords = undefined;\n    }\n\n    private _stashColors() {\n        this._stashedColors = [this._colorUl, this._colorUr, this._colorBr, this._colorBl];\n        this._colorUl = 0xffffffff;\n        this._colorUr = 0xffffffff;\n        this._colorBr = 0xffffffff;\n        this._colorBl = 0xffffffff;\n    }\n\n    private _unstashColors() {\n        this._colorUl = this._stashedColors![0];\n        this._colorUr = this._stashedColors![1];\n        this._colorBr = this._stashedColors![2];\n        this._colorBl = this._stashedColors![3];\n        this._stashedColors = undefined;\n    }\n\n    isDisplayed() {\n        return this._visible;\n    }\n\n    isVisible() {\n        return this._localAlpha > 1e-14;\n    }\n\n    get outOfBounds() {\n        return this._outOfBounds;\n    }\n\n    set boundsMargin(v) {\n        /**\n         *  undefined: inherit from parent.\n         *  number[4]: specific margins: left, top, right, bottom.\n         */\n        this._boundsMargin = v ? v.slice() : undefined;\n\n        // We force recalc in order to set all boundsMargin recursively during the next update.\n        this._triggerRecalcTranslate();\n    }\n\n    get boundsMargin() {\n        return this._boundsMargin;\n    }\n\n    private hasRelativeDimensionFunctions() {\n        return this._relFuncFlags & 12;\n    }\n\n    public update(): void {\n        // Inherit flags.\n        this.flags |= this._parent!.updatedFlags & 135;\n\n        if (this._layout && this._layout.isEnabled()) {\n            const relativeDimsFlexRoot = this.isFlexLayoutRoot() && this.hasRelativeDimensionFunctions();\n            if (this.flags & 256 || relativeDimsFlexRoot) {\n                this._layout.layoutFlexTree();\n            }\n        } else if (this.flags & 2 && this._relFuncFlags) {\n            this._applyRelativeDimFuncs();\n        }\n\n        if (this._onUpdate) {\n            // Block all 'upwards' updates when changing things in this branch.\n            this._hasUpdates = true;\n            this._onUpdate({ element: this.element });\n        }\n\n        const pw = this._parent!._worldContext;\n        const w = this._worldContext;\n        const visible = pw.alpha && this._localAlpha;\n\n        /**\n         * We must update if:\n         * - branch contains updates (even when invisible because it may contain z-indexed descendants)\n         * - there are (inherited) updates and this branch is visible\n         * - this branch becomes invisible (descs may be z-indexed so we must update all alpha values)\n         */\n        if (this._hasUpdates || (this.flags && visible) || (w.alpha && !visible)) {\n            let recalc = this.flags;\n\n            // Update world coords/alpha.\n            if (recalc & 1) {\n                if (!w.alpha && visible) {\n                    // Becomes visible.\n                    this._hasRenderUpdates = 3;\n                }\n                w.alpha = pw.alpha * this._localAlpha;\n\n                if (w.alpha < 1e-14) {\n                    // Tiny rounding errors may cause failing visibility tests.\n                    w.alpha = 0;\n                }\n            }\n\n            if (recalc & 6) {\n                w.px = pw.px + this._localPx * pw.ta;\n                w.py = pw.py + this._localPy * pw.td;\n                if (pw.tb !== 0) w.px += this._localPy * pw.tb;\n                if (pw.tc !== 0) w.py += this._localPx * pw.tc;\n            }\n\n            if (recalc & 4) {\n                w.ta = this._localTa * pw.ta;\n                w.tb = this._localTd * pw.tb;\n                w.tc = this._localTa * pw.tc;\n                w.td = this._localTd * pw.td;\n\n                if (this._isComplex) {\n                    w.ta += this._localTc * pw.tb;\n                    w.tb += this._localTb * pw.ta;\n                    w.tc += this._localTc * pw.td;\n                    w.td += this._localTb * pw.tc;\n                }\n            }\n\n            // Update render coords/alpha.\n            const pr = this._parent!._renderContext;\n            if (this._parent!._hasRenderContext()) {\n                const init = this._renderContext === this._worldContext;\n                if (init) {\n                    // First render context build: make sure that it is fully initialized correctly.\n                    // Otherwise, if we get into bounds later, the render context would not be initialized correctly.\n                    this._renderContext = new ElementCoreContext();\n                }\n\n                const rc = this._renderContext;\n\n                // Update world coords/alpha.\n                if (init || recalc & 1) {\n                    rc.alpha = pr.alpha * this._localAlpha;\n\n                    if (rc.alpha < 1e-14) {\n                        rc.alpha = 0;\n                    }\n                }\n\n                if (init || recalc & 6) {\n                    rc.px = pr.px + this._localPx * pr.ta;\n                    rc.py = pr.py + this._localPy * pr.td;\n                    if (pr.tb !== 0) rc.px += this._localPy * pr.tb;\n                    if (pr.tc !== 0) rc.py += this._localPx * pr.tc;\n                }\n\n                if (init) {\n                    // We set the recalc toggle, because we must make sure that the scissor is updated.\n                    recalc |= 2;\n                }\n\n                if (init || recalc & 4) {\n                    rc.ta = this._localTa * pr.ta;\n                    rc.tb = this._localTd * pr.tb;\n                    rc.tc = this._localTa * pr.tc;\n                    rc.td = this._localTd * pr.td;\n\n                    if (this._isComplex) {\n                        rc.ta += this._localTc * pr.tb;\n                        rc.tb += this._localTb * pr.ta;\n                        rc.tc += this._localTc * pr.td;\n                        rc.td += this._localTb * pr.tc;\n                    }\n                }\n            } else {\n                this._renderContext = this._worldContext;\n            }\n\n            if (this.context.updateTreeOrder === -1) {\n                this.context.updateTreeOrder = this._updateTreeOrder + 1;\n            } else {\n                this._updateTreeOrder = this.context.updateTreeOrder++;\n            }\n\n            // Determine whether we must use a 'renderTexture'.\n            const useRenderToTexture = this._renderToTextureEnabled && this._texturizer!.mustRenderToTexture();\n            if (this._useRenderToTexture !== useRenderToTexture) {\n                // Coords must be changed.\n                this.flags |= 2 + 4;\n\n                // Scissor may change: force update.\n                recalc |= 2;\n\n                if (!this._useRenderToTexture) {\n                    // We must release the texture.\n                    this._texturizer!.release();\n                }\n            }\n            this._useRenderToTexture = useRenderToTexture;\n\n            const r = this._renderContext;\n\n            const bboxW = this._dimsUnknown ? 2048 : this._w;\n            const bboxH = this._dimsUnknown ? 2048 : this._h;\n\n            // Calculate a bbox for this element.\n            let sx;\n            let sy;\n            let ex;\n            let ey;\n            const rComplex = r.tb !== 0 || r.tc !== 0 || r.ta < 0 || r.td < 0;\n            if (rComplex) {\n                sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n            } else {\n                sx = r.px;\n                ex = r.px + r.ta * bboxW;\n                sy = r.py;\n                ey = r.py + r.td * bboxH;\n            }\n\n            if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\n                // If we are dealing with a non-identity matrix, we must extend the bbox so that withinBounds and\n                //  scissors will include the complete range of (positive) dimensions up to ,lh.\n                const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\n                const ny = this._x * pr.tc + this._y * pr.td + pr.py;\n                if (nx < sx) sx = nx;\n                if (ny < sy) sy = ny;\n                if (nx > ex) ex = nx;\n                if (ny > ey) ey = ny;\n            }\n\n            if (recalc & 6 || !this._scissor /* initial */) {\n                // Determine whether we must 'clip'.\n                if (this._clipping && r.isSquare()) {\n                    // If the parent renders to a texture, it's scissor should be ignored;\n                    const area = this._parent!._useRenderToTexture ? this._parent!._viewport : this._parent!._scissor;\n                    if (area) {\n                        // Merge scissor areas.\n                        const lx = Math.max(area[0], sx);\n                        const ly = Math.max(area[1], sy);\n                        this._scissor = [\n                            lx,\n                            ly,\n                            Math.min(area[2] + area[0], ex) - lx,\n                            Math.min(area[3] + area[1], ey) - ly,\n                        ];\n                    } else {\n                        this._scissor = [sx, sy, ex - sx, ey - sy];\n                    }\n                } else {\n                    // No clipping: reuse parent scissor.\n                    this._scissor = this._parent!._useRenderToTexture\n                        ? this._parent!._viewport\n                        : this._parent!._scissor;\n                }\n            }\n\n            // Calculate the outOfBounds margin.\n            if (this._boundsMargin) {\n                this._recBoundsMargin = this._boundsMargin;\n            } else {\n                this._recBoundsMargin = this._parent!._recBoundsMargin;\n            }\n\n            if (this._onAfterCalcs) {\n                this._onAfterCalcs({ element: this.element });\n                // After calcs may change render coords, scissor and/or recBoundsMargin.\n\n                // Recalculate bbox.\n                if (rComplex) {\n                    sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                    ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                    sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                    ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                } else {\n                    sx = r.px;\n                    ex = r.px + r.ta * bboxW;\n                    sy = r.py;\n                    ey = r.py + r.td * bboxH;\n                }\n\n                if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\n                    const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\n                    const ny = this._x * pr.tc + this._y * pr.td + pr.py;\n                    if (nx < sx) sx = nx;\n                    if (ny < sy) sy = ny;\n                    if (nx > ex) ex = nx;\n                    if (ny > ey) ey = ny;\n                }\n            }\n\n            if (this._parent!._outOfBounds === 2) {\n                // Inherit parent out of boundsness.\n                this._outOfBounds = 2;\n\n                if (this._withinBoundsMargin) {\n                    this._withinBoundsMargin = false;\n                    this.element._disableWithinBoundsMargin();\n                }\n            } else {\n                if (recalc & 6) {\n                    // Recheck if element is out-of-bounds (all settings that affect this should enable recalc bit 2 or 4).\n                    this._outOfBounds = 0;\n                    let withinMargin = true;\n\n                    // Offscreens are always rendered as long as the parent is within bounds.\n                    if (!this._renderToTextureEnabled || !this._texturizer || !this._texturizer.renderOffscreen) {\n                        const scissor = this._scissor!;\n                        if (scissor && (scissor[2] <= 0 || scissor[3] <= 0)) {\n                            // Empty scissor area.\n                            this._outOfBounds = 2;\n                        } else {\n                            // Use bbox to check out-of-boundness.\n                            if (\n                                scissor[0] > ex ||\n                                scissor[1] > ey ||\n                                sx > scissor[0] + scissor[2] ||\n                                sy > scissor[1] + scissor[3]\n                            ) {\n                                this._outOfBounds = 1;\n                            }\n\n                            if (this._outOfBounds) {\n                                if (this._clipping || this._useRenderToTexture || (this._clipbox && bboxW && bboxH)) {\n                                    this._outOfBounds = 2;\n                                }\n                            }\n                        }\n\n                        withinMargin = this._outOfBounds === 0;\n                        if (!withinMargin) {\n                            // Re-test, now with margins.\n                            if (this._recBoundsMargin) {\n                                withinMargin = !(\n                                    ex < scissor[0] - this._recBoundsMargin[2] ||\n                                    ey < scissor[1] - this._recBoundsMargin[3] ||\n                                    sx > scissor[0] + scissor[2] + this._recBoundsMargin[0] ||\n                                    sy > scissor[1] + scissor[3] + this._recBoundsMargin[1]\n                                );\n                            } else {\n                                withinMargin = !(\n                                    ex < scissor[0] - 100 ||\n                                    ey < scissor[1] - 100 ||\n                                    sx > scissor[0] + scissor[2] + 100 ||\n                                    sy > scissor[1] + scissor[3] + 100\n                                );\n                            }\n                            if (withinMargin && this._outOfBounds === 2) {\n                                // Children must be visited because they may contain elements that are within margin, so must be visible.\n                                this._outOfBounds = 1;\n                            }\n                        }\n                    }\n\n                    if (this._withinBoundsMargin !== withinMargin) {\n                        this._withinBoundsMargin = withinMargin;\n\n                        if (this._withinBoundsMargin) {\n                            // This may update things (txLoaded events) in the element itself, but also in descendants and ancestors.\n\n                            // Changes in ancestors should be executed during the next call of the stage update. But we must\n                            // take care that the _recalc and _hasUpdates flags are properly registered. That's why we clear\n                            // both before entering the children, and use _pRecalc to transfer inherited updates instead of\n                            // _recalc directly.\n\n                            // Changes in descendants are automatically executed within the current update loop, though we must\n                            // take care to not update the hasUpdates flag unnecessarily in ancestors. We achieve this by making\n                            // sure that the hasUpdates flag of this element is turned on, which blocks it for ancestors.\n                            this._hasUpdates = true;\n\n                            const savedRecalc = this.flags;\n                            this.flags = 0;\n                            this.element._enableWithinBoundsMargin();\n\n                            if (this.flags) {\n                                this.flags = savedRecalc | this.flags;\n\n                                // This element needs to be re-updated now, because we want the dimensions (and other changes) to be updated.\n                                return this.update();\n                            }\n\n                            this.flags = savedRecalc;\n                        } else {\n                            this.element._disableWithinBoundsMargin();\n                        }\n                    }\n                }\n            }\n\n            if (this._useRenderToTexture) {\n                // Set viewport necessary for children scissor calculation.\n                if (this._viewport) {\n                    this._viewport[2] = bboxW;\n                    this._viewport[3] = bboxH;\n                } else {\n                    this._viewport = [0, 0, bboxW, bboxH];\n                }\n            }\n\n            // Copy inheritable flags (except layout).\n            this.updatedFlags = this.flags & 151;\n\n            // Clear flags so that future updates are properly detected.\n            this.flags = 0;\n            this._hasUpdates = false;\n\n            if (this._outOfBounds < 2) {\n                if (this._useRenderToTexture) {\n                    if (this._worldContext.isIdentity()) {\n                        // Optimization.\n                        // The world context is already identity: use the world context as render context to prevents the\n                        // ancestors from having to update the render context.\n                        this._renderContext = this._worldContext;\n                    } else {\n                        // Temporarily replace the render coord attribs by the identity matrix.\n                        // This allows the children to calculate the render context.\n                        this._renderContext = ElementCoreContext.IDENTITY;\n                    }\n                }\n\n                if (this._children) {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        this._children[i].update();\n                    }\n                }\n\n                if (this._useRenderToTexture) {\n                    this._renderContext = r;\n                }\n            } else {\n                if (this._children) {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._hasUpdates) {\n                            this._children[i].update();\n                        } else {\n                            // Make sure we don't lose the 'inherited' updates when they become active again.\n                            this._children[i].flags |= this.updatedFlags;\n                            this._children[i].updateOutOfBounds();\n                        }\n                    }\n                }\n            }\n\n            if (this._onAfterUpdate) {\n                this._onAfterUpdate({ element: this.element });\n            }\n        } else {\n            if (this.context.updateTreeOrder === -1 || this._updateTreeOrder >= this.context.updateTreeOrder) {\n                // If new tree order does not interfere with the current (gaps allowed) there's no need to traverse the branch.\n                this.context.updateTreeOrder = -1;\n            } else {\n                this.updateTreeOrder();\n            }\n        }\n    }\n\n    _applyRelativeDimFuncs() {\n        const layoutParent = this.getLayoutParent()!;\n        if (this._relFuncFlags & 1) {\n            const x = this._funcX!(layoutParent._w);\n            if (x !== this._x) {\n                this._localPx += x - this._x;\n                this._x = x;\n            }\n        }\n        if (this._relFuncFlags & 2) {\n            const y = this._funcY!(layoutParent._h);\n            if (y !== this._y) {\n                this._localPy += y - this._y;\n                this._y = y;\n            }\n        }\n\n        let changedDims = false;\n        if (this._relFuncFlags & 4) {\n            const w = this._funcW!(layoutParent._w);\n            if (w !== this._w) {\n                this._w = w;\n                changedDims = true;\n            }\n        }\n        if (this._relFuncFlags & 8) {\n            const h = this._funcH!(layoutParent._h);\n            if (h !== this._h) {\n                this._h = h;\n                changedDims = true;\n            }\n        }\n\n        if (changedDims) {\n            this.onDimensionsChanged();\n        }\n    }\n\n    private getLayoutParent() {\n        let current: ElementCore = this.getParent()!;\n        while (current.skipInLayout) {\n            const parent = current.getParent();\n            if (!parent) return current;\n            current = parent;\n        }\n        return current;\n    }\n\n    updateOutOfBounds() {\n        // Propagate outOfBounds flag to descendants (necessary because of z-indexing).\n        // Invisible elements are not drawn anyway. When alpha is updated, so will _outOfBounds.\n        if (this._outOfBounds !== 2 && this._renderContext.alpha > 0) {\n            // Inherit parent out of boundsness.\n            this._outOfBounds = 2;\n\n            if (this._withinBoundsMargin) {\n                this._withinBoundsMargin = false;\n                this.element._disableWithinBoundsMargin();\n            }\n\n            if (this._children) {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._children[i].updateOutOfBounds();\n                }\n            }\n        }\n    }\n\n    updateTreeOrder() {\n        if (this._localAlpha && this._outOfBounds !== 2) {\n            this._updateTreeOrder = this.context.updateTreeOrder++;\n\n            if (this._children) {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._children[i].updateTreeOrder();\n                }\n            }\n        }\n    }\n\n    _renderSimple() {\n        this._hasRenderUpdates = 0;\n\n        if (this._zSort) {\n            this.sortZIndexedChildren();\n        }\n\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\n            const renderState = this.renderState;\n\n            if (this._outOfBounds === 0 && this._displayedTextureSource) {\n                renderState.setShader(this.activeShader, this._shaderOwner);\n                renderState.setScissor(this._scissor!);\n                renderState.addElementCore(this);\n            }\n\n            // Also add children to the VBO.\n            if (this._children) {\n                if (this._zContextUsage) {\n                    for (let i = 0, n = this._zIndexedChildren!.length; i < n; i++) {\n                        this._zIndexedChildren![i].render();\n                    }\n                } else {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._zIndex === 0) {\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                            this._children[i].render();\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    _renderAdvanced() {\n        const hasRenderUpdates = this._hasRenderUpdates;\n\n        // We must clear the hasRenderUpdates flag before rendering, because updating result textures in combination\n        // with z-indexing may trigger render updates on a render branch that is 'half done'.\n        // We need to ensure that the full render branch is marked for render updates, not only half (leading to freeze).\n        this._hasRenderUpdates = 0;\n\n        if (this._zSort) {\n            this.sortZIndexedChildren();\n        }\n\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\n            const renderState = this.renderState;\n\n            let mustRenderChildren = true;\n            let renderTextureInfo!: RenderTextureInfo;\n            let prevRenderTextureInfo;\n            if (this._useRenderToTexture) {\n                if (this._w === 0 || this._h === 0) {\n                    // Ignore this branch and don't draw anything.\n                    return;\n                } else if (!this._texturizer!.hasRenderTexture() || hasRenderUpdates >= 3) {\n                    // Switch to default shader for building up the render texture.\n                    renderState.setShader(renderState.defaultShader, this);\n\n                    prevRenderTextureInfo = renderState.renderTextureInfo;\n\n                    renderTextureInfo = {\n                        renderTexture: undefined,\n                        reusableTexture: undefined,\n                        reusableRenderStateOffset: 0, // Set by CoreRenderState.\n                        w: this._w,\n                        h: this._h,\n                        empty: true,\n                        cleared: false,\n                        ignore: false,\n                        cache: false,\n                    };\n\n                    if (\n                        this._texturizer!.hasResultTexture() ||\n                        (!renderState.isCachingTexturizer && hasRenderUpdates < 3)\n                    ) {\n                        /**\n                         * Normally, we cache render textures. But there are exceptions to preserve memory usage!\n                         *\n                         * The rule is, that caching for a specific render texture is only enabled if:\n                         * - There is a result texture to be updated.\n                         * - There were no render updates -within the contents- since last frame (ElementCore.hasRenderUpdates < 3)\n                         * - AND there are no ancestors that are being cached during this frame (CoreRenderState.isCachingTexturizer)\n                         *   If an ancestor is cached anyway, deeper caches are unlikely to be used. If the top level is to\n                         *   change later while a lower one is not, that lower level will be cached instead at that instant.\n                         *\n                         * In some cases, this prevents having to cache all blur levels and stages, saving a huge amount\n                         * of GPU memory!\n                         *\n                         * Especially when using multiple stacked layers of the same dimensions that are render-to-texture this will have a very\n                         * noticable effect on performance as less render textures need to be allocated.\n                         */\n                        renderTextureInfo.cache = true;\n                        renderState.isCachingTexturizer = true;\n                    }\n\n                    if (!this._texturizer!.hasResultTexture()) {\n                        // We can already release the current texture to the pool, as it will be rebuild anyway.\n                        // In case of multiple layers of 'filtering', this may save us from having to create one\n                        //  render-to-texture layer.\n                        // Notice that we don't do this when there is a result texture, as any other element may rely on\n                        //  that result texture being filled.\n                        this._texturizer!.releaseRenderTexture();\n                    }\n\n                    renderState.setRenderTextureInfo(renderTextureInfo);\n                    renderState.setScissor(undefined);\n\n                    if (this._displayedTextureSource) {\n                        const r = this._renderContext;\n\n                        // Use an identity context for drawing the displayed texture to the render texture.\n                        this._renderContext = ElementCoreContext.IDENTITY;\n\n                        // Add displayed texture source in local coordinates.\n                        this.renderState.addElementCore(this);\n\n                        this._renderContext = r;\n                    }\n                } else {\n                    mustRenderChildren = false;\n                }\n            } else {\n                if (this._outOfBounds === 0 && this._displayedTextureSource) {\n                    renderState.setShader(this.activeShader, this._shaderOwner);\n                    renderState.setScissor(this._scissor);\n                    this.renderState.addElementCore(this);\n                }\n            }\n\n            // Also add children to the VBO.\n            if (mustRenderChildren && this._children) {\n                if (this._zContextUsage) {\n                    for (let i = 0, n = this._zIndexedChildren!.length; i < n; i++) {\n                        this._zIndexedChildren![i].render();\n                    }\n                } else {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._zIndex === 0) {\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                            this._children[i].render();\n                        }\n                    }\n                }\n            }\n\n            if (this._useRenderToTexture) {\n                let updateResultTexture = false;\n                if (mustRenderChildren) {\n                    // Finished refreshing renderTexture.\n                    renderState.finishedRenderTexture();\n\n                    // If nothing was rendered, we store a flag in the texturizer and prevent unnecessary\n                    //  render-to-texture and filtering.\n                    this._texturizer!.empty = renderTextureInfo.empty;\n\n                    if (renderTextureInfo.empty) {\n                        // We ignore empty render textures and do not draw the final quad.\n\n                        // The following cleans up memory and enforces that the result texture is also cleared.\n                        this._texturizer!.releaseRenderTexture();\n                    } else if (renderTextureInfo.reusableTexture) {\n                        // If nativeTexture is set, we can reuse that directly instead of creating a new render texture.\n                        this._texturizer!.reuseTextureAsRenderTexture(renderTextureInfo.reusableTexture);\n\n                        renderTextureInfo.ignore = true;\n                    } else {\n                        if (this._texturizer!.renderTextureReused) {\n                            // Quad operations must be written to a render texture actually owned.\n                            this._texturizer!.releaseRenderTexture();\n                        }\n                        // Just create the render texture.\n                        renderTextureInfo.renderTexture = this._texturizer!.getRenderTexture();\n                    }\n\n                    // Restore the parent's render texture.\n                    renderState.setRenderTextureInfo(prevRenderTextureInfo);\n\n                    updateResultTexture = true;\n                }\n\n                if (!this._texturizer!.empty) {\n                    const resultTexture = this._texturizer!.getResultTexture();\n                    if (updateResultTexture) {\n                        if (resultTexture) {\n                            // Logging the update frame can be handy.\n                            resultTexture.updateFrame = this.element.stage.frameCounter;\n                        }\n                        this._texturizer!.updateResultTexture();\n                    }\n\n                    if (!this._texturizer!.renderOffscreen) {\n                        // Render result texture to the actual render target.\n                        renderState.setShader(this.activeShader, this._shaderOwner);\n                        renderState.setScissor(this._scissor);\n\n                        // If no render texture info is set, the cache can be reused.\n                        const cache = !renderTextureInfo || renderTextureInfo.cache;\n\n                        renderState.setTexturizer(this._texturizer!, cache);\n                        this._stashTexCoords();\n                        if (!this._texturizer!.colorize) this._stashColors();\n                        this.renderState.addElementCore(this);\n                        if (!this._texturizer!.colorize) this._unstashColors();\n                        this._unstashTexCoords();\n                        renderState.setTexturizer(undefined, false);\n                    }\n                }\n            }\n\n            if (renderTextureInfo && renderTextureInfo.cache) {\n                // Allow siblings to cache.\n                renderState.isCachingTexturizer = false;\n            }\n        }\n    }\n\n    get zSort() {\n        return this._zSort;\n    }\n\n    sortZIndexedChildren() {\n        /**\n         * We want to avoid resorting everything. Instead, we do a single pass of the full array:\n         * - filtering out elements with a different zParent than this (were removed)\n         * - filtering out, but also gathering (in a temporary array) the elements that have zIndexResort flag\n         * - then, finally, we merge-sort both the new array and the 'old' one\n         * - element may have been added 'double', so when merge-sorting also check for doubles.\n         * - if the old one is larger (in size) than it should be, splice off the end of the array.\n         */\n\n        const n = this._zIndexedChildren!.length;\n        let ptr = 0;\n        const a = this._zIndexedChildren!;\n\n        // Notice that items may occur multiple times due to z-index changing.\n        const b = [];\n        for (let i = 0; i < n; i++) {\n            if (a[i]._zParent === this) {\n                if (a[i]._zIndexResort) {\n                    b.push(a[i]);\n                } else {\n                    if (ptr !== i) {\n                        a[ptr] = a[i];\n                    }\n                    ptr++;\n                }\n            }\n        }\n\n        const m = b.length;\n        if (m) {\n            for (let j = 0; j < m; j++) {\n                b[j]._zIndexResort = false;\n            }\n\n            b.sort(ElementCore.sortZIndexedChildren);\n            const amount = ptr;\n            if (!amount) {\n                ptr = 0;\n                let j = 0;\n                do {\n                    a[ptr++] = b[j++];\n                } while (j < m);\n\n                if (a.length > ptr) {\n                    // Slice old (unnecessary) part off array.\n                    a.splice(ptr);\n                }\n            } else {\n                // Merge-sort arrays;\n                ptr = 0;\n                let i = 0;\n                let j = 0;\n                const mergeResult: ElementCore[] = [];\n                do {\n                    const v =\n                        a[i]._zIndex === b[j]._zIndex\n                            ? a[i]._updateTreeOrder - b[j]._updateTreeOrder\n                            : a[i]._zIndex - b[j]._zIndex;\n\n                    const add = v > 0 ? b[j++] : a[i++];\n\n                    if (ptr === 0 || mergeResult[ptr - 1] !== add) {\n                        mergeResult[ptr++] = add;\n                    }\n\n                    if (i >= amount) {\n                        do {\n                            const elementCore = b[j++];\n                            if (ptr === 0 || mergeResult[ptr - 1] !== elementCore) {\n                                mergeResult[ptr++] = elementCore;\n                            }\n                        } while (j < m);\n                        break;\n                    } else if (j >= m) {\n                        do {\n                            const elementCore = a[i++];\n                            if (ptr === 0 || mergeResult[ptr - 1] !== elementCore) {\n                                mergeResult[ptr++] = elementCore;\n                            }\n                        } while (i < amount);\n                        break;\n                    }\n                } while (true);\n\n                this._zIndexedChildren = mergeResult;\n            }\n        } else {\n            if (a.length > ptr) {\n                // Slice old (unnecessary) part off array.\n                a.splice(ptr);\n            }\n        }\n\n        this._zSort = false;\n    }\n\n    get localTa() {\n        return this._localTa;\n    }\n\n    get localTb() {\n        return this._localTb;\n    }\n\n    get localTc() {\n        return this._localTc;\n    }\n\n    get localTd() {\n        return this._localTd;\n    }\n\n    get element() {\n        return this._element;\n    }\n\n    get renderUpdates() {\n        return this._hasRenderUpdates;\n    }\n\n    get texturizer() {\n        if (!this._texturizer) {\n            this._texturizer = new ElementTexturizer(this);\n        }\n        return this._texturizer;\n    }\n\n    getCornerPoints() {\n        const w = this._worldContext;\n\n        return [\n            w.px,\n            w.py,\n            w.px + this._w * w.ta,\n            w.py + this._w * w.tc,\n            w.px + this._w * w.ta + this._h * w.tb,\n            w.py + this._w * w.tc + this._h * w.td,\n            w.px + this._h * w.tb,\n            w.py + this._h * w.td,\n        ];\n    }\n\n    getRenderTextureCoords(relX: number, relY: number) {\n        const r = this._renderContext;\n        return [r.px + r.ta * relX + r.tb * relY, r.py + r.tc * relX + r.td * relY];\n    }\n\n    getAbsoluteCoords(relX: number, relY: number) {\n        const w = this._renderContext;\n        return [w.px + w.ta * relX + w.tb * relY, w.py + w.tc * relX + w.td * relY];\n    }\n\n    get skipInLayout(): boolean {\n        return this._layout ? this._layout.skip : false;\n    }\n\n    set skipInLayout(v: boolean) {\n        if (this.skipInLayout !== v) {\n            // Force an update as absolute layout may be affected (on itself or on layout children).\n            this._triggerRecalcTranslate();\n            this.layout.skip = v;\n        }\n    }\n\n    get layout(): FlexNode {\n        this._ensureLayout();\n        return this._layout!;\n    }\n\n    hasLayout(): boolean {\n        return !!this._layout;\n    }\n\n    getLayout(): FlexNode {\n        return this.layout;\n    }\n\n    enableFlexLayout() {\n        this._ensureLayout();\n    }\n\n    private _ensureLayout() {\n        if (!this._layout) {\n            this._layout = new FlexNode(this);\n        }\n    }\n\n    disableFlexLayout() {\n        this._triggerRecalcTranslate();\n    }\n\n    hasFlexLayout() {\n        return this._layout && this._layout.isEnabled();\n    }\n\n    private isFlexLayoutRoot() {\n        return this._layout && this._layout.isLayoutRoot();\n    }\n\n    getFlexContainer(): FlexContainer | undefined {\n        return this.layout.isFlexEnabled() ? this.layout.flex : undefined;\n    }\n\n    getFlexItem(): FlexItem | undefined {\n        return this.layout.flexItem;\n    }\n\n    triggerLayout() {\n        this.setFlag(256);\n    }\n\n    _triggerRecalcTranslate() {\n        this.setFlag(2);\n    }\n\n    public getRenderWidth() {\n        return this._w;\n    }\n\n    public getRenderHeight() {\n        return this._h;\n    }\n\n    public isWithinBoundsMargin(): boolean {\n        return this._withinBoundsMargin;\n    }\n\n    get parent() {\n        return this._parent;\n    }\n\n    hasTexturizer(): boolean {\n        return !!this._texturizer;\n    }\n\n    getChildren(): ElementCore[] | undefined {\n        return this._children;\n    }\n\n    getSourceFuncX() {\n        return this._funcX;\n    }\n\n    getSourceFuncY() {\n        return this._funcY;\n    }\n\n    getSourceFuncW() {\n        return this._funcW;\n    }\n\n    getSourceFuncH() {\n        return this._funcH;\n    }\n\n    static sortZIndexedChildren(a: ElementCore, b: ElementCore) {\n        return a._zIndex === b._zIndex ? a._updateTreeOrder - b._updateTreeOrder : a._zIndex - b._zIndex;\n    }\n\n    getSourceX() {\n        return this._sx;\n    }\n\n    getSourceY() {\n        return this._sy;\n    }\n\n    getSourceW() {\n        // If no source width is specified, the texture width is automatically used.\n        return this._sw || this._tw;\n    }\n\n    getSourceH() {\n        return this._sh || this._th;\n    }\n\n    getLayoutX() {\n        return this._x;\n    }\n\n    getLayoutY() {\n        return this._y;\n    }\n\n    getLayoutW() {\n        return this._w;\n    }\n\n    getLayoutH() {\n        return this._h;\n    }\n\n    convertWorldCoordsToLocal(worldX: number, worldY: number): number[] {\n        const wc = this._worldContext;\n        worldX = worldX - wc.px;\n        worldY = worldY - wc.py;\n        if (wc.isIdentity()) {\n            return [worldX, worldY];\n        } else if (wc.isSquare()) {\n            return [worldX / wc.ta, worldY / wc.td];\n        } else {\n            // Solve linear system of equations by substitution.\n            const tcTa = wc.tc / wc.ta;\n            const iy = (worldY - tcTa * worldX) / (wc.td - wc.tb * tcTa);\n            const ix = (worldX - wc.tb * iy) / wc.ta;\n            return [ix, iy];\n        }\n    }\n\n    public isCoordsWithinElement(localOffsetX: number, localOffsetY: number) {\n        return localOffsetX >= 0 && localOffsetY >= 0 && localOffsetX < this._w && localOffsetY < this._h;\n    }\n\n    private getCoordinatesOrigin(): ElementCore {\n        const parent = this._parent!;\n        if (!parent) {\n            return this;\n        } else if (parent._useRenderToTexture) {\n            return parent;\n        } else {\n            return parent.getCoordinatesOrigin();\n        }\n    }\n\n    private isWorldCoordinatesInScissor(worldX: number, worldY: number) {\n        const s = this._scissor;\n        if (s) {\n            const renderRoot = this.getCoordinatesOrigin();\n            const [rx, ry] = renderRoot.convertWorldCoordsToLocal(worldX, worldY);\n\n            if (rx < s[0] || ry < s[1] || rx >= s[0] + s[2] || ry >= s[1] + s[3]) {\n                return false;\n            } else {\n                return true;\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @pre element core must be up-to-date (update method called).\n     */\n    gatherElementsAtCoordinates(worldX: number, worldY: number, results: ElementCoordinatesInfo[]) {\n        let withinBounds = false;\n\n        if (!this._renderContext.alpha) {\n            return;\n        }\n\n        const [offsetX, offsetY] = this.convertWorldCoordsToLocal(worldX, worldY);\n\n        // Make coords relative to world context.\n        withinBounds = this.isCoordsWithinElement(offsetX, offsetY);\n\n        if (withinBounds && this.zIndex !== 0) {\n            // We must make sure that the not yet visited ancestors do not clip out this texture.\n            // renderToTexture is no problem as it creates a new z context so must already be checked.\n            // clipping is a possible problem, so we must check the scissor.\n            if (!this.isWorldCoordinatesInScissor(worldX, worldY)) {\n                withinBounds = false;\n            }\n        }\n\n        if (withinBounds) {\n            results.push({ offsetX, offsetY, element: this.element });\n        }\n\n        // When the render context is not square, clipping is ignored while rendering.\n        const useClipping = this._useRenderToTexture || (this._clipping && this._renderContext.isSquare());\n        const mustRecurse = withinBounds || !useClipping;\n\n        if (this._children && mustRecurse) {\n            if (this._zContextUsage) {\n                for (let i = 0, n = this._zIndexedChildren!.length; i < n; i++) {\n                    this._zIndexedChildren![i].gatherElementsAtCoordinates(worldX, worldY, results);\n                }\n            } else {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    if (this._children[i]._zIndex === 0) {\n                        // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                        this._children[i].gatherElementsAtCoordinates(worldX, worldY, results);\n                    }\n                }\n            }\n        }\n    }\n\n    checkWithinBounds() {\n        this.setFlag(6);\n    }\n}\n\nexport type ElementCoordinatesInfo<DATA = any> = {\n    offsetX: number;\n    offsetY: number;\n    element: Element<DATA>;\n};\n\nexport type FunctionX = (parentW: number) => number;\nexport type FunctionY = (parentH: number) => number;\nexport type FunctionW = (parentW: number) => number;\nexport type FunctionH = (parentH: number) => number;\n","import { TextureSource } from \"../TextureSource\";\nimport { Element } from \"../Element\";\nimport { ElementCore } from \"./ElementCore\";\nimport { CoreContext } from \"./CoreContext\";\nimport { RenderTexture } from \"../../renderer/RenderTexture\";\nimport { NativeTexture } from \"../../renderer/NativeTexture\";\n\nexport class ElementTexturizer {\n    private _element: Element = this._core.element;\n    private context: CoreContext = this._core.context;\n    private _enabled: boolean = false;\n\n    // In lazy mode, render to texture will be disabled when there are changes since the last frame.\n    public lazy: boolean = false;\n\n    private _colorize: boolean = false;\n    private _renderTexture?: RenderTexture = undefined;\n    private _reusedTexture?: NativeTexture = undefined;\n    private _resultTextureSource?: TextureSource = undefined;\n    private _renderOffscreen: boolean = false;\n    public empty: boolean = false;\n\n    constructor(private _core: ElementCore) {}\n\n    get enabled() {\n        return this._enabled;\n    }\n\n    set enabled(v: boolean) {\n        this._enabled = v;\n        this._core.updateRenderToTextureEnabled();\n    }\n\n    get renderOffscreen() {\n        return this._renderOffscreen;\n    }\n\n    set renderOffscreen(v: boolean) {\n        this._renderOffscreen = v;\n        this._core.setHasRenderUpdates(1);\n\n        this._core.checkWithinBounds();\n    }\n\n    get colorize() {\n        return this._colorize;\n    }\n\n    set colorize(v: boolean) {\n        if (this._colorize !== v) {\n            this._colorize = v;\n\n            // Only affects the finally drawn quad.\n            this._core.setHasRenderUpdates(1);\n        }\n    }\n\n    _getTextureSource() {\n        if (!this._resultTextureSource) {\n            this._resultTextureSource = new TextureSource(this._element.stage.textureManager);\n            this.updateResultTexture();\n        }\n        return this._resultTextureSource;\n    }\n\n    hasResultTexture() {\n        return !!this._resultTextureSource;\n    }\n\n    resultTextureInUse() {\n        return this._resultTextureSource && this._resultTextureSource.hasEnabledElements();\n    }\n\n    updateResultTexture() {\n        const resultTexture = this.getResultTexture();\n        if (this._resultTextureSource) {\n            if (this._resultTextureSource.nativeTexture !== resultTexture) {\n                const w = resultTexture ? resultTexture.w : 0;\n                const h = resultTexture ? resultTexture.h : 0;\n                this._resultTextureSource.replaceNativeTexture(resultTexture, w, h);\n            }\n\n            // Texture will be updated: all elements using the source need to be updated as well.\n            this._resultTextureSource.forEachEnabledElement((element) => {\n                element._updateTextureDimensions();\n                element.core.setHasRenderUpdates(3);\n            });\n        }\n    }\n\n    mustRenderToTexture() {\n        // Check if we must really render as texture.\n        if (this._enabled && !this.lazy) {\n            return true;\n        } else if (this._enabled && this.lazy && !this._core.hasRenderTextureUpdates()) {\n            // Static-only: if renderToTexture did not need to update during last drawn frame, generate it as a cache.\n            return true;\n        }\n        return false;\n    }\n\n    deactivate() {\n        this.release();\n    }\n\n    get renderTextureReused() {\n        return !!this._reusedTexture;\n    }\n\n    release() {\n        this.releaseRenderTexture();\n    }\n\n    releaseRenderTexture() {\n        if (this._renderTexture) {\n            this.context.releaseRenderTexture(this._renderTexture);\n            this._renderTexture = undefined;\n            this.updateResultTexture();\n        }\n    }\n\n    // Reuses the specified texture as the render texture (in ancestor).\n    reuseTextureAsRenderTexture(nativeTexture: NativeTexture) {\n        if (this._renderTexture !== nativeTexture) {\n            this.releaseRenderTexture();\n            this._reusedTexture = nativeTexture;\n        }\n    }\n\n    hasRenderTexture() {\n        return !!this._renderTexture;\n    }\n\n    getRenderTexture() {\n        if (!this._renderTexture) {\n            this._renderTexture = this.context.allocateRenderTexture(this._core.getLayoutW(), this._core.getLayoutH());\n            this._reusedTexture = undefined;\n        }\n        return this._renderTexture;\n    }\n\n    getResultTexture(): NativeTexture | undefined {\n        return this._reusedTexture || this._renderTexture;\n    }\n}\n","export class ElementCoreContext {\n    public alpha: number = 1;\n    public px: number = 0;\n    public py: number = 0;\n    public ta: number = 1;\n    public tb: number = 0;\n    public tc: number = 0;\n    public td: number = 1;\n\n    isIdentity() {\n        return (\n            this.alpha === 1 &&\n            this.px === 0 &&\n            this.py === 0 &&\n            this.ta === 1 &&\n            this.tb === 0 &&\n            this.tc === 0 &&\n            this.td === 1\n        );\n    }\n\n    isSquare() {\n        return this.tb === 0 && this.tc === 0;\n    }\n\n    static IDENTITY = new ElementCoreContext();\n}\n","import { FlexContainer } from \"./FlexContainer\";\nimport { FlexItem } from \"./FlexItem\";\nimport { FlexNode } from \"./FlexNode\";\nimport { FlexSubject } from \"./FlexSubject\";\nimport { FlexTarget } from \"./FlexTarget\";\n\nexport { FlexDirection, AlignContentMode, JustifyContentMode, AlignItemsMode } from \"./FlexContainer\";\n\nexport { FlexTarget, FlexSubject, FlexNode, FlexItem, FlexContainer };\n","import { ContentAligner } from \"./ContentAligner\";\nimport { LineLayouter } from \"./LineLayouter\";\nimport { ItemCoordinatesUpdater } from \"./ItemCoordinatesUpdater\";\nimport { FlexContainer } from \"../FlexContainer\";\nimport { FlexNode } from \"../FlexNode\";\n\n/**\n * Layouts a flex container (and descendants).\n */\nexport class FlexLayouter {\n    private lineLayouter: LineLayouter = new LineLayouter(this);\n\n    private resizingMainAxis: boolean = false;\n    private resizingCrossAxis: boolean = false;\n\n    private cachedInitialWidth: number = 0;\n    private cachedInitialHeight: number = 0;\n\n    private cachedLayoutWidth: number = 0;\n    private cachedLayoutHeight: number = 0;\n\n    private shrunk: boolean = false;\n\n    private totalCrossAxisSize: number = 0;\n\n    constructor(public container: FlexContainer) {}\n\n    layoutTree() {\n        if (this.isSubTree()) {\n            // This can occur if only a part of the flex hierarchy needs to be updated.\n            if (!this.shouldSkipSubTree()) {\n                this.updateSubTreeLayout();\n                this.updateItemCoords();\n            }\n        } else {\n            this.updateTreeLayout();\n            this.updateItemCoords();\n        }\n    }\n\n    private isSubTree() {\n        return !!this.item.flexParent;\n    }\n\n    private shouldSkipSubTree() {\n        // If the recalc flag has already been cleared when getting here, we can assume that this subtree was already\n        // updated as part of a parent flex tree update. In that case we must not update this subtree individually as it\n        // may fail to take the flex ancestors into account - giving incorrect results.\n        return !this.container.node.isChanged();\n    }\n\n    updateTreeLayout() {\n        if (this.recalc) {\n            this.performUpdateLayoutTree();\n        } else {\n            this.performUpdateLayoutTreeFromCache();\n        }\n    }\n\n    private performUpdateLayoutTree() {\n        this.setCachedInitialSizes();\n        this.initializeAxisSizes();\n        this.layoutAxes();\n        this.setLayoutCache();\n    }\n\n    private setCachedInitialSizes() {\n        this.cachedInitialWidth = this.item.getRelAxisSize(true);\n        this.cachedInitialHeight = this.item.getRelAxisSize(false);\n    }\n\n    private setLayoutCache() {\n        this.cachedLayoutWidth = this.item.getAxisLayoutSize(true);\n        this.cachedLayoutHeight = this.item.getAxisLayoutSize(false);\n    }\n\n    private performUpdateLayoutTreeFromCache() {\n        if (this.isInitialSizeCacheValid()) {\n            this.useLayoutCache();\n        } else {\n            this.item.enableLocalRecalcFlag();\n            this.performUpdateLayoutTree();\n        }\n    }\n\n    private useLayoutCache() {\n        this.item.setAxisLayoutSize(true, this.cachedLayoutWidth);\n        this.item.setAxisLayoutSize(false, this.cachedLayoutHeight);\n    }\n\n    private isInitialSizeCacheValid() {\n        const initialWidth = this.item.getRelAxisSize(true);\n        const initialHeight = this.item.getRelAxisSize(false);\n        return this.cachedInitialWidth === initialWidth && this.cachedInitialHeight === initialHeight;\n    }\n\n    updateItemCoords() {\n        const updater = new ItemCoordinatesUpdater(this);\n        updater.finalize();\n    }\n\n    private updateSubTreeLayout() {\n        // The dimensions of this container are guaranteed not to have changed.\n        // That's why we can safely 'reuse' those and re-layout the contents.\n        const crossAxisSize = this.crossAxisSize;\n        this.layoutMainAxis();\n        this.performResizeCrossAxis(crossAxisSize);\n    }\n\n    private initializeAxisSizes() {\n        if (this.item.isFlexItemEnabled()) {\n            if (this.item.flexItem) {\n                this.item.flexItem.resetLayoutSize();\n            }\n        } else {\n            this.mainAxisSize = this.getMainAxisBasis();\n            this.crossAxisSize = this.getCrossAxisBasis();\n        }\n        this.resizingMainAxis = false;\n        this.resizingCrossAxis = false;\n        this.shrunk = false;\n    }\n\n    private layoutAxes() {\n        this.layoutMainAxis();\n        this.layoutCrossAxis();\n    }\n\n    private layoutMainAxis() {\n        this.lineLayouter.layoutLines();\n        this.fitMainAxisSizeToContents();\n    }\n\n    getLines() {\n        return this.lineLayouter.getLines();\n    }\n\n    private fitMainAxisSizeToContents() {\n        if (!this.resizingMainAxis) {\n            if (this.isMainAxisFitToContents()) {\n                this.mainAxisSize = this.lineLayouter.getMainAxisContentSize();\n            }\n        }\n    }\n\n    private layoutCrossAxis() {\n        const aligner = new ContentAligner(this);\n        this.totalCrossAxisSize = aligner.getTotalCrossAxisSize();\n        this.fitCrossAxisSizeToContents();\n        aligner.align();\n    }\n\n    private fitCrossAxisSizeToContents() {\n        if (!this.resizingCrossAxis) {\n            if (this.isCrossAxisFitToContents()) {\n                this.crossAxisSize = this.totalCrossAxisSize;\n            }\n        }\n    }\n\n    isWrapping() {\n        return this.container.wrap;\n    }\n\n    isAxisFitToContents(horizontal: boolean) {\n        if (this.horizontal === horizontal) {\n            return this.isMainAxisFitToContents();\n        } else {\n            return this.isCrossAxisFitToContents();\n        }\n    }\n\n    isMainAxisFitToContents() {\n        return !this.isWrapping() && !this.hasFixedMainAxisBasis();\n    }\n\n    isCrossAxisFitToContents() {\n        return !this.hasFixedCrossAxisBasis();\n    }\n\n    private hasFixedMainAxisBasis() {\n        return !this.item.isZeroAxisSize(this.horizontal);\n    }\n\n    private hasFixedCrossAxisBasis() {\n        return !this.item.isZeroAxisSize(!this.horizontal);\n    }\n\n    getAxisMinLineSize(horizontal: boolean) {\n        if (this.horizontal === horizontal) {\n            return this.lineLayouter.getMainAxisMinSize();\n        } else {\n            return this.lineLayouter.getCrossAxisMinSize();\n        }\n    }\n\n    resizeMainAxis(size: number) {\n        if (this.mainAxisSize !== size) {\n            if (this.recalc > 0) {\n                this.performResizeMainAxis(size);\n            } else {\n                if (this.checkValidCacheMainAxisResize(size)) {\n                    this.mainAxisSize = size;\n                    this.fitCrossAxisSizeToContents();\n                } else {\n                    // Cache miss.\n                    this.item.enableLocalRecalcFlag();\n                    this.performResizeMainAxis(size);\n                }\n            }\n        }\n    }\n\n    private checkValidCacheMainAxisResize(size: number) {\n        const isFinalMainAxisSize = size === this.subjectMainAxisSize;\n        if (isFinalMainAxisSize) {\n            return true;\n        }\n        const canIgnoreCacheMiss = !this.isCrossAxisFitToContents();\n\n        // Allow other main axis resizes and check if final resize matches the subject main axis size\n        //  (ItemCoordinatesUpdater).\n        return canIgnoreCacheMiss;\n    }\n\n    performResizeMainAxis(size: number) {\n        this.shrunk = size < this.mainAxisSize;\n\n        this.mainAxisSize = size;\n\n        this.resizingMainAxis = true;\n        this.layoutAxes();\n        this.resizingMainAxis = false;\n    }\n\n    resizeCrossAxis(size: number) {\n        if (this.crossAxisSize !== size) {\n            if (this.recalc > 0) {\n                this.performResizeCrossAxis(size);\n            } else {\n                this.crossAxisSize = size;\n            }\n        }\n    }\n\n    performResizeCrossAxis(size: number) {\n        this.crossAxisSize = size;\n\n        this.resizingCrossAxis = true;\n        this.layoutCrossAxis();\n        this.resizingCrossAxis = false;\n    }\n\n    private get subjectMainAxisSize() {\n        return this.horizontal ? this.item.subject.getLayoutW() : this.item.subject.getLayoutH();\n    }\n\n    getParentFlexContainer() {\n        return this.item.isFlexItemEnabled() ? this.item.flexItem!.getContainer() : undefined;\n    }\n\n    private getMainAxisBasis() {\n        return this.item.getRelAxisSize(this.horizontal);\n    }\n\n    private getCrossAxisBasis() {\n        return this.item.getRelAxisSize(!this.horizontal);\n    }\n\n    get horizontal() {\n        return this.container.horizontal;\n    }\n\n    get reverse() {\n        return this.container.reverse;\n    }\n\n    get item() {\n        return this.container.node;\n    }\n\n    get items(): FlexNode[] {\n        return this.item.items;\n    }\n\n    isResizingMainAxis() {\n        return this.resizingMainAxis;\n    }\n\n    isResizingCrossAxis() {\n        return this.resizingCrossAxis;\n    }\n\n    get mainAxisSize() {\n        return this.item.getAxisLayoutSize(this.horizontal);\n    }\n\n    set mainAxisSize(v) {\n        this.item.setAxisLayoutSize(this.horizontal, v);\n    }\n\n    get crossAxisSize() {\n        return this.item.getAxisLayoutSize(!this.horizontal);\n    }\n\n    set crossAxisSize(v) {\n        this.item.setAxisLayoutSize(!this.horizontal, v);\n    }\n\n    hasShrunk() {\n        return this.shrunk;\n    }\n\n    get recalc() {\n        return this.item.recalc;\n    }\n}\n","import { getSpacing } from \"./spacing\";\nimport { FlexLayouter } from \"./FlexLayouter\";\n\nexport class ContentAligner {\n    private totalCrossAxisSize: number = 0;\n\n    constructor(private layout: FlexLayouter) {\n        this.init();\n    }\n\n    private init() {\n        this.totalCrossAxisSize = this.calcTotalCrossAxisSize();\n    }\n\n    private get lines() {\n        return this.layout.getLines()!;\n    }\n\n    align() {\n        const crossAxisSize = this.layout.crossAxisSize;\n        const remainingSpace = crossAxisSize - this.totalCrossAxisSize;\n\n        const { spacingBefore, spacingBetween } = this.getSpacing(remainingSpace);\n\n        const lines = this.lines;\n\n        const mode = this.layout.container.alignContent;\n        let growSize = 0;\n        if (mode === \"stretch\" && lines.length && remainingSpace > 0) {\n            growSize = remainingSpace / lines.length;\n        }\n\n        let currentPos = spacingBefore;\n        for (let i = 0, n = lines.length; i < n; i++) {\n            const crossAxisLayoutOffset = currentPos;\n            const aligner = lines[i].createItemAligner();\n\n            const finalCrossAxisLayoutSize = lines[i].crossAxisLayoutSize + growSize;\n\n            aligner.setCrossAxisLayoutSize(finalCrossAxisLayoutSize);\n            aligner.setCrossAxisLayoutOffset(crossAxisLayoutOffset);\n\n            aligner.align();\n\n            if (aligner.getRecursiveResizeOccured()) {\n                lines[i].setItemPositions();\n            }\n\n            currentPos += finalCrossAxisLayoutSize;\n            currentPos += spacingBetween;\n        }\n    }\n\n    getTotalCrossAxisSize() {\n        return this.totalCrossAxisSize;\n    }\n\n    private calcTotalCrossAxisSize() {\n        const lines = this.lines;\n        let total = 0;\n        for (let i = 0, n = lines.length; i < n; i++) {\n            const line = lines[i];\n            total += line.crossAxisLayoutSize;\n        }\n        return total;\n    }\n\n    private getSpacing(remainingSpace: number) {\n        const mode = this.layout.container.alignContent;\n        const numberOfItems = this.lines.length;\n        return getSpacing(mode, numberOfItems, remainingSpace);\n    }\n}\n","import { LineLayout } from \"./line/LineLayout\";\nimport { FlexLayouter } from \"./FlexLayouter\";\nimport { FlexNode } from \"../FlexNode\";\n\n/**\n * Distributes items over layout lines.\n */\nexport class LineLayouter {\n    private mainAxisMinSize?: number;\n    private crossAxisMinSize?: number;\n    private mainAxisContentSize: number = 0;\n    private lines?: LineLayout[];\n    private curMainAxisPos: number = 0;\n    private mainAxisSize: number = 0;\n    private maxMainAxisPos: number = 0;\n\n    constructor(private _layout: FlexLayouter) {}\n\n    layoutLines() {\n        this.setup();\n        const items = this._layout.items;\n        const wrap = this._layout.isWrapping();\n\n        let startIndex = 0;\n        let i;\n        const n = items.length;\n        for (i = 0; i < n; i++) {\n            const item = items[i];\n\n            this.layoutFlexItem(item);\n\n            // Get predicted main axis size.\n            const itemMainAxisSize = item.flexItem!.getMainAxisLayoutSizeWithPaddingAndMargin();\n\n            if (wrap && i > startIndex) {\n                const isOverflowing = this.curMainAxisPos + itemMainAxisSize > this.mainAxisSize;\n                if (isOverflowing) {\n                    this.layoutLine(startIndex, i - 1);\n                    this.curMainAxisPos = 0;\n                    startIndex = i;\n                }\n            }\n\n            this.addToMainAxisPos(itemMainAxisSize);\n        }\n\n        if (startIndex < i) {\n            this.layoutLine(startIndex, i - 1);\n        }\n    }\n\n    private setup() {\n        this.mainAxisSize = this._layout.mainAxisSize;\n        this.curMainAxisPos = 0;\n        this.maxMainAxisPos = 0;\n        this.lines = [];\n\n        this.mainAxisMinSize = undefined;\n        this.crossAxisMinSize = undefined;\n        this.mainAxisContentSize = 0;\n    }\n\n    private layoutFlexItem(item: FlexNode) {\n        if (item.isFlexEnabled()) {\n            item.flexLayout!.updateTreeLayout();\n        } else {\n            item.flexItem!.resetLayoutSize();\n        }\n    }\n\n    private addToMainAxisPos(itemMainAxisSize: number) {\n        this.curMainAxisPos += itemMainAxisSize;\n        if (this.curMainAxisPos > this.maxMainAxisPos) {\n            this.maxMainAxisPos = this.curMainAxisPos;\n        }\n    }\n\n    private layoutLine(startIndex: number, endIndex: number) {\n        const availableSpace = this.getAvailableMainAxisLayoutSpace();\n        const line = new LineLayout(this._layout, startIndex, endIndex, availableSpace);\n        line.performLayout();\n        this.lines!.push(line);\n\n        if (this.mainAxisContentSize === 0 || this.curMainAxisPos > this.mainAxisContentSize) {\n            this.mainAxisContentSize = this.curMainAxisPos;\n        }\n    }\n\n    private getAvailableMainAxisLayoutSpace() {\n        if (!this._layout.isResizingMainAxis() && this._layout.isMainAxisFitToContents()) {\n            return 0;\n        } else {\n            return this.mainAxisSize - this.curMainAxisPos;\n        }\n    }\n\n    private calcCrossAxisMinSize() {\n        let crossAxisMinSize = 0;\n        const items = this._layout.items;\n        for (let i = 0, n = items.length; i < n; i++) {\n            const item = items[i];\n            const itemCrossAxisMinSize = item.flexItem!.getCrossAxisMinSizeWithPaddingAndMargin();\n            crossAxisMinSize = Math.max(crossAxisMinSize, itemCrossAxisMinSize);\n        }\n        return crossAxisMinSize;\n    }\n\n    private calcMainAxisMinSize() {\n        const lines = this.lines!;\n        if (lines.length === 1) {\n            return lines[0].getMainAxisMinSize();\n        } else {\n            // Wrapping lines: specified width is used as min width (in accordance to W3C flexbox).\n            return this._layout.mainAxisSize;\n        }\n    }\n\n    getLines(): LineLayout[] {\n        return this.lines!;\n    }\n\n    getMainAxisMinSize(): number {\n        if (this.mainAxisMinSize === undefined) {\n            this.mainAxisMinSize = this.calcMainAxisMinSize();\n        }\n        return this.mainAxisMinSize;\n    }\n\n    getCrossAxisMinSize(): number {\n        if (this.crossAxisMinSize === undefined) {\n            this.crossAxisMinSize = this.calcCrossAxisMinSize();\n        }\n        return this.crossAxisMinSize;\n    }\n\n    getMainAxisContentSize() {\n        return this.mainAxisContentSize;\n    }\n}\n","import { SizeShrinker } from \"./SizeShrinker\";\nimport { SizeGrower } from \"./SizeGrower\";\nimport { ItemPositioner } from \"./ItemPositioner\";\nimport { ItemAligner } from \"./ItemAligner\";\nimport { FlexLayouter } from \"../FlexLayouter\";\nimport { FlexNode } from \"../../FlexNode\";\n\nexport class LineLayout {\n    public items: FlexNode[];\n    private crossAxisMaxLayoutSize: number = 0;\n\n    constructor(\n        private layout: FlexLayouter,\n        public startIndex: number,\n        public endIndex: number,\n        public availableSpace: number,\n    ) {\n        this.items = layout.items;\n    }\n\n    getLayout() {\n        return this.layout;\n    }\n\n    performLayout() {\n        this._setItemSizes();\n        this.setItemPositions();\n        this._calcLayoutInfo();\n    }\n\n    _setItemSizes() {\n        if (this.availableSpace > 0) {\n            this._growItemSizes(this.availableSpace);\n        } else if (this.availableSpace < 0) {\n            this._shrinkItemSizes(-this.availableSpace);\n        }\n    }\n\n    _growItemSizes(amount: number) {\n        const grower = new SizeGrower(this);\n        grower.grow(amount);\n        this.availableSpace -= grower.getGrownSize();\n    }\n\n    _shrinkItemSizes(amount: number) {\n        const shrinker = new SizeShrinker(this);\n        shrinker.shrink(amount);\n        this.availableSpace += shrinker.getShrunkSize();\n    }\n\n    setItemPositions() {\n        const positioner = new ItemPositioner(this);\n        positioner.position();\n    }\n\n    createItemAligner() {\n        return new ItemAligner(this);\n    }\n\n    _calcLayoutInfo() {\n        this._calcCrossAxisMaxLayoutSize();\n    }\n\n    getMainAxisMinSize() {\n        let mainAxisMinSize = 0;\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\n            const item = this.items[i];\n            mainAxisMinSize += item.flexItem!.getMainAxisMinSizeWithPaddingAndMargin();\n        }\n        return mainAxisMinSize;\n    }\n\n    get numberOfItems() {\n        return this.endIndex - this.startIndex + 1;\n    }\n\n    get crossAxisLayoutSize() {\n        const noSpecifiedCrossAxisSize = this.layout.isCrossAxisFitToContents() && !this.layout.isResizingCrossAxis();\n        const shouldFitToContents = this.layout.isWrapping() || noSpecifiedCrossAxisSize;\n        if (shouldFitToContents) {\n            return this.crossAxisMaxLayoutSize;\n        } else {\n            return this.layout.crossAxisSize;\n        }\n    }\n\n    _calcCrossAxisMaxLayoutSize() {\n        this.crossAxisMaxLayoutSize = this._getCrossAxisMaxLayoutSize();\n    }\n\n    _getCrossAxisMaxLayoutSize() {\n        let crossAxisMaxSize = 0;\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\n            const item = this.items[i];\n            crossAxisMaxSize = Math.max(crossAxisMaxSize, item.flexItem!.getCrossAxisLayoutSizeWithPaddingAndMargin());\n        }\n        return crossAxisMaxSize;\n    }\n}\n","import { LineLayout } from \"./LineLayout\";\n\nexport class SizeShrinker {\n    private amountRemaining: number = 0;\n    private shrunkSize: number = 0;\n\n    constructor(private line: LineLayout) {}\n\n    shrink(amount: number) {\n        this.shrunkSize = 0;\n\n        this.amountRemaining = amount;\n        let totalShrinkAmount = this.getTotalShrinkAmount();\n        if (totalShrinkAmount) {\n            const items = this.line.items;\n            do {\n                const amountPerShrink = this.amountRemaining / totalShrinkAmount;\n                for (let i = this.line.startIndex; i <= this.line.endIndex; i++) {\n                    const item = items[i];\n                    const flexItem = item.flexItem!;\n                    const shrinkAmount = flexItem.shrink;\n                    const isShrinkableItem = shrinkAmount > 0;\n                    if (isShrinkableItem) {\n                        let shrink = shrinkAmount * amountPerShrink;\n                        const minSize = flexItem.getMainAxisMinSize();\n                        const size = flexItem.getMainAxisLayoutSize();\n                        if (size > minSize) {\n                            const maxShrink = size - minSize;\n                            const isFullyShrunk = shrink >= maxShrink;\n                            if (isFullyShrunk) {\n                                shrink = maxShrink;\n\n                                // Destribute remaining amount over the other flex items.\n                                totalShrinkAmount -= shrinkAmount;\n                            }\n\n                            const finalSize = size - shrink;\n                            flexItem.resizeMainAxis(finalSize);\n\n                            this.shrunkSize += shrink;\n                            this.amountRemaining -= shrink;\n\n                            if (Math.abs(this.amountRemaining) < 10e-6) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            } while (totalShrinkAmount && Math.abs(this.amountRemaining) > 10e-6);\n        }\n    }\n\n    private getTotalShrinkAmount() {\n        let total = 0;\n        const items = this.line.items;\n        for (let i = this.line.startIndex; i <= this.line.endIndex; i++) {\n            const item = items[i];\n            const flexItem = item.flexItem!;\n\n            if (flexItem.shrink) {\n                const minSize = flexItem.getMainAxisMinSize();\n                const size = flexItem.getMainAxisLayoutSize();\n\n                // Exclude those already fully shrunk.\n                if (size > minSize) {\n                    total += flexItem.shrink;\n                }\n            }\n        }\n        return total;\n    }\n\n    getShrunkSize() {\n        return this.shrunkSize;\n    }\n}\n","import { LineLayout } from \"./LineLayout\";\n\nexport class SizeGrower {\n    private amountRemaining: number = 0;\n    private grownSize: number = 0;\n\n    constructor(private line: LineLayout) {}\n\n    grow(amount: number) {\n        this.grownSize = 0;\n\n        this.amountRemaining = amount;\n        let totalGrowAmount = this.getTotalGrowAmount();\n        if (totalGrowAmount) {\n            const items = this.line.items;\n            do {\n                const amountPerGrow = this.amountRemaining / totalGrowAmount;\n                for (let i = this.line.startIndex; i <= this.line.endIndex; i++) {\n                    const item = items[i];\n                    const flexItem = item.flexItem!;\n                    const growAmount = flexItem.grow;\n                    const isGrowableItem = growAmount > 0;\n                    if (isGrowableItem) {\n                        let grow = growAmount * amountPerGrow;\n                        const maxSize = flexItem.getMainAxisMaxSizeSetting();\n                        const size = flexItem.getMainAxisLayoutSize();\n                        if (maxSize > 0) {\n                            if (size >= maxSize) {\n                                // Already fully grown.\n                                grow = 0;\n                            } else {\n                                const maxGrow = maxSize - size;\n                                const isFullyGrown = grow >= maxGrow;\n                                if (isFullyGrown) {\n                                    grow = maxGrow;\n\n                                    // Destribute remaining amount over the other flex items.\n                                    totalGrowAmount -= growAmount;\n                                }\n                            }\n                        }\n\n                        if (grow > 0) {\n                            const finalSize = size + grow;\n                            flexItem.resizeMainAxis(finalSize);\n\n                            this.grownSize += grow;\n                            this.amountRemaining -= grow;\n\n                            if (Math.abs(this.amountRemaining) < 10e-6) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            } while (totalGrowAmount && Math.abs(this.amountRemaining) > 10e-6);\n        }\n    }\n\n    private getTotalGrowAmount() {\n        let total = 0;\n        const items = this.line.items;\n        for (let i = this.line.startIndex; i <= this.line.endIndex; i++) {\n            const item = items[i];\n            const flexItem = item.flexItem!;\n\n            if (flexItem.grow) {\n                const maxSize = flexItem.getMainAxisMaxSizeSetting();\n                const size = flexItem.getMainAxisLayoutSize();\n\n                // Exclude those already fully grown.\n                if (maxSize === 0 || size < maxSize) {\n                    total += flexItem.grow;\n                }\n            }\n        }\n        return total;\n    }\n\n    getGrownSize() {\n        return this.grownSize;\n    }\n}\n","import { getSpacing } from \"../spacing\";\nimport { LineLayout } from \"./LineLayout\";\n\nexport class ItemPositioner {\n    constructor(private line: LineLayout) {}\n\n    private get _layout() {\n        return this.line.getLayout();\n    }\n\n    position() {\n        const { spacingBefore, spacingBetween } = this.getSpacing();\n\n        let currentPos = spacingBefore;\n\n        const items = this.line.items;\n        for (let i = this.line.startIndex; i <= this.line.endIndex; i++) {\n            const item = items[i];\n\n            item.flexItem!.setMainAxisLayoutPos(currentPos);\n            currentPos += item.flexItem!.getMainAxisLayoutSizeWithPaddingAndMargin();\n            currentPos += spacingBetween;\n        }\n    }\n\n    private getSpacing() {\n        const remainingSpace = this.line.availableSpace;\n        const mode = this._layout.container.justifyContent;\n        const numberOfItems = this.line.numberOfItems;\n\n        return getSpacing(mode, numberOfItems, remainingSpace);\n    }\n}\n","import { LineLayout } from \"./LineLayout\";\nimport { AlignItemsMode } from \"../../FlexContainer\";\nimport { FlexNode } from \"../../FlexNode\";\nimport { FlexItem } from \"../../FlexItem\";\n\nexport class ItemAligner {\n    private crossAxisLayoutSize: number = 0;\n    private crossAxisLayoutOffset: number = 0;\n    private alignItemsSetting?: AlignItemsMode;\n    private recursiveResizeOccured: boolean = false;\n    private isCrossAxisFitToContents: boolean = false;\n\n    constructor(private _line: LineLayout) {}\n\n    get _layout() {\n        return this._line.getLayout();\n    }\n\n    get _flexContainer() {\n        return this._layout.container;\n    }\n\n    setCrossAxisLayoutSize(size: number) {\n        this.crossAxisLayoutSize = size;\n    }\n\n    setCrossAxisLayoutOffset(offset: number) {\n        this.crossAxisLayoutOffset = offset;\n    }\n\n    align() {\n        this.alignItemsSetting = this._flexContainer.alignItems;\n\n        this.isCrossAxisFitToContents = this._layout.isAxisFitToContents(!this._flexContainer.horizontal);\n\n        this.recursiveResizeOccured = false;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            this._alignItem(item);\n        }\n    }\n\n    getRecursiveResizeOccured() {\n        return this.recursiveResizeOccured;\n    }\n\n    _alignItem(item: FlexNode) {\n        const flexItem = item.flexItem!;\n        let align = flexItem.alignSelf || this.alignItemsSetting;\n\n        if (align === \"stretch\" && this.preventStretch(flexItem)) {\n            align = \"flex-start\";\n        }\n\n        if (align !== \"center\" && !this.isCrossAxisFitToContents) {\n            if (flexItem.hasRelCrossAxisSize()) {\n                // As cross axis size might have changed, we need to recalc the relative flex item's size.\n                flexItem.resetCrossAxisLayoutSize();\n            }\n        }\n\n        switch (align) {\n            case \"flex-start\":\n                this._alignItemFlexStart(flexItem);\n                break;\n            case \"flex-end\":\n                this._alignItemFlexEnd(flexItem);\n                break;\n            case \"center\":\n                this._alignItemFlexCenter(flexItem);\n                break;\n            case \"stretch\":\n                this._alignItemStretch(flexItem);\n                break;\n        }\n    }\n\n    _alignItemFlexStart(flexItem: FlexItem) {\n        flexItem.setCrossAxisLayoutPos(this.crossAxisLayoutOffset);\n    }\n\n    _alignItemFlexEnd(flexItem: FlexItem) {\n        const itemCrossAxisSize = flexItem.getCrossAxisLayoutSizeWithPaddingAndMargin();\n        flexItem.setCrossAxisLayoutPos(this.crossAxisLayoutOffset + (this.crossAxisLayoutSize - itemCrossAxisSize));\n    }\n\n    _alignItemFlexCenter(flexItem: FlexItem) {\n        const itemCrossAxisSize = flexItem.getCrossAxisLayoutSizeWithPaddingAndMargin();\n        const center = (this.crossAxisLayoutSize - itemCrossAxisSize) / 2;\n        flexItem.setCrossAxisLayoutPos(this.crossAxisLayoutOffset + center);\n    }\n\n    _alignItemStretch(flexItem: FlexItem) {\n        flexItem.setCrossAxisLayoutPos(this.crossAxisLayoutOffset);\n\n        const mainAxisLayoutSizeBeforeResize = flexItem.getMainAxisLayoutSize();\n        let size = this.crossAxisLayoutSize - flexItem.getCrossAxisMargin() - flexItem.getCrossAxisPadding();\n\n        const crossAxisMinSizeSetting = flexItem.getCrossAxisMinSizeSetting();\n        if (crossAxisMinSizeSetting > 0) {\n            size = Math.max(size, crossAxisMinSizeSetting);\n        }\n\n        const crossAxisMaxSizeSetting = flexItem.getCrossAxisMaxSizeSetting();\n        const crossAxisMaxSizeSettingEnabled = crossAxisMaxSizeSetting > 0;\n        if (crossAxisMaxSizeSettingEnabled) {\n            size = Math.min(size, crossAxisMaxSizeSetting);\n        }\n\n        flexItem.resizeCrossAxis(size);\n        const mainAxisLayoutSizeAfterResize = flexItem.getMainAxisLayoutSize();\n\n        const recursiveResize = mainAxisLayoutSizeAfterResize !== mainAxisLayoutSizeBeforeResize;\n        if (recursiveResize) {\n            // Recursive resize can happen when this flex item has the opposite direction than the container\n            // and is wrapping and auto-sizing. Due to item/content stretching the main axis size of the flex\n            // item may decrease. If it does so, we must re-justify-content the complete line.\n            // Notice that we don't account for changes to the (if autosized) main axis size caused by recursive\n            // resize, which may cause the container's main axis to not shrink to the contents properly.\n            // This is by design, because if we had re-run the main axis layout, we could run into issues such\n            // as slow layout or endless loops.\n            this.recursiveResizeOccured = true;\n        }\n    }\n\n    private preventStretch(flexItem: FlexItem) {\n        const hasFixedCrossAxisSize = flexItem.hasFixedCrossAxisSize();\n        const forceStretch = flexItem.alignSelf === \"stretch\";\n        return hasFixedCrossAxisSize && !forceStretch;\n    }\n}\n","import { FlexLayouter } from \"./FlexLayouter\";\nimport { FlexNode } from \"../FlexNode\";\n\nexport class ItemCoordinatesUpdater {\n    private readonly isReverse: boolean;\n    private readonly horizontalPaddingOffset: number;\n    private readonly verticalPaddingOffset: number;\n\n    constructor(private layout: FlexLayouter) {\n        this.isReverse = this.flexContainer.reverse;\n        this.horizontalPaddingOffset = this.flexContainer.node.getHorizontalPaddingOffset();\n        this.verticalPaddingOffset = this.flexContainer.node.getVerticalPaddingOffset();\n    }\n\n    private get flexContainer() {\n        return this.layout.container;\n    }\n\n    finalize() {\n        const parentFlex = this.layout.getParentFlexContainer();\n        if (parentFlex) {\n            // We must update it from the parent to set padding offsets and reverse position.\n            const updater = new ItemCoordinatesUpdater(parentFlex.layout);\n            updater.finalizeItemAndChildren(this.flexContainer.node);\n        } else {\n            const validCache = this.validateItemCache(this.flexContainer.node);\n            if (!validCache) {\n                this.finalizeRoot();\n                this.finalizeItems();\n            }\n        }\n    }\n\n    private finalizeRoot() {\n        const flexNode = this.flexContainer.node;\n        const x = flexNode.getAxisLayoutPos(true);\n        const y = flexNode.getAxisLayoutPos(false);\n        let w = flexNode.getAxisLayoutSize(true);\n        let h = flexNode.getAxisLayoutSize(false);\n\n        w += flexNode.getHorizontalPadding();\n        h += flexNode.getVerticalPadding();\n\n        flexNode.clearRecalcFlag();\n\n        flexNode.setLayout(x, y, w, h);\n    }\n\n    private finalizeItems() {\n        const items = this.layout.items;\n        for (let i = 0, n = items.length; i < n; i++) {\n            const item = items[i];\n            const validCache = this.validateItemCache(item);\n\n            // Notice that we must also finalize a cached item, as it's coordinates may have changed.\n            this.finalizeItem(item);\n\n            if (!validCache) {\n                this.finalizeItemChildren(item);\n            }\n        }\n    }\n\n    private validateItemCache(item: FlexNode) {\n        if (item.recalc === 0) {\n            if (item.isFlexEnabled()) {\n                const layout = item.flex.layout;\n\n                const dimensionsMatchPreviousResult =\n                    item.w === item.subject.getLayoutW() && item.h === item.subject.getLayoutH();\n                if (dimensionsMatchPreviousResult) {\n                    // Cache is valid.\n                    return true;\n                } else {\n                    const crossAxisSize = layout.crossAxisSize;\n                    layout.performResizeMainAxis(layout.mainAxisSize);\n                    layout.performResizeCrossAxis(crossAxisSize);\n                }\n            }\n        }\n        return false;\n    }\n\n    private finalizeItemAndChildren(item: FlexNode) {\n        this.finalizeItem(item);\n        this.finalizeItemChildren(item);\n    }\n\n    private finalizeItem(item: FlexNode) {\n        if (this.isReverse) {\n            this.reverseMainAxisLayoutPos(item);\n        }\n\n        let x = item.getAxisLayoutPos(true);\n        let y = item.getAxisLayoutPos(false);\n        let w = item.getAxisLayoutSize(true);\n        let h = item.getAxisLayoutSize(false);\n\n        x += this.horizontalPaddingOffset;\n        y += this.verticalPaddingOffset;\n\n        w += item.getHorizontalPadding();\n        h += item.getVerticalPadding();\n\n        x += item.getHorizontalMarginOffset();\n        y += item.getVerticalMarginOffset();\n\n        item.clearRecalcFlag();\n        item.setLayout(x, y, w, h);\n    }\n\n    private finalizeItemChildren(item: FlexNode) {\n        if (item.isFlexEnabled()) {\n            const updater = new ItemCoordinatesUpdater(item.flex.layout);\n            updater.finalizeItems();\n        }\n    }\n\n    private reverseMainAxisLayoutPos(item: FlexNode) {\n        const endPos =\n            item.flexItem!.getMainAxisLayoutPos() + item.flexItem!.getMainAxisLayoutSizeWithPaddingAndMargin();\n        const reversedPos = this.layout.mainAxisSize - endPos;\n        item.flexItem!.setMainAxisLayoutPos(reversedPos);\n    }\n}\n","import { FlexSubject, RelativeHeightFunction, RelativeWidthFunction } from \"./FlexSubject\";\nimport { FlexNode } from \"./FlexNode\";\nimport { FlexContainer } from \"./FlexContainer\";\nimport { FlexItem } from \"./FlexItem\";\n\nconst COORDINATES_CHANGED = 2;\nconst LAYOUT_CHANGED = 256;\ntype CHANGE = typeof COORDINATES_CHANGED | typeof LAYOUT_CHANGED;\n\nexport class FlexTarget implements FlexSubject {\n    private _children: FlexTarget[] = [];\n    private _parent?: FlexTarget;\n\n    // Layout results.\n    private _x: number = 0;\n    private _y: number = 0;\n    private _w: number = 0;\n    private _h: number = 0;\n\n    // Specified coordinates and dimensions.\n    private _sx: number = 0;\n    private _sy: number = 0;\n    private _sw: number = 0;\n    private _sh: number = 0;\n\n    private _optFlags: number = 0;\n\n    private _funcX?: RelativeWidthFunction;\n    private _funcY?: RelativeHeightFunction;\n    private _funcW?: RelativeWidthFunction;\n    private _funcH?: RelativeHeightFunction;\n\n    private _visible: boolean = true;\n\n    private _layout?: FlexNode;\n\n    private flags: number = 0;\n\n    private hasUpdates: boolean = false;\n\n    getChildren() {\n        return this._children;\n    }\n\n    get skipInLayout(): boolean {\n        return this._layout ? this._layout.skip : false;\n    }\n\n    set skipInLayout(v: boolean) {\n        if (this.skipInLayout !== v) {\n            // Force an update as absolute layout may be affected (on itself or on layout children).\n            this.triggerRecalcTranslate();\n            this.layout.skip = v;\n        }\n    }\n\n    get layout(): FlexNode {\n        this.ensureLayout();\n        return this._layout!;\n    }\n\n    hasLayout(): boolean {\n        return !!this._layout;\n    }\n\n    getLayout() {\n        return this.layout;\n    }\n\n    get flex() {\n        return this.layout.flex;\n    }\n\n    get flexItem() {\n        return this.layout.flexItem;\n    }\n\n    private ensureLayout() {\n        if (!this._layout) {\n            this._layout = new FlexNode(this);\n        }\n    }\n\n    hasFlexLayout() {\n        return this._layout && this._layout.isEnabled();\n    }\n\n    private isFlexLayoutRoot() {\n        return this._layout && this._layout.isLayoutRoot();\n    }\n\n    triggerLayout() {\n        this.setFlag(LAYOUT_CHANGED);\n    }\n\n    private onDimensionsChanged() {\n        this.triggerRecalcTranslate();\n    }\n\n    private triggerRecalcTranslate() {\n        this.setFlag(COORDINATES_CHANGED);\n    }\n\n    private setFlag(type: CHANGE) {\n        this.flags |= type;\n        this.setHasUpdates();\n    }\n\n    private setHasUpdates() {\n        let p: FlexTarget | undefined = this;\n        while (p && !p.hasUpdates) {\n            p.hasUpdates = true;\n            p = p._parent;\n        }\n    }\n\n    private hasRelativeDimensionFunctions() {\n        return this._optFlags & 12;\n    }\n\n    update() {\n        // Parent width or height could have been changed while we are using relative dimension functions.\n        // Width or height might have been changed, which affects the flexbox layout.\n        // Notice that this edge case only occurs for root flex containers.\n        const relativeDimsFlexRoot = this.isFlexLayoutRoot() && this.hasRelativeDimensionFunctions();\n\n        const mustLayout = this.flags & LAYOUT_CHANGED || relativeDimsFlexRoot;\n        if (mustLayout) {\n            this._layout!.layoutFlexTree();\n        }\n\n        if (this._optFlags && !this.hasFlexLayout()) {\n            this.applyRelativeFunctions();\n        }\n\n        if (this.flags & COORDINATES_CHANGED) {\n            this.onChangedLayout();\n        }\n\n        if (this.hasUpdates) {\n            this.flags = 0;\n            this.hasUpdates = false;\n            const children = this._children;\n            if (children) {\n                for (let i = 0, n = children.length; i < n; i++) {\n                    children[i].update();\n                }\n            }\n        }\n    }\n\n    private applyRelativeFunctions() {\n        const layoutParent = this.getLayoutParent()!;\n        if (this._optFlags & 1) {\n            const x = this._funcX!(layoutParent.getLayoutW());\n            if (x !== this._x) {\n                this._x = x;\n                this.flags |= COORDINATES_CHANGED;\n            }\n        }\n        if (this._optFlags & COORDINATES_CHANGED) {\n            const y = this._funcY!(layoutParent.getLayoutH());\n            if (y !== this._y) {\n                this._y = y;\n                this.flags |= COORDINATES_CHANGED;\n            }\n        }\n\n        let changedDims = false;\n        if (this._optFlags & 4) {\n            const w = this._funcW!(layoutParent.getLayoutW());\n            if (w !== this._w) {\n                this._w = w;\n                changedDims = true;\n            }\n        }\n        if (this._optFlags & 8) {\n            const h = this._funcH!(layoutParent.getLayoutH());\n            if (h !== this._h) {\n                this._h = h;\n                changedDims = true;\n            }\n        }\n\n        if (changedDims) {\n            this.onDimensionsChanged();\n        }\n    }\n\n    private getLayoutParent() {\n        let current: FlexTarget = this.getParent()!;\n        while (current.skipInLayout) {\n            const parent = current.getParent();\n            if (!parent) return current;\n            current = parent;\n        }\n        return current;\n    }\n\n    protected onChangedLayout() {\n        // This is invoked when layout coordinates were changed.\n    }\n\n    get x() {\n        if (this._funcX) {\n            return this._funcX;\n        } else {\n            return this._sx;\n        }\n    }\n\n    set x(v: number | RelativeWidthFunction) {\n        if (FlexTarget.isFunction(v)) {\n            this.funcX = v as RelativeWidthFunction;\n        } else {\n            this._disableFuncX();\n            const dx = (v as number) - this._sx;\n            this._sx = v as number;\n\n            // No recalc is necessary because the layout offset can be updated directly.\n            this._x += dx;\n        }\n    }\n\n    getSourceFuncX() {\n        return this._funcX;\n    }\n\n    set funcX(v: RelativeWidthFunction | undefined) {\n        if (this._funcX !== v) {\n            this._optFlags |= 1;\n            this._funcX = v;\n            this._x = 0;\n            if (this.hasFlexLayout()) {\n                this._layout!.forceLayout();\n            } else {\n                this.triggerRecalcTranslate();\n            }\n        }\n    }\n\n    private _disableFuncX() {\n        this._optFlags = this._optFlags & (0xffff - 1);\n        this._funcX = undefined;\n    }\n\n    get y() {\n        if (this._funcY) {\n            return this._funcY;\n        } else {\n            return this._sy;\n        }\n    }\n\n    set y(v) {\n        if (FlexTarget.isFunction(v)) {\n            this.funcY = v as RelativeHeightFunction;\n        } else {\n            this._disableFuncY();\n            const dy = (v as number) - this._sy;\n            if (dy) {\n                this._sy = v as number;\n\n                // No recalc is necessary because the layout offset can be updated directly.\n                this._y += dy;\n            }\n        }\n    }\n\n    getSourceFuncY() {\n        return this._funcY;\n    }\n\n    set funcY(v: RelativeHeightFunction | undefined) {\n        if (this._funcY !== v) {\n            this._optFlags |= 2;\n            this._funcY = v;\n            this._y = 0;\n            if (this.hasFlexLayout()) {\n                this._layout!.forceLayout();\n            } else {\n                this.triggerRecalcTranslate();\n            }\n        }\n    }\n\n    private _disableFuncY() {\n        this._optFlags = this._optFlags & (0xffff - 2);\n        this._funcY = undefined;\n    }\n\n    get w() {\n        if (this._funcW) {\n            return this._funcW;\n        } else {\n            return this._sw;\n        }\n    }\n\n    set w(v: number | RelativeWidthFunction) {\n        if (FlexTarget.isFunction(v)) {\n            this.funcW = v as RelativeWidthFunction;\n        } else {\n            this.disableFuncW();\n            if (this._sw !== v) {\n                this._sw = v as number;\n                if (this.hasFlexLayout()) {\n                    this._layout!.updatedSourceW();\n                } else {\n                    this._w = v as number;\n                    this.onDimensionsChanged();\n                }\n            }\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v: number | RelativeHeightFunction) {\n        if (FlexTarget.isFunction(v)) {\n            this.funcH = v as RelativeHeightFunction;\n        } else {\n            this.disableFuncH();\n            if (this._sh !== v) {\n                this._sh = v as number;\n                if (this.hasFlexLayout()) {\n                    this._layout!.updatedSourceH();\n                } else {\n                    this._h = v as number;\n                    this.onDimensionsChanged();\n                }\n            }\n        }\n    }\n\n    getSourceFuncW() {\n        return this._funcW;\n    }\n\n    set funcW(v: RelativeWidthFunction | undefined) {\n        if (this._funcW !== v) {\n            this._optFlags |= 4;\n            this._funcW = v;\n            if (this.hasFlexLayout()) {\n                this.layout.updatedSourceW();\n            } else {\n                this._w = 0;\n                this.onDimensionsChanged();\n            }\n        }\n    }\n\n    private disableFuncW() {\n        this._optFlags = this._optFlags & (0xffff - 4);\n        this._funcW = undefined;\n    }\n\n    getSourceFuncH() {\n        return this._funcH;\n    }\n\n    set funcH(v: RelativeHeightFunction | undefined) {\n        if (this._funcH !== v) {\n            this._optFlags |= 8;\n            this._funcH = v;\n            if (this.hasFlexLayout()) {\n                this.layout.updatedSourceH();\n            } else {\n                this._h = 0;\n                this.onDimensionsChanged();\n            }\n        }\n    }\n\n    private disableFuncH() {\n        this._optFlags = this._optFlags & (0xffff - 8);\n        this._funcH = undefined;\n    }\n\n    getParent() {\n        return this._parent;\n    }\n\n    private setParent(p: FlexTarget | undefined) {\n        if (this._parent !== p) {\n            const prevParent = this._parent;\n            this._parent = p;\n            if (this._layout || FlexNode.getActiveLayoutNode(p)?.isFlexEnabled()) {\n                this.layout.setParent(prevParent, p);\n            }\n\n            if (prevParent) {\n                prevParent.triggerRecalcTranslate();\n            }\n            if (p) {\n                p.triggerRecalcTranslate();\n            }\n        }\n    }\n\n    setChildren(children: FlexTarget[]) {\n        this._children = children;\n\n        children.forEach((child) => {\n            child.setParent(this);\n        });\n    }\n\n    get children() {\n        return this._children;\n    }\n\n    addChild(child: FlexTarget) {\n        this.addChildAt(child, this._children.length);\n    }\n\n    addChildAt(child: FlexTarget, index: number) {\n        if (!this._children) this._children = [];\n        this._children.splice(index, 0, child);\n        child.setParent(this);\n    }\n\n    removeChildAt(index: number) {\n        if (this._children) {\n            const child = this._children[index];\n            this._children.splice(index, 1);\n            child.setParent(undefined);\n        }\n    }\n\n    setLayoutCoords(x: number, y: number) {\n        if (this._x !== x || this._y !== y) {\n            this._x = x;\n            this._y = y;\n            this.triggerRecalcTranslate();\n        }\n    }\n\n    setLayoutDimensions(w: number, h: number) {\n        if (this._w !== w || this._h !== h) {\n            this._w = w;\n            this._h = h;\n\n            this.triggerRecalcTranslate();\n        }\n    }\n\n    get visible() {\n        return this._visible;\n    }\n\n    set visible(v: boolean) {\n        if (this._visible !== v) {\n            this._visible = v;\n            if (this.hasFlexLayout()) {\n                this.layout.updateVisible();\n            }\n        }\n    }\n\n    isDisplayed() {\n        return this._visible;\n    }\n\n    toJson(path: number[] = []): any {\n        const layout = [this._x, this._y, this._w, this._h];\n        const json = {\n            path: \"[\" + path.join(\"][\") + \"]\",\n            layout: layout.join(\" \"),\n            w: this.getLayoutW(),\n            h: this.getLayoutH(),\n            x: this.getLayoutX(),\n            y: this.getLayoutY(),\n            sw: this.getSourceW(),\n            sh: this.getSourceH(),\n            sx: this.getSourceX(),\n            sy: this.getSourceY(),\n            flex: this._layout && this._layout.flex ? FlexTarget.flexToJson(this._layout.flex) : false,\n            flexItem: this._layout && this._layout.flexItem ? FlexTarget.flexItemToJson(this._layout.flexItem) : false,\n            children: this._children.map((c, index) => c.toJson(path.concat([index]))),\n        };\n\n        return json;\n    }\n\n    static flexToJson(flex: FlexContainer) {\n        return {\n            direction: flex.direction,\n            alignItems: flex.alignItems,\n            alignContent: flex.alignContent,\n            justifyContent: flex.justifyContent,\n        };\n    }\n\n    static flexItemToJson(flexItem: FlexItem) {\n        return {\n            grow: flexItem.grow,\n            shrink: flexItem.shrink,\n            alignSelf: flexItem.alignSelf,\n        };\n    }\n\n    toString() {\n        const obj = this.toJson();\n        return JSON.stringify(obj, null, 2);\n    }\n\n    getLocationString(): string {\n        const i = this._parent ? this._parent._children.indexOf(this) : \"R\";\n        let str = this._parent ? this._parent.getLocationString() : \"\";\n        str += \"[\" + i + \"]\";\n        return str;\n    }\n\n    getSourceX() {\n        return this._sx;\n    }\n\n    getSourceY() {\n        return this._sy;\n    }\n\n    getSourceW() {\n        return this._sw;\n    }\n\n    getSourceH() {\n        return this._sh;\n    }\n\n    getLayoutX() {\n        return this._x;\n    }\n\n    getLayoutY() {\n        return this._y;\n    }\n\n    getLayoutW() {\n        return this._w;\n    }\n\n    getLayoutH() {\n        return this._h;\n    }\n\n    static isFunction(value: any) {\n        return typeof value === \"function\";\n    }\n}\n","/**\n * Application render tree.\n * Copyright Metrological, 2017\n * Copyright Bas van Meurs, 2020\n */\n\nimport { Patcher } from \"../patch/Patcher\";\nimport { WebGLRenderer } from \"../renderer/webgl/WebGLRenderer\";\nimport { C2dRenderer } from \"../renderer/c2d/C2dRenderer\";\nimport { Element } from \"./Element\";\nimport { ColorUtils } from \"./ColorUtils\";\nimport { TextureManager } from \"./TextureManager\";\nimport { CoreContext } from \"./core/CoreContext\";\nimport { RectangleTexture } from \"../textures/RectangleTexture\";\nimport { WebPlatform } from \"../platforms/browser/WebPlatform\";\nimport { Renderer } from \"../renderer/Renderer\";\nimport { Texture } from \"./Texture\";\nimport { ElementCoordinatesInfo } from \"./core/ElementCore\";\nimport { StageOptions } from \"./StageOptions\";\n\nexport class Stage {\n    private destroyed = false;\n\n    public readonly gpuPixelsMemory: number;\n    public readonly bufferMemory: number;\n    public readonly defaultFontFace: string[];\n    public readonly fixedTimestep: number;\n    public readonly useImageWorker: boolean;\n    public readonly autostart: boolean;\n    public readonly pixelRatio: number;\n    public readonly canvas2d: boolean;\n\n    private _usedMemory: number = 0;\n    private _lastGcFrame: number = 0;\n    public readonly platform: WebPlatform = new WebPlatform(this);\n\n    public readonly gl: WebGLRenderingContext;\n    public readonly c2d: CanvasRenderingContext2D;\n\n    private _renderer: Renderer;\n\n    public readonly textureManager: TextureManager;\n\n    public frameCounter: number = 0;\n    private startTime: number = 0;\n    private currentTime: number = 0;\n    private dt: number = 0;\n\n    public readonly rectangleTexture: RectangleTexture;\n    public readonly context: CoreContext;\n\n    private _updateTextures = new Set<Texture>();\n\n    public readonly root: Element;\n\n    private _updatingFrame = false;\n    private clearColor: null | number[] = null;\n\n    private onFrameStart?: () => void;\n    private onUpdate?: () => void;\n    private onFrameEnd?: () => void;\n    private canvasWidth: number = 0;\n    private canvasHeight: number = 0;\n\n    constructor(public readonly canvas: HTMLCanvasElement, options: Partial<StageOptions> = {}) {\n        this.gpuPixelsMemory = options.gpuPixelsMemory || 32e6;\n        this.bufferMemory = options.bufferMemory || 16e6;\n        this.defaultFontFace = options.defaultFontFace || [\"sans-serif\"];\n        this.fixedTimestep = options.fixedTimestep || 0;\n        this.useImageWorker = options.useImageWorker === undefined || options.useImageWorker;\n        this.autostart = options.autostart !== false;\n        this.pixelRatio = options.pixelRatio || this.getDefaultPixelRatio() || 1;\n        this.canvas2d = options.canvas2d === true || !Stage.isWebglSupported();\n\n        this.destroyed = false;\n\n        this._usedMemory = 0;\n        this._lastGcFrame = 0;\n\n        this.platform.init();\n\n        if (this.canvas2d) {\n            console.log(\"Using canvas2d renderer\");\n            this.c2d = this.platform.createCanvasContext();\n            this.gl = undefined as any;\n            this._renderer = new C2dRenderer(this) as any;\n        } else {\n            this.gl = this.platform.createWebGLContext();\n            this.c2d = undefined as any;\n            this._renderer = new WebGLRenderer(this);\n        }\n\n        this.frameCounter = 0;\n\n        this.textureManager = new TextureManager(this);\n\n        // Preload rectangle texture.\n        this.rectangleTexture = new RectangleTexture(this);\n        this.rectangleTexture.load();\n\n        this.context = new CoreContext(this);\n\n        this.root = new Element(this);\n        this.root.setAsRoot();\n\n        this.context.root = this.root.core;\n\n        this.processClearColorOption(options.clearColor);\n\n        this.checkCanvasDimensions();\n\n        if (this.autostart) {\n            this.platform.startLoop();\n        }\n    }\n\n    private processClearColorOption(option: number | null | undefined) {\n        switch (option) {\n            case null:\n                this.setClearColor(null);\n                break;\n            case undefined:\n                this.setClearColor([0, 0, 0, 0]);\n                break;\n            default:\n                this.setClearColor(ColorUtils.getRgbaComponentsNormalized(option));\n        }\n    }\n\n    get w() {\n        return this.canvas.width;\n    }\n\n    get h() {\n        return this.canvas.height;\n    }\n\n    get renderer() {\n        return this._renderer;\n    }\n\n    static isWebglSupported() {\n        try {\n            return !!window.WebGLRenderingContext;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    destroy() {\n        this.destroyed = true;\n        this.platform.stopLoop();\n        this.platform.destroy();\n        this.context.destroy();\n        this.textureManager.destroy();\n        this._renderer.destroy();\n    }\n\n    stop() {\n        this.platform.stopLoop();\n    }\n\n    resume() {\n        this.platform.startLoop();\n    }\n\n    getCanvas() {\n        return this.canvas;\n    }\n\n    getPixelRatio() {\n        return this.pixelRatio;\n    }\n\n    // Marks a texture for updating it's source upon the next drawFrame.\n    addUpdateTexture(texture: Texture) {\n        if (this._updatingFrame) {\n            // When called from the upload loop, we must immediately load the texture in order to avoid a 'flash'.\n            texture._performUpdateSource();\n        } else {\n            this._updateTextures.add(texture);\n        }\n    }\n\n    removeUpdateTexture(texture: Texture) {\n        if (this._updateTextures) {\n            this._updateTextures.delete(texture);\n        }\n    }\n\n    hasUpdateTexture(texture: Texture) {\n        return this._updateTextures && this._updateTextures.has(texture);\n    }\n\n    drawFrame() {\n        this.checkCanvasDimensions();\n\n        this.startTime = this.currentTime;\n        this.currentTime = this.platform.getHrTime();\n\n        if (this.fixedTimestep) {\n            this.dt = this.fixedTimestep;\n        } else {\n            this.dt = !this.startTime ? 0.02 : 0.001 * (this.currentTime - this.startTime);\n        }\n\n        if (this.onFrameStart) {\n            this.onFrameStart();\n        }\n\n        if (this._updateTextures.size) {\n            this._updateTextures.forEach((texture) => {\n                texture._performUpdateSource();\n            });\n            this._updateTextures = new Set();\n        }\n\n        if (this.onUpdate) {\n            this.onUpdate();\n        }\n\n        const changes = this.context.hasRenderUpdates();\n\n        if (changes) {\n            this._updatingFrame = true;\n            this.context.update();\n            this.context.render();\n            this._updatingFrame = false;\n        }\n\n        this.platform.nextFrame(changes);\n\n        if (this.onFrameEnd) {\n            this.onFrameEnd();\n        }\n\n        this.frameCounter++;\n    }\n\n    isUpdatingFrame() {\n        return this._updatingFrame;\n    }\n\n    forceRenderUpdate() {\n        this.context.setRenderUpdatesFlag();\n    }\n\n    setClearColor(clearColor: number[] | null) {\n        if (clearColor === null) {\n            // Do not clear.\n            this.clearColor = null;\n        } else {\n            this.clearColor = clearColor;\n        }\n        this.forceRenderUpdate();\n    }\n\n    getClearColor() {\n        return this.clearColor;\n    }\n\n    createElement(settings: any) {\n        return Patcher.createObject(settings, Element, this);\n    }\n\n    createShader(settings: any) {\n        return Patcher.createObject(settings, undefined, this);\n    }\n\n    get coordsWidth() {\n        return this.canvasWidth / this.pixelRatio;\n    }\n\n    get coordsHeight() {\n        return this.canvasHeight / this.pixelRatio;\n    }\n\n    addMemoryUsage(delta: number) {\n        this._usedMemory += delta;\n        if (this._lastGcFrame !== this.frameCounter) {\n            if (this._usedMemory > this.gpuPixelsMemory) {\n                this.gc(false);\n                if (this._usedMemory > this.gpuPixelsMemory - 2e6) {\n                    // Too little memory could be recovered. Aggressive cleanup.\n                    this.gc(true);\n                }\n            }\n        }\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    gc(aggressive: boolean) {\n        if (this._lastGcFrame !== this.frameCounter) {\n            this._lastGcFrame = this.frameCounter;\n            const memoryUsageBefore = this._usedMemory;\n            this.gcTextureMemory(aggressive);\n            this.gcRenderTextureMemory(aggressive);\n            this.renderer.gc(aggressive);\n\n            console.log(\n                `GC${aggressive ? \"[aggressive]\" : \"\"}! Frame ${this._lastGcFrame} Freed ${(\n                    (memoryUsageBefore - this._usedMemory) /\n                    1e6\n                ).toFixed(2)}MP from GPU memory. Remaining: ${(this._usedMemory / 1e6).toFixed(2)}MP`,\n            );\n            const other = this._usedMemory - this.textureManager.usedMemory - this.context.usedMemory;\n            console.log(\n                ` Textures: ${(this.textureManager.usedMemory / 1e6).toFixed(2)}MP, Render Textures: ${(\n                    this.context.usedMemory / 1e6\n                ).toFixed(2)}MP, Renderer caches: ${(other / 1e6).toFixed(2)}MP`,\n            );\n        }\n    }\n\n    gcTextureMemory(aggressive = false) {\n        if (aggressive && this.root.visible) {\n            // Make sure that ALL textures are cleaned;\n            this.root.visible = false;\n            this.textureManager.gc();\n            this.root.visible = true;\n        } else {\n            this.textureManager.gc();\n        }\n    }\n\n    gcRenderTextureMemory(aggressive = false) {\n        if (aggressive && this.root.visible) {\n            // Make sure that ALL render textures are cleaned;\n            this.root.visible = false;\n            this.context.freeUnusedRenderTextures(0);\n            this.root.visible = true;\n        } else {\n            this.context.freeUnusedRenderTextures(0);\n        }\n    }\n\n    getDrawingCanvas() {\n        return this.platform.getDrawingCanvas();\n    }\n\n    update() {\n        this.context.update();\n    }\n\n    isDestroyed() {\n        return this.destroyed;\n    }\n\n    private checkCanvasDimensions() {\n        const rect = this.canvas.getBoundingClientRect();\n\n        let changed = false;\n\n        // Prevent resize recursion in dynamic layouts (flexbox etc).\n        // Notice that when you would like to use dynamic resize, you should wrap the canvas element in a dynamically\n        // resized div, and absolutely position the canvas in it with 100% width and height.\n        if (Math.round(rect.width) !== Math.round(this.canvasWidth)) {\n            const newCanvasWidth = rect.width * this.pixelRatio || this.canvas.width;\n            changed = changed || newCanvasWidth !== this.canvasWidth;\n            this.canvasWidth = newCanvasWidth;\n        }\n\n        if (Math.round(rect.height) !== Math.round(this.canvasHeight)) {\n            const newCanvasHeight = rect.height * this.pixelRatio || this.canvas.height;\n            changed = changed || newCanvasHeight !== this.canvasHeight;\n            this.canvasHeight = newCanvasHeight;\n        }\n\n        if (changed) {\n            this.updateCanvasSize();\n        }\n    }\n\n    private updateCanvasSize() {\n        // Make sure that the canvas looks 'crisp'.\n        this.canvas.width = Math.round(this.canvasWidth);\n        this.canvas.height = Math.round(this.canvasHeight);\n\n        // Reset dimensions.\n        this.root.core.setupAsRoot();\n        this.renderer.onResizeCanvasSize();\n    }\n\n    getElementsAtCoordinates<DATA = any>(worldX: number, worldY: number): ElementCoordinatesInfo<DATA>[] {\n        const results: ElementCoordinatesInfo[] = [];\n        this.root.core.update();\n        this.root.core.gatherElementsAtCoordinates(worldX, worldY, results);\n        return results.reverse();\n    }\n\n    private getDefaultPixelRatio() {\n        // Fractional pixel ratios (except for 1.5) might produce artifacts so we skip them by default.\n        if (window.devicePixelRatio >= 2) {\n            return 2;\n        } else if (window.devicePixelRatio > 1) {\n            return 1.5;\n        } else {\n            return 1;\n        }\n    }\n}\n","import { SingleReferenceHandler } from \"./SingleReferenceHandler\";\nimport { Element } from \"../../tree/Element\";\nimport { Texture } from \"../../tree/Texture\";\nimport { TextHandler } from \"./TextHandler\";\nimport { ChildrenHandler } from \"./ChildrenHandler\";\nimport { ShaderHandler } from \"./ShaderHandler\";\n\nexport const handlers = [\n    new SingleReferenceHandler(Element, \"texture\", Texture, (obj) => [obj.stage]),\n    new ShaderHandler(Element, \"shader\"),\n    new TextHandler(Element, \"text\"),\n    new ChildrenHandler(Element, \"children\"),\n];\n","import { Handler } from \"./Handler\";\nimport { TextTexture } from \"../../textures/text\";\nimport { Utils } from \"../../tree/Utils\";\nimport { Patcher } from \"../Patcher\";\n\nexport class TextHandler extends Handler {\n    handle(obj: any, settings: any) {\n        if (!obj.texture || !(obj.texture instanceof TextTexture)) {\n            obj.enableTextTexture();\n        }\n        if (Utils.isString(settings)) {\n            Patcher.patchObjectProperty(obj.texture, \"text\", settings);\n        } else {\n            Patcher.patchObject(obj.texture, settings);\n        }\n    }\n}\n","import { Handler } from \"./Handler\";\nimport { ChildList } from \"./ChildList\";\n\nexport class ChildrenHandler extends Handler {\n    handle(obj: any, settings: any): any {\n        const childList = new ChildList(obj);\n        childList.patch(settings);\n    }\n}\n","import { Element } from \"../../tree/Element\";\nimport { ElementChildList } from \"../../tree/ElementChildList\";\nimport { Utils } from \"../../tree/Utils\";\nimport { Patcher } from \"../Patcher\";\n\nexport class ChildList {\n    private element: Element;\n    private c: ElementChildList;\n\n    constructor(obj: Element) {\n        this.element = obj;\n        this.c = this.element.childList;\n    }\n\n    patch(settings: any) {\n        if (Utils.isObjectLiteral(settings)) {\n            this._setByObject(settings);\n        } else if (Array.isArray(settings)) {\n            this._setByArray(settings);\n        }\n    }\n\n    getRefs(): Record<string, Element | undefined> {\n        return this.c.getRefs();\n    }\n\n    getIndex(item: Element) {\n        return this.c.getIndex(item);\n    }\n\n    add(item: Element) {\n        this.c.add(item);\n    }\n\n    setAt(item: Element, index: number) {\n        this.c.setAt(item, index);\n    }\n\n    _setByObject(settings: any) {\n        // Overrule settings of known referenced items.\n        const refs = this.getRefs();\n        const crefs = Object.keys(settings);\n        for (let i = 0, n = crefs.length; i < n; i++) {\n            const cref = crefs[i];\n            const s = settings[cref];\n\n            let c = refs[cref];\n            if (!c) {\n                if (this.isItem(s)) {\n                    // Replace previous item;\n                    s.ref = cref;\n                    this.add(s);\n                } else {\n                    // Create new item.\n                    c = this.createItem(s);\n                    c.ref = cref;\n                    Patcher.patchObject(c, s);\n                    this.add(c);\n                }\n            } else {\n                if (this.isItem(s)) {\n                    if (c !== s) {\n                        // Replace previous item;\n                        const idx = this.getIndex(c);\n                        s.ref = cref;\n                        this.setAt(s, idx);\n                    }\n                } else {\n                    Patcher.patchObject(c, s);\n                }\n            }\n        }\n    }\n\n    _equalsArray(array: any[]) {\n        let same = true;\n        const items = this.c.getItems();\n        if (array.length === items.length) {\n            for (let i = 0, n = items.length; i < n && same; i++) {\n                same = same && items[i] === array[i];\n            }\n        } else {\n            same = false;\n        }\n        return same;\n    }\n\n    _setByArray(array: any[]) {\n        // For performance reasons, first check if the arrays match exactly and bail out if they do.\n        if (this._equalsArray(array)) {\n            return;\n        }\n\n        const items = this.c.getItems();\n\n        let refs;\n        const newItems = [];\n        for (let i = 0, n = array.length; i < n; i++) {\n            const s = array[i];\n            if (this.isItem(s)) {\n                newItems.push(s);\n            } else {\n                const cref = s.ref;\n                let c;\n                if (cref) {\n                    if (!refs) refs = this.getRefs();\n                    c = refs[cref];\n                }\n\n                if (!c) {\n                    // Create new item.\n                    c = this.createItem(s);\n                }\n\n                if (Utils.isObjectLiteral(s)) {\n                    Patcher.patchObject(c, s);\n                }\n\n                newItems.push(c);\n            }\n        }\n\n        this.c.setItems(newItems);\n    }\n\n    createItem(object: any): Element {\n        return Patcher.createObject(object, Element, this.element.stage);\n    }\n\n    isItem(object: any) {\n        return object instanceof Element;\n    }\n}\n","import { SingleReferenceHandler } from \"./SingleReferenceHandler\";\nimport { Element } from \"../../tree/Element\";\nimport { Shader } from \"../../tree/Shader\";\nimport { Constructor } from \"../../util/types\";\n\nexport class ShaderHandler extends SingleReferenceHandler {\n    constructor(sourceType: Constructor<Element>, name: string) {\n        super(sourceType, name, Shader, (obj) => [obj.stage.context]);\n    }\n\n    handle(obj: any, settings: any) {\n        if (settings && settings.type) {\n            const type = (obj as Element).stage.renderer.getSupportedShaderType(settings.type);\n            if (!type) {\n                console.warn(\"Shader has no implementation for render target: \" + settings.type.name);\n                obj[this.name] = undefined;\n                return;\n            }\n            if (type !== settings.type) {\n                return super.handle(obj, Object.assign({}, settings, { type }));\n            }\n        }\n        super.handle(obj, settings);\n    }\n}\n","import { Utils } from \"../../tree/Utils\";\nimport { WebGLCoreQuadList } from \"./WebGLCoreQuadList\";\nimport { WebGLCoreQuadOperation } from \"./WebGLCoreQuadOperation\";\nimport { WebGLCoreRenderExecutor } from \"./WebGLCoreRenderExecutor\";\nimport { CoreRenderState } from \"../../tree/core/CoreRenderState\";\nimport { WebGLDefaultShader } from \"./shaders/WebGLDefaultShader\";\nimport { WebGLShader } from \"./WebGLShader\";\nimport { Renderer, CopyRenderTextureOptions } from \"../Renderer\";\nimport { TextureSource } from \"../../tree/TextureSource\";\nimport { CoreContext } from \"../../tree/core/CoreContext\";\nimport { Shader } from \"../../tree/Shader\";\nimport { Constructor } from \"../../util/types\";\nimport { ElementCore } from \"../../tree/core/ElementCore\";\nimport { RenderTextureInfo } from \"../../tree/core/RenderTextureInfo\";\nimport { WebGLShaderProgram } from \"./WebGLShaderProgram\";\nimport { TextureSourceOptions } from \"../../tree/Texture\";\nimport { NativeTexture } from \"../NativeTexture\";\nimport { WebGLRenderTexture } from \"./WebGLRenderTexture\";\nimport { WebGLNativeTexture } from \"./WebGLNativeTexture\";\nimport { WebGLCoreRenderState } from \"./WebGLCoreRenderState\";\nimport { RenderTexture } from \"../RenderTexture\";\n\nexport class WebGLRenderer extends Renderer {\n    private shaderPrograms = new Map<Constructor<WebGLShader>, WebGLShaderProgram>();\n\n    destroy() {\n        this.shaderPrograms.forEach((shaderProgram) => shaderProgram.destroy());\n    }\n\n    _createDefaultShader(context: CoreContext) {\n        return new WebGLDefaultShader(context);\n    }\n\n    _getShaderBaseType() {\n        return WebGLShader;\n    }\n\n    protected _getShaderAlternative(shaderType: Constructor<Shader>): Constructor<Shader> | undefined {\n        return (shaderType as any).getWebGL();\n    }\n\n    createCoreQuadList() {\n        return new WebGLCoreQuadList(this.stage.bufferMemory);\n    }\n\n    createCoreQuadOperation(\n        context: CoreContext,\n        shader: Shader,\n        shaderOwner: ElementCore,\n        renderTextureInfo: RenderTextureInfo,\n        scissor: number[] | undefined,\n        index: number,\n    ) {\n        return new WebGLCoreQuadOperation(\n            context,\n            shader as WebGLShader,\n            shaderOwner,\n            renderTextureInfo,\n            scissor,\n            index,\n        );\n    }\n\n    createCoreRenderExecutor(context: CoreContext) {\n        return new WebGLCoreRenderExecutor(context);\n    }\n\n    createCoreRenderState(context: CoreContext): CoreRenderState {\n        return new WebGLCoreRenderState(context);\n    }\n\n    createRenderTexture(w: number, h: number, pw: number, ph: number): WebGLRenderTexture {\n        const gl = this.stage.gl;\n        const glTexture: WebGLRenderTexture = gl.createTexture() as WebGLRenderTexture;\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, pw, ph, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        glTexture.params = {};\n        glTexture.params[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\n        glTexture.params[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\n        glTexture.params[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\n        glTexture.params[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\n        glTexture.options = { format: gl.RGBA, internalFormat: gl.RGBA, type: gl.UNSIGNED_BYTE };\n\n        // We need a specific framebuffer for every render texture.\n        glTexture.framebuffer = gl.createFramebuffer()!;\n        glTexture.projection = new Float32Array([2 / w, 2 / h]);\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, glTexture.framebuffer);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, glTexture, 0);\n\n        return glTexture;\n    }\n\n    freeRenderTexture(glTexture: WebGLRenderTexture) {\n        const gl = this.stage.gl;\n        gl.deleteFramebuffer(glTexture.framebuffer);\n        gl.deleteTexture(glTexture);\n    }\n\n    uploadTextureSource(textureSource: TextureSource, options: TextureSourceOptions): NativeTexture {\n        const gl = this.stage.gl;\n\n        const source = options.source;\n\n        const format = {\n            premultiplyAlpha: true,\n            hasAlpha: true,\n            texParams: {} as TexParams,\n            texOptions: {\n                format: 0,\n                internalFormat: 0,\n                type: gl.UNSIGNED_BYTE,\n            },\n        };\n\n        if (options && options.premultiplyAlpha !== undefined) {\n            format.premultiplyAlpha = options.premultiplyAlpha;\n        }\n\n        if (options && options.hasAlpha !== undefined) {\n            format.hasAlpha = options.hasAlpha;\n        }\n\n        if (!format.hasAlpha) {\n            format.premultiplyAlpha = false;\n        }\n\n        format.texParams = options.texParams || {};\n\n        const glTexture = gl.createTexture() as WebGLNativeTexture;\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, format.premultiplyAlpha);\n\n        const texParams = format.texParams;\n        if (!texParams[gl.TEXTURE_MAG_FILTER]) texParams[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\n        if (!texParams[gl.TEXTURE_MIN_FILTER]) texParams[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\n        if (!texParams[gl.TEXTURE_WRAP_S]) texParams[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\n        if (!texParams[gl.TEXTURE_WRAP_T]) texParams[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\n\n        for (const [key, value] of Object.entries(texParams)) {\n            gl.texParameteri(gl.TEXTURE_2D, parseInt(key, 10), value);\n        }\n\n        const texOptions = format.texOptions;\n        texOptions.format = (texOptions && texOptions.format) || (format.hasAlpha ? gl.RGBA : gl.RGB);\n        texOptions.type = (texOptions && texOptions.type) || gl.UNSIGNED_BYTE;\n        texOptions.internalFormat = (texOptions && texOptions.internalFormat) || texOptions.format;\n\n        this.stage.platform.uploadGlTexture(gl, textureSource, source, texOptions);\n\n        glTexture.params = Utils.cloneObjShallow(texParams);\n        glTexture.options = Utils.cloneObjShallow(texOptions);\n\n        return glTexture;\n    }\n\n    freeTextureSource(textureSource: TextureSource) {\n        this.stage.gl.deleteTexture(textureSource.nativeTexture!);\n    }\n\n    copyRenderTexture(renderTexture: RenderTexture, nativeTexture: WebGLTexture, options: CopyRenderTextureOptions) {\n        const gl = this.stage.gl;\n        gl.bindTexture(gl.TEXTURE_2D, nativeTexture);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, (renderTexture as WebGLRenderTexture).framebuffer);\n        const pixelRatio = renderTexture.pixelRatio;\n        gl.copyTexSubImage2D(\n            gl.TEXTURE_2D,\n            0,\n            pixelRatio * (options.sx || 0),\n            pixelRatio * (options.sy || 0),\n            pixelRatio * (options.x || 0),\n            pixelRatio * (options.y || 0),\n            pixelRatio * (options.w || renderTexture.ow),\n            pixelRatio * (options.h || renderTexture.oh),\n        );\n    }\n\n    getShaderProgram(shaderType: Constructor<WebGLShader>): WebGLShaderProgram | undefined {\n        return this.shaderPrograms.get(shaderType);\n    }\n\n    setShaderProgram(shaderType: Constructor<WebGLShader>, program: WebGLShaderProgram) {\n        this.shaderPrograms.set(shaderType, program);\n    }\n\n    onResizeCanvasSize() {\n        (this.stage.context.renderExecutor as WebGLCoreRenderExecutor).updateProjectionVector();\n    }\n}\n\ntype TexParams = { [key: number]: GLenum };\n","import { CoreQuadList } from \"../../tree/core/CoreQuadList\";\n\nexport class WebGLCoreQuadList extends CoreQuadList {\n    // Allocate a fairly big chunk of memory that should be enough to support ~100000 (default) quads.\n    public data: ArrayBuffer;\n    public floats: Float32Array;\n    public uints: Uint32Array;\n    private dataLength: number = 0;\n\n    constructor(bufferMemory: number) {\n        super();\n        this.data = new ArrayBuffer(bufferMemory);\n        this.floats = new Float32Array(this.data);\n        this.uints = new Uint32Array(this.data);\n    }\n\n    getDataLength() {\n        return this.dataLength;\n    }\n\n    setDataLength(dataLength: number) {\n        this.dataLength = dataLength;\n    }\n\n    reset() {\n        super.reset();\n        this.dataLength = 0;\n    }\n\n    getAttribsDataByteOffset(index: number) {\n        // Where this quad can be found in the attribs buffer.\n        return index * 80;\n    }\n\n    getQuadContents(): string[] {\n        // Debug: log contents of quad buffer.\n        const floats = this.floats;\n        const uints = this.uints;\n        const lines = [];\n        for (let i = 1; i <= this.length; i++) {\n            let str = \"entry \" + i + \": \";\n            for (let j = 0; j < 4; j++) {\n                const b = i * 20 + j * 4;\n                str +=\n                    floats[b] +\n                    \",\" +\n                    floats[b + 1] +\n                    \":\" +\n                    floats[b + 2] +\n                    \",\" +\n                    floats[b + 3] +\n                    \"[\" +\n                    uints[b + 4].toString(16) +\n                    \"] \";\n            }\n            lines.push(str);\n        }\n\n        return lines;\n    }\n}\n","import { CoreQuadOperation } from \"../../tree/core/CoreQuadOperation\";\nimport { CoreContext } from \"../../tree/core/CoreContext\";\nimport { ElementCore } from \"../../tree/core/ElementCore\";\nimport { RenderTextureInfo } from \"../../tree/core/RenderTextureInfo\";\nimport { WebGLCoreRenderExecutor } from \"./WebGLCoreRenderExecutor\";\nimport { WebGLShader } from \"./WebGLShader\";\nimport { WebGLCoreQuadList } from \"./WebGLCoreQuadList\";\nimport { WebGLRenderTexture } from \"./WebGLRenderTexture\";\n\nexport class WebGLCoreQuadOperation extends CoreQuadOperation {\n    extraAttribsDataByteOffset: number;\n\n    constructor(\n        context: CoreContext,\n        shader: WebGLShader,\n        shaderOwner: ElementCore,\n        renderTextureInfo: RenderTextureInfo,\n        scissor: number[] | undefined,\n        index: number,\n    ) {\n        super(context, shader, shaderOwner, renderTextureInfo, scissor, index);\n\n        this.extraAttribsDataByteOffset = 0;\n    }\n\n    get quadList(): WebGLCoreQuadList {\n        return super.quadList as WebGLCoreQuadList;\n    }\n\n    getWebGLShader(): WebGLShader {\n        return this.shader as WebGLShader;\n    }\n\n    getAttribsDataByteOffset(index: number) {\n        // Where this quad can be found in the attribs buffer.\n        return (this.quadList as WebGLCoreQuadList).getAttribsDataByteOffset(this.index + index);\n    }\n\n    // Returns the relative pixel coordinates in the shader owner to gl position coordinates in the render texture.\n    getNormalRenderTextureCoords(x: number, y: number) {\n        const coords = this.shaderOwner.getRenderTextureCoords(x, y);\n        coords[0] /= this.getRenderWidth();\n        coords[1] /= this.getRenderHeight();\n        coords[0] = coords[0] * 2 - 1;\n        coords[1] = 1 - coords[1] * 2;\n        return coords;\n    }\n\n    getProjection() {\n        if (this.renderTextureInfo && this.renderTextureInfo.renderTexture) {\n            return (this.renderTextureInfo.renderTexture as WebGLRenderTexture).projection;\n        } else {\n            return (this.context.renderExecutor as WebGLCoreRenderExecutor).projection;\n        }\n    }\n}\n","import { CoreRenderExecutor } from \"../../tree/core/CoreRenderExecutor\";\nimport { CoreContext } from \"../../tree/core/CoreContext\";\nimport { CoreQuadOperation } from \"../../tree/core/CoreQuadOperation\";\nimport { WebGLCoreQuadOperation } from \"./WebGLCoreQuadOperation\";\nimport { WebGLShader } from \"./WebGLShader\";\nimport { WebGLCoreQuadList } from \"./WebGLCoreQuadList\";\nimport { RenderTexture } from \"../RenderTexture\";\nimport { WebGLRenderTexture } from \"./WebGLRenderTexture\";\nimport { WebGLCoreRenderState } from \"./WebGLCoreRenderState\";\n\nexport class WebGLCoreRenderExecutor extends CoreRenderExecutor<WebGLCoreRenderState> {\n    public readonly attribsBuffer: WebGLBuffer;\n    public readonly quadsBuffer: WebGLBuffer;\n\n    // The matrix that maps the [0,0 - W,H] coordinates to [-1,-1 - 1,1] in the vertex shaders.\n    public projection: Float32Array;\n\n    public scissor: number[] | undefined;\n    public currentShaderProgram?: WebGLShader = undefined;\n    public readonly gl: WebGLRenderingContext;\n    public quadIndexType: typeof WebGLRenderingContext.UNSIGNED_SHORT | typeof WebGLRenderingContext.UNSIGNED_INT =\n        WebGLRenderingContext.UNSIGNED_SHORT;\n\n    constructor(context: CoreContext) {\n        super(context);\n\n        this.gl = this.context.stage.gl;\n\n        this.attribsBuffer = this.gl.createBuffer()!;\n\n        this.quadsBuffer = this.gl.createBuffer()!;\n\n        this.projection = this.getProjectionVector();\n\n        this.init();\n    }\n\n    updateProjectionVector() {\n        this.projection = this.getProjectionVector();\n    }\n\n    private getProjectionVector() {\n        return new Float32Array([2 / this.context.stage.coordsWidth, -2 / this.context.stage.coordsHeight]);\n    }\n\n    init() {\n        const gl = this.gl;\n\n        const maxQuads = Math.floor(this.renderState.quadList.data.byteLength / 80);\n\n        const indexUintExtension = gl.getExtension(\"OES_element_index_uint\");\n\n        this.quadIndexType = indexUintExtension\n            ? WebGLRenderingContext.UNSIGNED_INT\n            : WebGLRenderingContext.UNSIGNED_SHORT;\n\n        const arrayType = this.quadIndexType === WebGLRenderingContext.UNSIGNED_INT ? Uint32Array : Uint16Array;\n\n        const allIndices = new arrayType(maxQuads * 6);\n\n        // fill the indices with the quads to draw.\n        for (let i = 0, j = 0; i < maxQuads; i += 6, j += 4) {\n            allIndices[i] = j;\n            allIndices[i + 1] = j + 1;\n            allIndices[i + 2] = j + 2;\n            allIndices[i + 3] = j;\n            allIndices[i + 4] = j + 2;\n            allIndices[i + 5] = j + 3;\n        }\n\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.quadsBuffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, allIndices, gl.STATIC_DRAW);\n    }\n\n    destroy() {\n        super.destroy();\n        this.gl.deleteBuffer(this.attribsBuffer);\n        this.gl.deleteBuffer(this.quadsBuffer);\n    }\n\n    protected _reset() {\n        super._reset();\n\n        const gl = this.gl;\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.BLEND);\n        gl.disable(gl.DEPTH_TEST);\n\n        this._stopShaderProgram();\n        this._setupBuffers();\n    }\n\n    protected _setupBuffers() {\n        const gl = this.gl;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.quadsBuffer);\n        const element = new DataView(this.renderState.quadList.data, 0, this.renderState.quadList.getDataLength());\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.attribsBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, element, gl.DYNAMIC_DRAW);\n    }\n\n    protected _setupQuadOperation(quadOperation: WebGLCoreQuadOperation) {\n        super._setupQuadOperation(quadOperation);\n        this._useShaderProgram(quadOperation.getWebGLShader(), quadOperation);\n    }\n\n    protected _renderQuadOperation(op: WebGLCoreQuadOperation) {\n        const shader = op.getWebGLShader();\n\n        if (op.length || op.shader.addEmpty()) {\n            shader.beforeDraw(op);\n            shader.draw(op);\n            shader.afterDraw(op);\n        }\n    }\n\n    protected _useShaderProgram(shader: WebGLShader, operation: WebGLCoreQuadOperation) {\n        if (!shader.hasSameProgram(this.currentShaderProgram!)) {\n            if (this.currentShaderProgram) {\n                this.currentShaderProgram.stopProgram();\n            }\n            shader.useProgram();\n            this.currentShaderProgram = shader;\n        }\n        shader.setupUniforms(operation);\n    }\n\n    protected _stopShaderProgram() {\n        if (this.currentShaderProgram) {\n            // The currently used shader program should be stopped gracefully.\n            this.currentShaderProgram.stopProgram();\n            this.currentShaderProgram = undefined;\n        }\n    }\n\n    public _bindRenderTexture(renderTexture: RenderTexture) {\n        super._bindRenderTexture(renderTexture);\n\n        const gl = this.gl;\n        if (!renderTexture) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            gl.viewport(0, 0, this.context.stage.w, this.context.stage.h);\n        } else {\n            const rt = renderTexture as WebGLRenderTexture;\n            gl.bindFramebuffer(gl.FRAMEBUFFER, rt.framebuffer);\n            gl.viewport(0, 0, rt.w, rt.h);\n        }\n    }\n\n    protected _clearRenderTexture() {\n        super._clearRenderTexture();\n        const gl = this.gl;\n        if (!this._renderTexture) {\n            const glClearColor = this.context.stage.getClearColor();\n            if (glClearColor) {\n                gl.clearColor(\n                    glClearColor[0] * glClearColor[3],\n                    glClearColor[1] * glClearColor[3],\n                    glClearColor[2] * glClearColor[3],\n                    glClearColor[3],\n                );\n                gl.clear(gl.COLOR_BUFFER_BIT);\n            }\n        } else {\n            // Clear texture.\n            gl.clearColor(0, 0, 0, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n    }\n\n    protected _setScissor(area: number[] | undefined) {\n        super._setScissor(area);\n\n        if (this.scissor === area) {\n            return;\n        }\n        this.scissor = area;\n\n        const gl = this.gl;\n        if (!area) {\n            gl.disable(gl.SCISSOR_TEST);\n        } else {\n            gl.enable(gl.SCISSOR_TEST);\n            const pixelRatio = this.context.stage.getPixelRatio();\n            let y = area[1];\n            if (this._renderTexture === undefined) {\n                // Flip, for the main framebuffer the coordinates are inversed.\n                y = this.context.stage.coordsHeight - (area[1] + area[3]);\n            }\n            gl.scissor(\n                Math.round(area[0] * pixelRatio),\n                Math.round(y * pixelRatio),\n                Math.round(area[2] * pixelRatio),\n                Math.round(area[3] * pixelRatio),\n            );\n        }\n    }\n}\n","import { CoreRenderState } from \"../../tree/core/CoreRenderState\";\nimport { NativeTexture } from \"../NativeTexture\";\nimport { WebGLCoreQuadList } from \"./WebGLCoreQuadList\";\nimport { ColorUtils } from \"../../tree/ColorUtils\";\nimport { RenderTextureInfo } from \"../../tree/core/RenderTextureInfo\";\nimport { WebGLCoreQuadOperation } from \"./WebGLCoreQuadOperation\";\nimport { ElementCore } from \"../../tree/core/ElementCore\";\n\nexport class WebGLCoreRenderState extends CoreRenderState<WebGLCoreQuadList, WebGLCoreQuadOperation> {\n    isRenderTextureReusable(renderTextureInfo: RenderTextureInfo): boolean {\n        const offset = (this.renderTextureInfo!.reusableRenderStateOffset * 80) / 4;\n        const floats = this.quadList.floats;\n        const uints = this.quadList.uints;\n        return (\n            floats[offset] === 0 &&\n            floats[offset + 1] === 0 &&\n            floats[offset + 2] === 0 &&\n            floats[offset + 3] === 0 &&\n            uints[offset + 4] === 0xffffffff &&\n            floats[offset + 5] === renderTextureInfo.w &&\n            floats[offset + 6] === 0 &&\n            floats[offset + 7] === 1 &&\n            floats[offset + 8] === 0 &&\n            uints[offset + 9] === 0xffffffff &&\n            floats[offset + 10] === renderTextureInfo.w &&\n            floats[offset + 11] === renderTextureInfo.h &&\n            floats[offset + 12] === 1 &&\n            floats[offset + 13] === 1 &&\n            uints[offset + 14] === 0xffffffff &&\n            floats[offset + 15] === 0 &&\n            floats[offset + 16] === renderTextureInfo.h &&\n            floats[offset + 17] === 0 &&\n            floats[offset + 18] === 1 &&\n            uints[offset + 19] === 0xffffffff\n        );\n    }\n\n    finishRenderState(): void {\n        // Set extra shader attribute data.\n        let offset = this.length * 80;\n        for (let i = 0, n = this.quadOperations.length; i < n; i++) {\n            const quadOperation = this.quadOperations[i];\n            quadOperation.extraAttribsDataByteOffset = offset;\n            const extra = quadOperation.getWebGLShader().getExtraAttribBytesPerVertex() * 4 * quadOperation.length;\n            offset += extra;\n            if (extra) {\n                quadOperation.getWebGLShader().setExtraAttribsInBuffer(quadOperation);\n            }\n        }\n        this.quadList.setDataLength(offset);\n    }\n\n    addQuad(texture: NativeTexture, elementCore: ElementCore) {\n        const index = this.length;\n\n        const quadList = this.quadList;\n        let offset = index * 20;\n\n        quadList.add(texture, elementCore);\n\n        const r = elementCore.getRenderContext();\n\n        const floats = quadList.floats;\n        const uints = quadList.uints;\n        const mca = ColorUtils.mergeColorAlpha;\n\n        const w = elementCore.getLayoutW();\n        const h = elementCore.getLayoutH();\n\n        if (r.tb !== 0 || r.tc !== 0) {\n            floats[offset++] = r.px;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore.ulx;\n            floats[offset++] = elementCore.uly;\n            uints[offset++] = mca(elementCore.colorUl, r.alpha);\n            floats[offset++] = r.px + w * r.ta;\n            floats[offset++] = r.py + w * r.tc;\n            floats[offset++] = elementCore.brx;\n            floats[offset++] = elementCore.uly;\n            uints[offset++] = mca(elementCore.colorUr, r.alpha);\n            floats[offset++] = r.px + w * r.ta + h * r.tb;\n            floats[offset++] = r.py + w * r.tc + h * r.td;\n            floats[offset++] = elementCore.brx;\n            floats[offset++] = elementCore.bry;\n            uints[offset++] = mca(elementCore.colorBr, r.alpha);\n            floats[offset++] = r.px + h * r.tb;\n            floats[offset++] = r.py + h * r.td;\n            floats[offset++] = elementCore.ulx;\n            floats[offset++] = elementCore.bry;\n            uints[offset] = mca(elementCore.colorBl, r.alpha);\n        } else {\n            // Simple.\n            const cx = r.px + w * r.ta;\n            const cy = r.py + h * r.td;\n\n            floats[offset++] = r.px;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore.ulx;\n            floats[offset++] = elementCore.uly;\n            uints[offset++] = mca(elementCore.colorUl, r.alpha);\n            floats[offset++] = cx;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore.brx;\n            floats[offset++] = elementCore.uly;\n            uints[offset++] = mca(elementCore.colorUr, r.alpha);\n            floats[offset++] = cx;\n            floats[offset++] = cy;\n            floats[offset++] = elementCore.brx;\n            floats[offset++] = elementCore.bry;\n            uints[offset++] = mca(elementCore.colorBr, r.alpha);\n            floats[offset++] = r.px;\n            floats[offset++] = cy;\n            floats[offset++] = elementCore.ulx;\n            floats[offset++] = elementCore.bry;\n            uints[offset] = mca(elementCore.colorBl, r.alpha);\n        }\n    }\n}\n","import { C2dCoreQuadList } from \"./C2dCoreQuadList\";\nimport { C2dCoreQuadOperation } from \"./C2dCoreQuadOperation\";\nimport { C2dCoreRenderExecutor } from \"./C2dCoreRenderExecutor\";\nimport { C2dDefaultShader } from \"./shaders/C2dDefaultShader\";\nimport { C2dShader } from \"./C2dShader\";\nimport { Renderer, CopyRenderTextureOptions } from \"../Renderer\";\nimport { C2dTextureTintManager } from \"./C2dTextureTintManager\";\nimport { Stage } from \"../../tree/Stage\";\nimport { RenderTexture } from \"../RenderTexture\";\nimport { CoreContext } from \"../../tree/core/CoreContext\";\nimport { Shader } from \"../../tree/Shader\";\nimport { Constructor } from \"../../util/types\";\nimport { ElementCore } from \"../../tree/core/ElementCore\";\nimport { RenderTextureInfo } from \"../../tree/core/RenderTextureInfo\";\nimport { C2dCoreRenderState } from \"./C2dCoreRenderState\";\nimport { TextureSource } from \"../../tree/TextureSource\";\nimport { TextureSourceOptions } from \"../../tree/Texture\";\nimport { NativeTexture } from \"../NativeTexture\";\nimport { C2dNativeTexture } from \"./C2dNativeTexture\";\nimport { C2dRenderTexture } from \"./C2dRenderTexture\";\n\nexport class C2dRenderer extends Renderer {\n    public readonly tintManager: C2dTextureTintManager = new C2dTextureTintManager(this.stage);\n\n    constructor(stage: Stage) {\n        super(stage);\n\n        this.setupCanvasAsRenderTexture(stage.canvas);\n    }\n\n    destroy() {\n        this.tintManager.destroy();\n    }\n\n    _createDefaultShader(context: CoreContext): Shader {\n        return new C2dDefaultShader(context);\n    }\n\n    _getShaderBaseType(): Constructor<Shader> {\n        return C2dShader;\n    }\n\n    protected _getShaderAlternative(shaderType: Constructor<Shader>): Constructor<Shader> | undefined {\n        return (shaderType as any).getC2d();\n    }\n\n    createCoreQuadList() {\n        return new C2dCoreQuadList();\n    }\n\n    createCoreQuadOperation(\n        context: CoreContext,\n        shader: Shader,\n        shaderOwner: ElementCore,\n        renderTextureInfo: RenderTextureInfo,\n        scissor: number[] | undefined,\n        index: number,\n    ) {\n        return new C2dCoreQuadOperation(context, shader, shaderOwner, renderTextureInfo, scissor, index);\n    }\n\n    createCoreRenderExecutor(context: CoreContext) {\n        return new C2dCoreRenderExecutor(context);\n    }\n\n    createCoreRenderState(context: CoreContext) {\n        return new C2dCoreRenderState(context);\n    }\n\n    createRenderTexture(w: number, h: number, pw: number, ph: number): RenderTexture {\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = pw;\n        canvas.height = ph;\n        this.setupCanvasAsRenderTexture(canvas);\n        return (canvas as unknown) as RenderTexture;\n    }\n\n    freeRenderTexture(renderTexture: RenderTexture) {\n        this.tintManager.delete(renderTexture as C2dRenderTexture);\n    }\n\n    gc(aggressive: boolean) {\n        this.tintManager.gc(aggressive);\n    }\n\n    uploadTextureSource(textureSource: TextureSource, options: TextureSourceOptions): NativeTexture {\n        // In case of Context2d, we usually do not need to upload.\n        // Only in case of ArrayBuffer\n        // For canvas, we do not need to upload.\n        if (options.source instanceof Uint8ClampedArray) {\n            // Convert RGBA buffer to canvas.\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = options.width!;\n            canvas.height = options.height!;\n\n            const imageData = new ImageData(options.source as Uint8ClampedArray, options.width!, options.height!);\n            canvas.getContext(\"2d\")!.putImageData(imageData, 0, 0);\n            return (canvas as unknown) as NativeTexture;\n        }\n\n        return options.source as NativeTexture;\n    }\n\n    freeTextureSource(textureSource: TextureSource) {\n        this.tintManager.delete(textureSource.nativeTexture as C2dNativeTexture);\n    }\n\n    private setupCanvasAsRenderTexture(canvas: HTMLCanvasElement) {\n        const context = canvas.getContext(\"2d\")!;\n        (canvas as C2dRenderTexture).context = context;\n        (canvas as C2dRenderTexture).context.scissor = undefined;\n\n        // Save base state so we can restore the defaults later.\n        context.save();\n    }\n\n    copyRenderTexture(renderTexture: RenderTexture, nativeTexture: WebGLTexture, options: CopyRenderTextureOptions) {\n        throw new Error(\"Copy render texture not implemented\");\n    }\n}\n","import { CoreQuadList } from \"../../tree/core/CoreQuadList\";\nimport { ElementCoreContext } from \"../../tree/core/ElementCoreContext\";\n\nexport class C2dCoreQuadList extends CoreQuadList {\n    private renderContexts: ElementCoreContext[] = [];\n    private modes: number[] = [];\n\n    setRenderContext(index: number, v: ElementCoreContext) {\n        this.renderContexts[index] = v;\n    }\n\n    setSimpleTc(index: number, v: boolean) {\n        if (v) {\n            this.modes[index] |= 1;\n        } else {\n            this.modes[index] -= this.modes[index] & 1;\n        }\n    }\n\n    setWhite(index: number, v: boolean) {\n        if (v) {\n            this.modes[index] |= 2;\n        } else {\n            this.modes[index] -= this.modes[index] & 2;\n        }\n    }\n\n    getRenderContext(index: number) {\n        return this.renderContexts[index];\n    }\n\n    getSimpleTc(index: number) {\n        return this.modes[index] & 1;\n    }\n\n    getWhite(index: number) {\n        return this.modes[index] & 2;\n    }\n}\n","import { CoreQuadOperation } from \"../../tree/core/CoreQuadOperation\";\nimport { C2dCoreQuadList } from \"./C2dCoreQuadList\";\nimport { C2dShader } from \"./C2dShader\";\n\nexport class C2dCoreQuadOperation extends CoreQuadOperation {\n    get quadList(): C2dCoreQuadList {\n        return super.quadList as C2dCoreQuadList;\n    }\n\n    getC2dShader(): C2dShader {\n        return this.shader as C2dShader;\n    }\n\n    getRenderContext(index: number) {\n        return this.quadList.getRenderContext(this.index + index);\n    }\n\n    getSimpleTc(index: number) {\n        return this.quadList.getSimpleTc(this.index + index);\n    }\n\n    getWhite(index: number) {\n        return this.quadList.getWhite(this.index + index);\n    }\n}\n","import { CoreRenderExecutor } from \"../../tree/core/CoreRenderExecutor\";\nimport { ColorUtils } from \"../../tree/ColorUtils\";\nimport { C2dCoreQuadOperation } from \"./C2dCoreQuadOperation\";\nimport { C2dRenderTexture } from \"./C2dRenderTexture\";\nimport { CoreRenderState } from \"../../tree/core/CoreRenderState\";\nimport { C2dCoreRenderState } from \"./C2dCoreRenderState\";\n\nexport class C2dCoreRenderExecutor extends CoreRenderExecutor<C2dCoreRenderState> {\n    private _mainRenderTexture = this.context.stage.getCanvas() as C2dRenderTexture;\n\n    protected _renderQuadOperation(op: C2dCoreQuadOperation) {\n        const shader = op.getC2dShader();\n\n        if (op.length || op.shader.addEmpty()) {\n            const target = (this._renderTexture || this._mainRenderTexture) as C2dRenderTexture;\n            shader.beforeDraw(op, target);\n            shader.draw(op, target);\n            shader.afterDraw(op, target);\n        }\n    }\n\n    _clearRenderTexture() {\n        const context = this._getContext();\n\n        const renderTexture = context.canvas;\n        context.setTransform(1, 0, 0, 1, 0, 0);\n\n        let clearColor: number[] | null = [0, 0, 0, 0];\n        if (this._mainRenderTexture.context === context) {\n            clearColor = this.context.stage.getClearColor();\n        }\n        if (clearColor) {\n            if (!clearColor[0] && !clearColor[1] && !clearColor[2] && !clearColor[3]) {\n                context.clearRect(0, 0, renderTexture.width, renderTexture.height);\n            } else {\n                context.fillStyle = ColorUtils.getRgbaStringFromArray(clearColor);\n                // Do not use fillRect because it produces artifacts.\n                context.globalCompositeOperation = \"copy\";\n                context.beginPath();\n                context.rect(0, 0, renderTexture.width, renderTexture.height);\n                context.closePath();\n                context.fill();\n                context.globalCompositeOperation = \"source-over\";\n            }\n        }\n    }\n\n    _getContext() {\n        if (this._renderTexture) {\n            return (this._renderTexture as C2dRenderTexture).context;\n        } else {\n            return this._mainRenderTexture.context;\n        }\n    }\n\n    _restoreContext() {\n        const context = this._getContext();\n        context.restore();\n        context.save();\n        context.scissor = undefined;\n    }\n\n    _setScissor(area: number[] | undefined) {\n        const context = this._getContext();\n\n        if (!CoreRenderState.scissorsEqual(context.scissor, area)) {\n            // Clipping is stored in the canvas context state.\n            // We can't reset clipping alone so we need to restore the full context.\n            this._restoreContext();\n\n            const pixelRatio = this.context.stage.getPixelRatio();\n            if (area) {\n                context.beginPath();\n                context.rect(\n                    Math.round(area[0] * pixelRatio),\n                    Math.round(area[1] * pixelRatio),\n                    Math.round(area[2] * pixelRatio),\n                    Math.round(area[3] * pixelRatio),\n                );\n                context.closePath();\n                context.clip();\n            }\n            context.scissor = area;\n        }\n    }\n}\n","import { Stage } from \"../../tree/Stage\";\nimport { C2dTintCache } from \"./C2dTintCache\";\nimport { C2dNativeTexture } from \"./C2dNativeTexture\";\nimport { C2dRenderTexture } from \"./C2dRenderTexture\";\n\nexport class C2dTextureTintManager {\n    private _usedMemory: number = 0;\n    private _cachedNativeTextures = new Set<C2dNativeTexture>();\n\n    constructor(private stage: Stage) {}\n\n    destroy() {\n        this.gc(true);\n    }\n\n    private _addMemoryUsage(delta: number) {\n        this._usedMemory += delta;\n\n        this.stage.addMemoryUsage(delta);\n    }\n\n    delete(nativeTexture: C2dNativeTexture) {\n        // Should be called when native texture is cleaned up.\n        if (this._hasCache(nativeTexture)) {\n            const cache = this._getCache(nativeTexture);\n            const prevMemUsage = cache.memoryUsage;\n            cache.clear();\n            this._cachedNativeTextures.delete(nativeTexture);\n            this._addMemoryUsage(cache.memoryUsage - prevMemUsage);\n        }\n    }\n\n    getTintTexture(nativeTexture: C2dNativeTexture, color: number) {\n        const frame = this.stage.frameCounter;\n\n        this._cachedNativeTextures.add(nativeTexture);\n\n        const cache = this._getCache(nativeTexture);\n\n        const item = cache.get(color);\n        item.lf = frame;\n\n        if (item.tx) {\n            if (nativeTexture.updateFrame > item.u) {\n                // Native texture was updated in the mean time: renew.\n                this._tintTexture(item.tx, nativeTexture, color);\n            }\n\n            return item.tx;\n        } else {\n            const before = cache.memoryUsage;\n\n            // Find blanco tint texture.\n            let target = cache.reuseTexture(frame);\n            if (target) {\n                target.context.clearRect(0, 0, target.w, target.h);\n            } else {\n                // Allocate new.\n                target = document.createElement(\"canvas\") as C2dRenderTexture;\n                target.w = nativeTexture.w;\n                target.h = nativeTexture.h;\n                target.width = nativeTexture.width as number;\n                target.height = nativeTexture.height as number;\n                target.context = target.getContext(\"2d\")!;\n            }\n\n            this._tintTexture(target, nativeTexture, color);\n            cache.set(color, target, frame);\n\n            const after = cache.memoryUsage;\n\n            if (after !== before) {\n                this._addMemoryUsage(after - before);\n            }\n\n            return target;\n        }\n    }\n\n    _tintTexture(target: C2dRenderTexture, source: C2dNativeTexture, color: number) {\n        let col = color.toString(16);\n        while (col.length < 6) {\n            col = \"0\" + col;\n        }\n        target.context.fillStyle = \"#\" + col;\n        target.context.globalCompositeOperation = \"copy\";\n        target.context.fillRect(0, 0, source.w, source.h);\n        target.context.globalCompositeOperation = \"multiply\";\n        target.context.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.w, target.h);\n\n        // Alpha-mix the texture.\n        target.context.globalCompositeOperation = \"destination-in\";\n        target.context.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.w, target.h);\n    }\n\n    private _hasCache(nativeTexture: C2dNativeTexture) {\n        return !!nativeTexture.tintCache;\n    }\n\n    private _getCache(nativeTexture: C2dNativeTexture): C2dTintCache {\n        if (!nativeTexture.tintCache) {\n            nativeTexture.tintCache = new C2dTintCache(nativeTexture);\n        }\n        return nativeTexture.tintCache;\n    }\n\n    gc(aggressive: boolean = false) {\n        const frame = this.stage.frameCounter;\n        let delta = 0;\n        this._cachedNativeTextures.forEach((texture) => {\n            const cache = this._getCache(texture);\n            const before = cache.memoryUsage;\n            cache.cleanup(frame);\n            cache.releaseBlancoTextures();\n            delta += cache.memoryUsage - before;\n        });\n\n        if (aggressive) {\n            this._cachedNativeTextures.clear();\n        }\n\n        if (delta) {\n            this._addMemoryUsage(delta);\n        }\n    }\n}\n","import { NativeTexture } from \"../NativeTexture\";\nimport { C2dRenderTexture } from \"./C2dRenderTexture\";\n\ntype CacheEntry = {\n    tx: C2dRenderTexture | undefined;\n    lf: number;\n    u: number;\n};\n\nexport class C2dTintCache {\n    private _colors = new Map<number, CacheEntry>();\n    private _blancoTextures: C2dRenderTexture[] = [];\n    private _lastCleanupFrame: number = 0;\n    private _memTextures: number = 0;\n\n    constructor(public readonly nativeTexture: NativeTexture) {}\n\n    get memoryUsage() {\n        return this._memTextures * this.nativeTexture.w * this.nativeTexture.h;\n    }\n\n    releaseBlancoTextures() {\n        this._memTextures -= this._blancoTextures.length;\n        this._blancoTextures = [];\n    }\n\n    clear() {\n        this._blancoTextures = [];\n        this._colors.clear();\n        this._memTextures = 0;\n    }\n\n    get(color: number) {\n        let item: CacheEntry | undefined = this._colors.get(color);\n        if (!item) {\n            item = { lf: -1, tx: undefined, u: -1 };\n            this._colors.set(color, item);\n        }\n        return item;\n    }\n\n    set(color: number, texture: C2dRenderTexture, frame: number) {\n        const item = this.get(color);\n        item.lf = frame;\n        item.tx = texture;\n        item.u = frame;\n        this._memTextures++;\n    }\n\n    cleanup(frame: number) {\n        // We only need to clean up once per frame.\n        if (this._lastCleanupFrame !== frame) {\n            // We limit blanco textures reuse to one frame only to prevent memory usage growth.\n            this._blancoTextures = [];\n\n            this._colors.forEach((item, color) => {\n                // Clean up entries that were not used last frame.\n                if (item.lf < frame - 1) {\n                    if (item.tx) {\n                        // Keep as reusable blanco texture.\n                        this._blancoTextures.push(item.tx);\n                    }\n                    this._colors.delete(color);\n                }\n            });\n\n            this._lastCleanupFrame = frame;\n        }\n    }\n\n    reuseTexture(frame: number): C2dRenderTexture | undefined {\n        // Try to reuse textures, because creating them every frame is expensive.\n        this.cleanup(frame);\n        if (this._blancoTextures && this._blancoTextures.length) {\n            this._memTextures--;\n            return this._blancoTextures.pop();\n        }\n    }\n}\n","import { CoreRenderState } from \"../../tree/core/CoreRenderState\";\nimport { NativeTexture } from \"../NativeTexture\";\nimport { RenderTextureInfo } from \"../../tree/core/RenderTextureInfo\";\nimport { ElementCore } from \"../../tree/core/ElementCore\";\nimport { C2dCoreQuadList } from \"./C2dCoreQuadList\";\n\nexport class C2dCoreRenderState extends CoreRenderState<C2dCoreQuadList> {\n    isRenderTextureReusable(renderTextureInfo: RenderTextureInfo): boolean {\n        return false;\n    }\n\n    finishRenderState(): void {}\n\n    addQuad(texture: NativeTexture, elementCore: ElementCore) {\n        const index = this.length;\n\n        // Render context changes while traversing so we save it by ref.\n        const quadList = this.quadList;\n        quadList.add(texture, elementCore);\n        quadList.setRenderContext(index, elementCore.getRenderContext());\n        quadList.setWhite(index, elementCore.isWhite());\n        quadList.setSimpleTc(index, elementCore.hasSimpleTexCoords());\n    }\n}\n","import { Stage } from \"../Stage\";\nimport { ElementCore } from \"./ElementCore\";\nimport { CoreRenderState } from \"./CoreRenderState\";\nimport { CoreRenderExecutor } from \"./CoreRenderExecutor\";\nimport { NativeTexture } from \"../../renderer/NativeTexture\";\nimport { CopyRenderTextureOptions } from \"../../renderer/Renderer\";\nimport { RenderTexture } from \"../../renderer/RenderTexture\";\n\nexport class CoreContext {\n    public root?: ElementCore = undefined;\n    public updateTreeOrder: number = 0;\n    public readonly renderState: CoreRenderState = this.stage.renderer.createCoreRenderState(this);\n    public readonly renderExecutor: CoreRenderExecutor = this.stage.renderer.createCoreRenderExecutor(this);\n    private _usedMemory: number = 0;\n    private _renderTexturePool: RenderTexture[] = [];\n    private _renderTextureId: number = 1;\n    private _zSorts: ElementCore[];\n\n    constructor(public readonly stage: Stage) {\n        this._zSorts = [];\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    destroy() {\n        this._renderTexturePool.forEach((texture) => this._freeRenderTexture(texture));\n        this._usedMemory = 0;\n    }\n\n    private getRootParent(): ElementCore {\n        return this.root!.getParent()!;\n    }\n\n    hasRenderUpdates() {\n        return this.getRootParent().hasRenderUpdates();\n    }\n\n    _clearRenderUpdatesFlag() {\n        this.getRootParent().clearHasRenderUpdates();\n    }\n\n    setRenderUpdatesFlag() {\n        this.getRootParent().setHasRenderUpdates(1);\n    }\n\n    render() {\n        this._render();\n    }\n\n    update() {\n        // We must clear flag before the update loop, because update events may trigger new render updates.\n        this._clearRenderUpdatesFlag();\n\n        this._update();\n\n        // Due to the boundsVisibility flag feature (and onAfterUpdate hook), it is possible that other elements were\n        // changed during the update loop (for example due to the txLoaded event). We process these changes immediately\n        // (but not recursively to prevent infinite loops).\n        if (this.root!.hasUpdates()) {\n            this._update();\n        }\n\n        this._performForcedZSorts();\n    }\n\n    /**\n     * Certain ElementCore items may be forced to zSort to strip out references to prevent memleaks..\n     */\n    private _performForcedZSorts() {\n        const n = this._zSorts.length;\n        if (n) {\n            // Forced z-sorts (ElementCore may force a z-sort in order to free memory/prevent memory leaks).\n            for (let i = 0; i < n; i++) {\n                if (this._zSorts[i].zSort) {\n                    this._zSorts[i].sortZIndexedChildren();\n                }\n            }\n            this._zSorts = [];\n        }\n    }\n\n    private _update() {\n        this.updateTreeOrder = 0;\n        this.root!.update();\n    }\n\n    private _render() {\n        // Obtain a sequence of the quad operations.\n        this._fillRenderState();\n\n        // Now run them with the render executor.\n        this._performRender();\n    }\n\n    private _fillRenderState() {\n        this.renderState.reset();\n        this.root!.render();\n        this.renderState.finish();\n    }\n\n    private _performRender() {\n        this.renderExecutor.execute();\n    }\n\n    private _addMemoryUsage(delta: number) {\n        this._usedMemory += delta;\n        this.stage.addMemoryUsage(delta);\n    }\n\n    allocateRenderTexture(w: number, h: number) {\n        const prec = this.stage.getPixelRatio();\n        const pw = Math.max(1, Math.round(w * prec));\n        const ph = Math.max(1, Math.round(h * prec));\n\n        // Search last item first, so that last released render texture is preferred (may cause memory cache benefits).\n        const n = this._renderTexturePool.length;\n        for (let i = n - 1; i >= 0; i--) {\n            const texture = this._renderTexturePool[i];\n            // We don't want to reuse the same render textures within the same frame because that will create gpu stalls.\n            if (texture.w === pw && texture.h === ph && texture.updateFrame !== this.stage.frameCounter) {\n                texture.f = this.stage.frameCounter;\n                this._renderTexturePool.splice(i, 1);\n                return texture;\n            }\n        }\n\n        const renderTexture = this._createRenderTexture(w, h, pw, ph);\n        renderTexture.pixelRatio = prec;\n        return renderTexture;\n    }\n\n    releaseRenderTexture(texture: RenderTexture) {\n        this._renderTexturePool.push(texture);\n    }\n\n    freeUnusedRenderTextures(maxAge = 60) {\n        // Clean up all textures that are no longer used.\n        // This cache is short-lived because it is really just meant to supply running shaders that are\n        // updated during a number of frames.\n        const limit = this.stage.frameCounter - maxAge;\n\n        this._renderTexturePool = this._renderTexturePool.filter((texture) => {\n            if (texture.f <= limit) {\n                this._freeRenderTexture(texture);\n                return false;\n            }\n            return true;\n        });\n    }\n\n    protected _createRenderTexture(w: number, h: number, pw: number, ph: number) {\n        this._addMemoryUsage(pw * ph);\n\n        const texture = this.stage.renderer.createRenderTexture(w, h, pw, ph);\n        texture._id = this._renderTextureId++;\n        texture.f = this.stage.frameCounter;\n        texture.ow = w;\n        texture.oh = h;\n        texture.w = pw;\n        texture.h = ph;\n\n        return texture;\n    }\n\n    _freeRenderTexture(renderTexture: RenderTexture) {\n        this.stage.renderer.freeRenderTexture(renderTexture);\n        this._addMemoryUsage(-renderTexture.w * renderTexture.h);\n    }\n\n    copyRenderTexture(renderTexture: RenderTexture, nativeTexture: NativeTexture, options: CopyRenderTextureOptions) {\n        this.stage.renderer.copyRenderTexture(renderTexture, nativeTexture, options);\n    }\n\n    forceZSort(elementCore: ElementCore) {\n        this._zSorts.push(elementCore);\n    }\n}\n","import { ImageWorker } from \"./imageWorker/ImageWorker\";\nimport { Stage } from \"../../tree/Stage\";\nimport { TextureDrawableSource, TextureSourceOptions } from \"../../tree/Texture\";\nimport { TextureSource } from \"../../tree/TextureSource\";\n\n/**\n * Platform-specific functionality.\n * Copyright Metrological, 2017\n * Copyright Bas van Meurs, 2020\n */\nexport class WebPlatform {\n    private _looping: boolean = false;\n    private _awaitingLoop: boolean = false;\n    private _imageWorker?: ImageWorker = undefined;\n\n    constructor(private stage: Stage) {}\n\n    init() {\n        if (this.stage.useImageWorker) {\n            if (!window.createImageBitmap || !window.Worker) {\n                console.warn(\n                    \"Can't use image worker because browser does not have createImageBitmap and Web Worker support\",\n                );\n            } else {\n                // Firefox does support createImageBitmap, but not with the required paramater signature.\n                const canvas = this.stage.getDrawingCanvas();\n                canvas.width = 1;\n                canvas.height = 1;\n                (window.createImageBitmap as any)(canvas, {\n                    premultiplyAlpha: \"premultiply\",\n                    colorSpaceConversion: \"none\",\n                    imageOrientation: \"none\",\n                })\n                    .then(() => {\n                        console.log(\"Using image worker!\");\n                        this._imageWorker = new ImageWorker();\n                    })\n                    .catch(() => {\n                        console.warn(\n                            \"Can't use image worker: createImageBitmap does not support signature. Using on-thread image parsing.\",\n                        );\n                    });\n            }\n        }\n    }\n\n    destroy() {\n        if (this._imageWorker) {\n            this._imageWorker.destroy();\n        }\n    }\n\n    startLoop() {\n        this._looping = true;\n        if (!this._awaitingLoop) {\n            this.loop();\n        }\n    }\n\n    stopLoop() {\n        this._looping = false;\n    }\n\n    loop() {\n        const lp = () => {\n            this._awaitingLoop = false;\n            if (this._looping) {\n                this.stage.drawFrame();\n                requestAnimationFrame(lp);\n                this._awaitingLoop = true;\n            }\n        };\n        requestAnimationFrame(lp);\n    }\n\n    uploadGlTexture(\n        gl: WebGLRenderingContext,\n        textureSource: TextureSource,\n        source: TextureDrawableSource,\n        options: any,\n    ) {\n        if ((source as any).buffer) {\n            // Uint8Array\n            gl.texImage2D(\n                gl.TEXTURE_2D,\n                0,\n                options.internalFormat,\n                textureSource.w,\n                textureSource.h,\n                0,\n                options.format,\n                options.type,\n                source as any,\n            );\n        } else {\n            // Web-specific data types.\n            gl.texImage2D(\n                gl.TEXTURE_2D,\n                0,\n                options.internalFormat,\n                options.format,\n                options.type,\n                source as TexImageSource,\n            );\n        }\n    }\n\n    loadSrcTexture(info: { src: string; hasAlpha: boolean }, cb: (err: Error | undefined, result?: any) => void) {\n        const { src, hasAlpha } = info;\n        let cancelCb;\n        const isPng = src.indexOf(\".png\") >= 0;\n        if (this._imageWorker) {\n            // WPE-specific image parser.\n            const image = this._imageWorker.create(src);\n            image.onError = (err: Error) => {\n                return cb(err);\n            };\n            image.onLoad = (imageInfo: { imageBitmap: ImageBitmap; hasAlphaChannel: boolean }) => {\n                cb(undefined, {\n                    source: imageInfo.imageBitmap,\n                    renderInfo: { src },\n                    hasAlpha: imageInfo.hasAlphaChannel,\n                    premultiplyAlpha: true,\n                });\n            };\n            cancelCb = () => {\n                image.cancel();\n            };\n        } else {\n            const image = new Image();\n            if (!(src.substr(0, 5) === \"data:\")) {\n                // Base64.\n                image.crossOrigin = \"Anonymous\";\n            }\n            image.onerror = (err: string | Event) => {\n                // Ignore error message when cancelled.\n                if (image.src) {\n                    return cb(new Error(\"Image loading error: \" + err));\n                }\n            };\n            image.onload = () => {\n                cb(undefined, {\n                    source: image,\n                    renderInfo: { src },\n                    hasAlpha: isPng || hasAlpha,\n                });\n            };\n            image.src = src;\n\n            cancelCb = () => {\n                image.onerror = null;\n                image.onload = null;\n                image.removeAttribute(\"src\");\n            };\n        }\n\n        return cancelCb;\n    }\n\n    createWebGLContext(): WebGLRenderingContext {\n        const canvas = this.stage.canvas;\n\n        const opts = {\n            alpha: true,\n            antialias: false,\n            premultipliedAlpha: true,\n            stencil: true,\n            preserveDrawingBuffer: false,\n        };\n\n        const gl = (canvas.getContext(\"webgl\", opts) ||\n            canvas.getContext(\"experimental-webgl\", opts)) as WebGLRenderingContext;\n        if (!gl) {\n            throw new Error(\"This browser does not support webGL.\");\n        }\n\n        return gl;\n    }\n\n    createCanvasContext() {\n        const canvas = this.stage.canvas;\n\n        const c2d = canvas.getContext(\"2d\");\n        if (!c2d) {\n            throw new Error(\"This browser does not support 2d canvas.\");\n        }\n\n        return c2d;\n    }\n\n    getHrTime() {\n        return window.performance ? window.performance.now() : new Date().getTime();\n    }\n\n    getDrawingCanvas() {\n        // We can't reuse this canvas because textures may load async.\n        return document.createElement(\"canvas\");\n    }\n\n    getTextureOptionsForDrawingCanvas(canvas: HTMLCanvasElement) {\n        const options: TextureSourceOptions = {\n            source: canvas,\n        };\n        return options;\n    }\n\n    nextFrame(changes: boolean) {\n        /* WebGL blits automatically */\n    }\n}\n","import { createWorker } from \"./createWorker\";\nimport { ImageWorkerImage } from \"./ImageWorkerImage\";\n\nexport class ImageWorker {\n    private _items = new Map<number, ImageWorkerImage>();\n    private _id: number = 0;\n    private _worker: Worker;\n\n    constructor() {\n        this._worker = createWorker();\n\n        this._worker.postMessage({ type: \"config\", config: { path: window.location.href } });\n\n        this._worker.onmessage = (e) => {\n            if (e.data && e.data.id) {\n                const id = e.data.id;\n                const item = this._items.get(id);\n                if (item) {\n                    if (e.data.type === \"data\") {\n                        this.finish(item, e.data.info);\n                    } else {\n                        this.error(\n                            item,\n                            new Error(`Image loading error type ${e.data.info.type}: ${e.data.info.message}`),\n                        );\n                    }\n                }\n            }\n        };\n    }\n\n    destroy() {\n        if (this._worker) {\n            this._worker.terminate();\n        }\n    }\n\n    create(src: string): ImageWorkerImage {\n        const id = ++this._id;\n        const item = new ImageWorkerImage(this, id, src);\n        this._items.set(id, item);\n        this._worker.postMessage({ type: \"add\", id, src });\n        return item;\n    }\n\n    cancel(image: ImageWorkerImage) {\n        this._worker.postMessage({ type: \"cancel\", id: image.id });\n        this._items.delete(image.id);\n    }\n\n    error(image: ImageWorkerImage, info: Error) {\n        image.error(info);\n        this._items.delete(image.id);\n    }\n\n    finish(image: ImageWorkerImage, info: any) {\n        image.load(info);\n        this._items.delete(image.id);\n    }\n}\n","export function createWorker() {\n    const code = `(${createWorkerServer.toString()})()`;\n    const blob = new Blob([code.replace('\"use strict\";', \"\")]); // firefox adds \"use strict\"; to any function which might block worker execution so knock it off\n    const blobURL = ((window.URL ? URL : window.webkitURL).createObjectURL as any)(blob, {\n        type: \"application/javascript; charset=utf-8\",\n    });\n    return new Worker(blobURL);\n}\n\n/**\n * Notice that, within the createWorker function, we must only use ES5 code to keep it ES5-valid after babelifying, as\n *  the converted code of this section is converted to a blob and used as the js of the web worker thread.\n */\nfunction createWorkerServer() {\n    class ImageWorkerServer {\n        private items = new Map<string, ImageWorkerServerItem>();\n        private config?: any = undefined;\n        private relativeBase?: string = undefined;\n\n        constructor() {\n            onmessage = (e) => {\n                this._receiveMessage(e);\n            };\n        }\n\n        static isPathAbsolute(path: string) {\n            return /^(?:\\/|[a-z]+:\\/\\/)/.test(path);\n        }\n\n        _receiveMessage(e: any) {\n            if (e.data.type === \"config\") {\n                this.config = e.data.config;\n\n                const base = this.config.path;\n                const parts = base.split(\"/\");\n                parts.pop();\n                this.relativeBase = parts.join(\"/\") + \"/\";\n            } else if (e.data.type === \"add\") {\n                this.add(e.data.id, e.data.src);\n            } else if (e.data.type === \"cancel\") {\n                this.cancel(e.data.id);\n            }\n        }\n\n        add(id: string, src: string) {\n            // Convert relative URLs.\n            if (this.relativeBase && !ImageWorkerServer.isPathAbsolute(src)) {\n                src = this.relativeBase + src;\n            }\n\n            if (src.substr(0, 2) === \"//\") {\n                // This doesn't work for image workers.\n                src = \"http:\" + src;\n            }\n\n            const item = new ImageWorkerServerItem(id, src);\n            item.onFinish = (result: any) => {\n                this.finish(item, result);\n            };\n            item.onError = (info: any) => {\n                this.error(item, info);\n            };\n            this.items.set(id, item);\n            item.start();\n        }\n\n        cancel(id: string) {\n            const item = this.items.get(id);\n            if (item) {\n                item.cancel();\n                this.items.delete(id);\n            }\n        }\n\n        finish(item: ImageWorkerServerItem, info: any) {\n            const { imageBitmap, hasAlphaChannel } = info;\n            (postMessage as any)(\n                {\n                    type: \"data\",\n                    id: item.id,\n                    info: {\n                        imageBitmap,\n                        hasAlphaChannel,\n                    },\n                },\n                [imageBitmap],\n            );\n            this.items.delete(item.id);\n        }\n\n        error(item: ImageWorkerServerItem, info: any) {\n            const { type, message } = info;\n            (postMessage as any)({\n                type: \"error\",\n                id: item.id,\n                info: {\n                    type,\n                    message,\n                },\n            });\n            this.items.delete(item.id);\n        }\n    }\n\n    class ImageWorkerServerItem {\n        public onError?: (info: any) => void = undefined;\n        public onFinish?: (info: any) => void = undefined;\n\n        private xhr?: XMLHttpRequest = undefined;\n\n        private mimeType?: string = undefined;\n\n        private canceled = false;\n\n        constructor(public readonly id: string, public readonly src: string) {}\n\n        start() {\n            this.xhr = new XMLHttpRequest();\n            this.xhr.open(\"GET\", this.src, true);\n            this.xhr.responseType = \"blob\";\n\n            this.xhr.onerror = (oEvent) => {\n                this.error(\"connection\", \"Connection error\");\n            };\n\n            this.xhr.onload = (oEvent) => {\n                const blob = this.xhr!.response;\n                this.mimeType = blob.type;\n\n                this.createImageBitmap(blob);\n            };\n\n            this.xhr.send();\n        }\n\n        private createImageBitmap(blob: any) {\n            (createImageBitmap as any)(blob, {\n                premultiplyAlpha: \"premultiply\",\n                colorSpaceConversion: \"none\",\n                imageOrientation: \"none\",\n            })\n                .then((imageBitmap: ImageBitmap) => {\n                    this.finish({\n                        imageBitmap,\n                        hasAlphaChannel: this.hasAlphaChannel(),\n                    });\n                })\n                .catch(() => {\n                    this.error(\"parse\", \"Error parsing image data\");\n                });\n        }\n\n        private hasAlphaChannel() {\n            return this.mimeType && this.mimeType.indexOf(\"image/png\") !== -1;\n        }\n\n        cancel() {\n            if (this.canceled) return;\n            if (this.xhr) {\n                this.xhr.abort();\n            }\n            this.canceled = true;\n        }\n\n        private error(type: string, message: string) {\n            if (!this.canceled && this.onError) {\n                this.onError({ type, message });\n            }\n        }\n\n        finish(info: any) {\n            if (!this.canceled && this.onFinish) {\n                this.onFinish(info);\n            }\n        }\n    }\n\n    const worker = new ImageWorkerServer();\n}\n","import { ImageWorker } from \"./ImageWorker\";\n\nexport class ImageWorkerImage {\n    private _onError?: (error: Error) => void;\n    private _onLoad?: (info: any) => void;\n\n    constructor(private manager: ImageWorker, public id: number, public src: string) {}\n\n    set onError(f: (error: Error) => void | undefined) {\n        this._onError = f;\n    }\n\n    set onLoad(f: (info: any) => void | undefined) {\n        this._onLoad = f;\n    }\n\n    cancel() {\n        this.manager.cancel(this);\n    }\n\n    load(info: any) {\n        if (this._onLoad) {\n            this._onLoad(info);\n        }\n    }\n\n    error(info: Error) {\n        if (this._onError) {\n            this._onError(info);\n        }\n    }\n}\n","export * from \"./Patcher\";\n","import { mouseEventTranslator, SupportedMouseEvents } from \"./mouseEvents\";\nimport { Node } from \"../runtime/nodes/Node\";\nimport { Events } from \"@vue/runtime-dom\";\nimport { SupportedTouchEvents, touchEventTranslator } from \"./touchEvents\";\nimport { VugelStage } from \"../wrapper\";\nimport { focusEventTranslator, SupportedFocusEvents } from \"./focusEvents\";\nimport { keyboardEventTranslator, SupportedKeyboardEvents } from \"./keyboardEvents\";\n\nexport type SupportedEvents =\n    | SupportedMouseEvents\n    | SupportedTouchEvents\n    | SupportedFocusEvents\n    | SupportedKeyboardEvents;\n\nexport interface VugelEvent<T extends Event | undefined = undefined> {\n    cancelBubble: boolean;\n    readonly currentTarget: Node | null;\n    readonly target: Node | null;\n    readonly type: SupportedEvents;\n    readonly originalEvent: T;\n}\n\nexport const eventTranslators = {\n    ...mouseEventTranslator,\n    ...touchEventTranslator,\n    ...focusEventTranslator,\n    ...keyboardEventTranslator,\n} as const;\n\n// Type helpers\nexport type RegisterEventDispatcher = (canvasElement: HTMLCanvasElement, stage: VugelStage) => any;\n\nexport type EventTranslator<O extends Event, V extends VugelEvent<Event>> = (stage: VugelStage, event: O) => V;\n\nexport type VugelEventListener<T extends VugelEvent<any>> = (event: T) => any;\n\nexport type VueEventsOfType<T extends Event> = keyof Pick<\n    Events,\n    {\n        [K in keyof Events]: Events[K] extends T ? (T extends Events[K] ? K : never) : never;\n    }[keyof Events]\n>;\n","import { Container } from \"../Container\";\nimport { ImageTexture } from \"tree2d\";\nimport { VugelStage } from \"../../../wrapper\";\n\nexport class Picture extends Container {\n    private tex: ImageTexture;\n\n    constructor(stage: VugelStage) {\n        super(stage);\n        this.tex = new ImageTexture(stage);\n        this.el.texture = this.tex;\n    }\n\n    set src(value: string) {\n        this.tex.src = value;\n    }\n}\n","import { Container } from \"../Container\";\nimport { VugelStage } from \"../../../wrapper\";\n\nexport class Rectangle extends Container {\n    constructor(stage: VugelStage) {\n        super(stage);\n        this.el.texture = stage.rectangleTexture;\n    }\n}\n","import { ensureBoolean, ensureColor, ensureFloat, ensureInt } from \"../Node\";\nimport { Element } from \"tree2d\";\nimport { RoundRectTexture, RoundRectOptions } from \"tree2d\";\nimport { DynamicSizeTexture } from \"./DynamicSizeTexture\";\nimport { VugelStage } from \"../../../wrapper\";\n\nexport class StyledRectangle extends DynamicSizeTexture {\n    private options: Partial<RoundRectOptions> = {};\n\n    private roundRectTexture: RoundRectTexture = new RoundRectTexture(this.stage);\n\n    constructor(stage: VugelStage) {\n        super(stage);\n        this.textureElement.texture = this.roundRectTexture;\n    }\n\n    set radius(radius: number) {\n        const r = ensureFloat(radius);\n        this.setOption(\"radius\", [r, r, r, r]);\n    }\n\n    set \"stroke-width\"(v: number) {\n        this.setOption(\"strokeWidth\", ensureInt(v));\n    }\n\n    set \"stroke-color\"(v: number) {\n        this.setOption(\"strokeColor\", ensureColor(v));\n    }\n\n    set fill(v: boolean) {\n        this.setOption(\"fill\", ensureBoolean(v));\n    }\n\n    set \"fill-color\"(v: number) {\n        this.setOption(\"fillColor\", ensureColor(v));\n    }\n\n    set \"shadow-blur\"(v: number) {\n        this.setOption(\"shadowBlur\", ensureFloat(v));\n    }\n\n    set \"shadow-color\"(v: number) {\n        this.setOption(\"shadowColor\", ensureColor(v));\n    }\n\n    set \"shadow-offset-x\"(v: number) {\n        this.setOption(\"shadowOffsetX\", ensureFloat(v));\n    }\n\n    set \"shadow-offset-y\"(v: number) {\n        this.setOption(\"shadowOffsetY\", ensureFloat(v));\n    }\n\n    private updateDimensions(w: number, h: number) {\n        this.options.w = w;\n        this.options.h = h;\n        this.updateRoundedRectangleTextureOptions();\n    }\n\n    private setOption<T extends keyof RoundRectOptions>(property: T, value: RoundRectOptions[T]) {\n        this.options[property] = value;\n        this.updateRoundedRectangleTextureOptions();\n    }\n\n    private updateRoundedRectangleTextureOptions() {\n        this.roundRectTexture.options = this.options;\n    }\n\n    protected handleResize(element: Element, w: number, h: number) {\n        if (this.options) {\n            this.updateDimensions(w, h);\n        }\n    }\n}\n","import { Element } from \"tree2d\";\nimport { SvgTexture, SvgOptions } from \"tree2d\";\nimport { VugelStage } from \"../../../wrapper\";\nimport { DynamicSizeTexture } from \"./DynamicSizeTexture\";\n\nexport class Svg extends DynamicSizeTexture {\n    private options: SvgOptions = { w: 0, h: 0, src: \"\" };\n\n    private svgTexture = new SvgTexture(this.stage);\n\n    constructor(stage: VugelStage) {\n        super(stage);\n        this.textureElement.texture = this.svgTexture;\n    }\n\n    set src(v: string) {\n        this.options.src = v;\n        this.updateTextureOptions();\n    }\n\n    private updateDimensions(w: number, h: number) {\n        this.options.w = w;\n        this.options.h = h;\n        this.updateTextureOptions();\n    }\n\n    private updateTextureOptions() {\n        this.svgTexture.options = this.options;\n    }\n\n    protected handleResize(element: Element, w: number, h: number) {\n        if (this.options) {\n            this.updateDimensions(w, h);\n        }\n    }\n}\n","import { Node } from \"../Node\";\nimport { TextTexture as Tree2dTextTexture } from \"tree2d\";\nimport { TextTextureSettings } from \"./TextTextureSettings\";\nimport { Delegator } from \"../../utils/Delegator\";\nimport { VugelStage } from \"../../../wrapper\";\n\nclass TextTexture extends Node {\n    private texture = new Tree2dTextTexture(this.stage);\n\n    private settings = new TextTextureSettings(() => this.update());\n\n    constructor(stage: VugelStage) {\n        super(stage);\n        this.el.texture = this.texture;\n    }\n\n    set text(text: string) {\n        this.texture.text = text;\n        this.update();\n    }\n\n    setElementText(text: string) {\n        this.texture.text = text.trim();\n    }\n\n    private update() {\n        this.texture.setSettings(this.settings.textSettings);\n    }\n}\n\nDelegator.delegate(TextTexture, TextTextureSettings, \"settings\");\ninterface Text extends TextTextureSettings {}\n\nexport { TextTexture };\n","import { Node } from \"../Node\";\nimport { Texture as Tree2dTexture } from \"tree2d\";\nimport { Constructor } from \"../../utils/types\";\n\nexport class Texture extends Node {\n    set type(v: Constructor<Tree2dTexture>) {\n        this.el.texture = new v(this.stage);\n    }\n\n    set options(v: Record<string, any>) {\n        const keys = Object.keys(v);\n        keys.forEach((key: string) => {\n            (this.el.texture as any)[key] = v[key];\n        });\n    }\n}\n","import { Container } from \"../Container\";\nimport { WebGLGrayscaleShader } from \"tree2d\";\nimport { ensureFloat } from \"../Node\";\nimport { VugelStage } from \"../../../wrapper\";\n\nexport class Grayscale extends Container {\n    private shader = new WebGLGrayscaleShader(this.stage.context);\n\n    constructor(stage: VugelStage) {\n        super(stage);\n        this.el.renderToTexture = true;\n        this.el.shader = this.shader;\n    }\n\n    set amount(v: number) {\n        this.shader.amount = ensureFloat(v);\n    }\n}\n","import { Container } from \"../Container\";\nimport { WebGLRoundedRectangleShader } from \"tree2d\";\nimport { ensureFloat } from \"../Node\";\nimport { VugelStage } from \"../../../wrapper\";\n\nexport class Rounded extends Container {\n    private shader = new WebGLRoundedRectangleShader(this.stage.context);\n\n    constructor(stage: VugelStage) {\n        super(stage);\n        this.el.shader = this.shader;\n        this.el.renderToTexture = true;\n    }\n\n    set radius(v: number) {\n        this.shader.radius = ensureFloat(v);\n    }\n}\n","import { Container } from \"../Container\";\nimport { WebGLBoxBlurShader } from \"tree2d\";\nimport { VugelStage } from \"../../../wrapper\";\n\nexport class BoxBlur extends Container {\n    private shader = new WebGLBoxBlurShader(this.stage.context);\n\n    constructor(stage: VugelStage) {\n        super(stage);\n        this.el.shader = this.shader;\n        this.el.renderToTexture = true;\n    }\n}\n","import { Container } from \"../Container\";\nimport { Shader as Tree2dShader } from \"tree2d\";\nimport { Constructor } from \"../../utils/types\";\n\nexport class Shader extends Container {\n    set type(v: Constructor<Tree2dShader>) {\n        this.el.renderToTexture = true;\n        this.el.shader = new v(this.stage.context);\n    }\n\n    set options(v: Record<string, any>) {\n        const keys = Object.keys(v);\n        keys.forEach((key: string) => {\n            (this.el.shader as any)[key] = v[key];\n        });\n    }\n}\n","import { Base } from \"./Base\";\n\nexport class Comment extends Base {\n    public readonly text: string;\n\n    constructor(text: string) {\n        super(undefined);\n        this.text = text;\n    }\n}\n","import { Base } from \"./Base\";\n\nexport class TextNode extends Base {\n    public readonly text: string;\n\n    constructor(text: string) {\n        super(undefined);\n        this.text = text;\n    }\n}\n","import { ComponentInternalInstance, SuspenseBoundary, VNode } from \"@vue/runtime-core\";\nimport { patchElProp } from \"./modules/props\";\n\nexport function patchProp(\n    el: Element,\n    key: string,\n    prevValue: any,\n    nextValue: any,\n    isSVG: boolean,\n    prevChildren?: VNode[],\n    parentComponent?: ComponentInternalInstance,\n    parentSuspense?: SuspenseBoundary,\n    unmountChildren?: any,\n) {\n    patchElProp(el, key, nextValue, prevChildren, parentComponent, parentSuspense, unmountChildren);\n}","export function patchElProp(\n    el: any,\n    key: string,\n    value: any,\n    // the following args are passed only due to potential innerHTML/textContent\n    // overriding existing VNodes, in which case the old tree must be properly\n    // unmounted.\n    prevChildren: any,\n    parentComponent: any,\n    parentSuspense: any,\n    unmountChildren: any,\n) {\n    el[key] = value;\n}\n","export { Node } from \"./Node\";\nexport { Container } from \"./Container\";\nexport { Paragraph } from \"./Paragraph\";\n\nexport * from \"./textures\";\nexport * from \"./effects\";\n","import { createRendererForStage, VugelRender } from \"./runtime\";\nimport {\n    ComponentPublicInstance,\n    defineComponent,\n    Fragment,\n    watchEffect,\n    h,\n    onMounted,\n    Ref,\n    ref,\n} from \"@vue/runtime-core\";\nimport { Stage, StageOptions } from \"tree2d\";\nimport { EventHelpers, setupEvents } from \"./events\";\nimport { Root } from \"./runtime/nodes/Root\";\n\nexport type VugelStage = Stage & { eventHelpers: EventHelpers };\n\nexport const Vugel: {\n    new (): ComponentPublicInstance<Partial<StageOptions>>;\n} = defineComponent({\n    props: {\n        settings: {\n            type: Object,\n        },\n    },\n    setup(props, setupContext) {\n        const elRef: Ref<HTMLCanvasElement | undefined> = ref();\n\n        onMounted(() => {\n            let rendered = false;\n            let vugelRenderer: VugelRender;\n            let stage: VugelStage;\n            let stageRoot: Root;\n\n            watchEffect(() => {\n                if (!rendered && elRef.value) {\n                    rendered = true;\n\n                    stage = new Stage(elRef.value, { ...props.settings }) as VugelStage;\n                    stage.eventHelpers = setupEvents(elRef.value, stage);\n\n                    vugelRenderer = createRendererForStage(stage);\n                    stageRoot = new Root(stage, stage.root);\n\n                    // Auto-inherit dimensions.\n                    stageRoot.w = (w: number) => w;\n                    stageRoot.h = (h: number) => h;\n                }\n\n                const defaultSlot = setupContext.slots.default;\n                if (defaultSlot) {\n                    vugelRenderer(h(Fragment, defaultSlot()), stageRoot);\n                } else {\n                    console.warn(\"No default slot is defined\");\n                }\n            });\n        });\n\n        // We need to use a wrapper for flexible size layouting to work with tree2d pixelRatio canvas auto-resizing.\n        return () =>\n            h(\n                \"div\",\n                {\n                    class: \"custom-renderer-wrapper\",\n                    style: { position: \"relative\" },\n                },\n                [\n                    h(\"canvas\", {\n                        class: \"custom-renderer\",\n                        style: { position: \"absolute\", width: \"100%\", height: \"100%\" },\n                        ref: elRef,\n                    }),\n                ],\n            );\n    },\n});\n","import { Container } from \"./Container\";\n\nexport class Root extends Container {}\n","import { camelize, callWithAsyncErrorHandling, warn, h, BaseTransition, getCurrentInstance, useTransitionState, onUpdated, Fragment, setTransitionHooks, resolveTransitionHooks, Comment, createVNode, createRenderer, createHydrationRenderer } from '@vue/runtime-core';\nexport * from '@vue/runtime-core';\nimport { isString, hyphenate, capitalize, isSpecialBooleanAttr, isArray, EMPTY_OBJ, isOn, isFunction, invokeArrayFns, looseIndexOf, looseEqual, isObject, isSymbol, hasOwn, hasChanged, toRawType, makeMap, isHTMLTag, isSVGTag } from '@vue/shared';\n\nconst svgNS = 'http://www.w3.org/2000/svg';\r\nconst doc = (typeof document !== 'undefined' ? document : null);\r\nlet tempContainer;\r\nlet tempSVGContainer;\r\nconst nodeOps = {\r\n    insert: (child, parent, anchor) => {\r\n        if (anchor) {\r\n            parent.insertBefore(child, anchor);\r\n        }\r\n        else {\r\n            parent.appendChild(child);\r\n        }\r\n    },\r\n    remove: child => {\r\n        const parent = child.parentNode;\r\n        if (parent) {\r\n            parent.removeChild(child);\r\n        }\r\n    },\r\n    createElement: (tag, isSVG, is) => isSVG\r\n        ? doc.createElementNS(svgNS, tag)\r\n        : doc.createElement(tag, is ? { is } : undefined),\r\n    createText: text => doc.createTextNode(text),\r\n    createComment: text => doc.createComment(text),\r\n    setText: (node, text) => {\r\n        node.nodeValue = text;\r\n    },\r\n    setElementText: (el, text) => {\r\n        el.textContent = text;\r\n    },\r\n    parentNode: node => node.parentNode,\r\n    nextSibling: node => node.nextSibling,\r\n    querySelector: selector => doc.querySelector(selector),\r\n    setScopeId(el, id) {\r\n        el.setAttribute(id, '');\r\n    },\r\n    cloneNode(el) {\r\n        return el.cloneNode(true);\r\n    },\r\n    // __UNSAFE__\r\n    // Reason: innerHTML.\r\n    // Static content here can only come from compiled templates.\r\n    // As long as the user only uses trusted templates, this is safe.\r\n    insertStaticContent(content, parent, anchor, isSVG) {\r\n        const temp = isSVG\r\n            ? tempSVGContainer ||\r\n                (tempSVGContainer = doc.createElementNS(svgNS, 'svg'))\r\n            : tempContainer || (tempContainer = doc.createElement('div'));\r\n        temp.innerHTML = content;\r\n        const node = temp.children[0];\r\n        nodeOps.insert(node, parent, anchor);\r\n        return node;\r\n    }\r\n};\n\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nfunction patchClass(el, value, isSVG) {\r\n    if (value == null) {\r\n        value = '';\r\n    }\r\n    if (isSVG) {\r\n        el.setAttribute('class', value);\r\n    }\r\n    else {\r\n        // directly setting className should be faster than setAttribute in theory\r\n        // if this is an element during a transition, take the temporary transition\r\n        // classes into account.\r\n        const transitionClasses = el._vtc;\r\n        if (transitionClasses) {\r\n            value = (value\r\n                ? [value, ...transitionClasses]\r\n                : [...transitionClasses]).join(' ');\r\n        }\r\n        el.className = value;\r\n    }\r\n}\n\nfunction patchStyle(el, prev, next) {\r\n    const style = el.style;\r\n    if (!next) {\r\n        el.removeAttribute('style');\r\n    }\r\n    else if (isString(next)) {\r\n        style.cssText = next;\r\n    }\r\n    else {\r\n        for (const key in next) {\r\n            setStyle(style, key, next[key]);\r\n        }\r\n        if (prev && !isString(prev)) {\r\n            for (const key in prev) {\r\n                if (!next[key]) {\r\n                    setStyle(style, key, '');\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nconst importantRE = /\\s*!important$/;\r\nfunction setStyle(style, name, val) {\r\n    if (name.startsWith('--')) {\r\n        // custom property definition\r\n        style.setProperty(name, val);\r\n    }\r\n    else {\r\n        const prefixed = autoPrefix(style, name);\r\n        if (importantRE.test(val)) {\r\n            // !important\r\n            style.setProperty(hyphenate(prefixed), val.replace(importantRE, ''), 'important');\r\n        }\r\n        else {\r\n            style[prefixed] = val;\r\n        }\r\n    }\r\n}\r\nconst prefixes = ['Webkit', 'Moz', 'ms'];\r\nconst prefixCache = {};\r\nfunction autoPrefix(style, rawName) {\r\n    const cached = prefixCache[rawName];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    let name = camelize(rawName);\r\n    if (name !== 'filter' && name in style) {\r\n        return (prefixCache[rawName] = name);\r\n    }\r\n    name = capitalize(name);\r\n    for (let i = 0; i < prefixes.length; i++) {\r\n        const prefixed = prefixes[i] + name;\r\n        if (prefixed in style) {\r\n            return (prefixCache[rawName] = prefixed);\r\n        }\r\n    }\r\n    return rawName;\r\n}\n\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\r\nfunction patchAttr(el, key, value, isSVG) {\r\n    if (isSVG && key.startsWith('xlink:')) {\r\n        if (value == null) {\r\n            el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\r\n        }\r\n        else {\r\n            el.setAttributeNS(xlinkNS, key, value);\r\n        }\r\n    }\r\n    else {\r\n        // note we are only checking boolean attributes that don't have a\r\n        // correspoding dom prop of the same name here.\r\n        const isBoolean = isSpecialBooleanAttr(key);\r\n        if (value == null || (isBoolean && value === false)) {\r\n            el.removeAttribute(key);\r\n        }\r\n        else {\r\n            el.setAttribute(key, isBoolean ? '' : value);\r\n        }\r\n    }\r\n}\n\n// __UNSAFE__\r\n// Reason: potentially setting innerHTML.\r\n// This can come from explicit usage of v-html or innerHTML as a prop in render\r\n// functions. The user is reponsible for using them with only trusted content.\r\nfunction patchDOMProp(el, key, value, \r\n// the following args are passed only due to potential innerHTML/textContent\r\n// overriding existing VNodes, in which case the old tree must be properly\r\n// unmounted.\r\nprevChildren, parentComponent, parentSuspense, unmountChildren) {\r\n    if (key === 'innerHTML' || key === 'textContent') {\r\n        if (prevChildren) {\r\n            unmountChildren(prevChildren, parentComponent, parentSuspense);\r\n        }\r\n        el[key] = value == null ? '' : value;\r\n        return;\r\n    }\r\n    if (key === 'value' && el.tagName !== 'PROGRESS') {\r\n        // store value as _value as well since\r\n        // non-string values will be stringified.\r\n        el._value = value;\r\n        el.value = value == null ? '' : value;\r\n        return;\r\n    }\r\n    if (value === '' && typeof el[key] === 'boolean') {\r\n        // e.g. <select multiple> compiles to { multiple: '' }\r\n        el[key] = true;\r\n    }\r\n    else {\r\n        el[key] = value == null ? '' : value;\r\n    }\r\n}\n\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nlet _getNow = Date.now;\r\n// Determine what event timestamp the browser is using. Annoyingly, the\r\n// timestamp can either be hi-res ( relative to page load) or low-res\r\n// (relative to UNIX epoch), so in order to compare time we have to use the\r\n// same timestamp type when saving the flush timestamp.\r\nif (typeof document !== 'undefined' &&\r\n    _getNow() > document.createEvent('Event').timeStamp) {\r\n    // if the low-res timestamp which is bigger than the event timestamp\r\n    // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n    // and we need to use the hi-res version for event listeners as well.\r\n    _getNow = () => performance.now();\r\n}\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow = 0;\r\nconst p = Promise.resolve();\r\nconst reset = () => {\r\n    cachedNow = 0;\r\n};\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()));\r\nfunction addEventListener(el, event, handler, options) {\r\n    el.addEventListener(event, handler, options);\r\n}\r\nfunction removeEventListener(el, event, handler, options) {\r\n    el.removeEventListener(event, handler, options);\r\n}\r\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\r\n    const name = rawName.slice(2).toLowerCase();\r\n    const prevOptions = prevValue && 'options' in prevValue && prevValue.options;\r\n    const nextOptions = nextValue && 'options' in nextValue && nextValue.options;\r\n    const invoker = prevValue && prevValue.invoker;\r\n    const value = nextValue && 'handler' in nextValue ? nextValue.handler : nextValue;\r\n    if (prevOptions || nextOptions) {\r\n        const prev = prevOptions || EMPTY_OBJ;\r\n        const next = nextOptions || EMPTY_OBJ;\r\n        if (prev.capture !== next.capture ||\r\n            prev.passive !== next.passive ||\r\n            prev.once !== next.once) {\r\n            if (invoker) {\r\n                removeEventListener(el, name, invoker, prev);\r\n            }\r\n            if (nextValue && value) {\r\n                const invoker = createInvoker(value, instance);\r\n                nextValue.invoker = invoker;\r\n                addEventListener(el, name, invoker, next);\r\n            }\r\n            return;\r\n        }\r\n    }\r\n    if (nextValue && value) {\r\n        if (invoker) {\r\n            prevValue.invoker = null;\r\n            invoker.value = value;\r\n            nextValue.invoker = invoker;\r\n            invoker.lastUpdated = getNow();\r\n        }\r\n        else {\r\n            addEventListener(el, name, createInvoker(value, instance), nextOptions || void 0);\r\n        }\r\n    }\r\n    else if (invoker) {\r\n        removeEventListener(el, name, invoker, prevOptions || void 0);\r\n    }\r\n}\r\nfunction createInvoker(initialValue, instance) {\r\n    const invoker = (e) => {\r\n        // async edge case #6566: inner click event triggers patch, event handler\r\n        // attached to outer element during patch, and triggered again. This\r\n        // happens because browsers fire microtask ticks between event propagation.\r\n        // the solution is simple: we save the timestamp when a handler is attached,\r\n        // and the handler would only fire if the event passed to it was fired\r\n        // AFTER it was attached.\r\n        if (e.timeStamp >= invoker.lastUpdated - 1) {\r\n            callWithAsyncErrorHandling(patchStopImmediatePropagation(e, invoker.value), instance, 5 /* NATIVE_EVENT_HANDLER */, [e]);\r\n        }\r\n    };\r\n    invoker.value = initialValue;\r\n    initialValue.invoker = invoker;\r\n    invoker.lastUpdated = getNow();\r\n    return invoker;\r\n}\r\nfunction patchStopImmediatePropagation(e, value) {\r\n    if (isArray(value)) {\r\n        const originalStop = e.stopImmediatePropagation;\r\n        e.stopImmediatePropagation = () => {\r\n            originalStop.call(e);\r\n            e._stopped = true;\r\n        };\r\n        return value.map(fn => (e) => !e._stopped && fn(e));\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\n\nconst nativeOnRE = /^on[a-z]/;\r\nconst patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\r\n    switch (key) {\r\n        // special\r\n        case 'class':\r\n            patchClass(el, nextValue, isSVG);\r\n            break;\r\n        case 'style':\r\n            patchStyle(el, prevValue, nextValue);\r\n            break;\r\n        default:\r\n            if (isOn(key)) {\r\n                // ignore v-model listeners\r\n                if (!key.startsWith('onUpdate:')) {\r\n                    patchEvent(el, key, prevValue, nextValue, parentComponent);\r\n                }\r\n            }\r\n            else if (isSVG\r\n                ? // most keys must be set as attribute on svg elements to work\r\n                    // ...except innerHTML\r\n                    key === 'innerHTML' ||\r\n                        // or native onclick with function values\r\n                        (key in el && nativeOnRE.test(key) && isFunction(nextValue))\r\n                : // for normal html elements, set as a property if it exists\r\n                    key in el &&\r\n                        // except native onclick with string values\r\n                        !(nativeOnRE.test(key) && isString(nextValue))) {\r\n                patchDOMProp(el, key, nextValue, prevChildren, parentComponent, parentSuspense, unmountChildren);\r\n            }\r\n            else {\r\n                // special case for <input v-model type=\"checkbox\"> with\r\n                // :true-value & :false-value\r\n                // store value as dom properties since non-string values will be\r\n                // stringified.\r\n                if (key === 'true-value') {\r\n                    el._trueValue = nextValue;\r\n                }\r\n                else if (key === 'false-value') {\r\n                    el._falseValue = nextValue;\r\n                }\r\n                patchAttr(el, key, nextValue, isSVG);\r\n            }\r\n            break;\r\n    }\r\n};\n\nconst getModelAssigner = (vnode) => {\r\n    const fn = vnode.props['onUpdate:modelValue'];\r\n    return isArray(fn) ? value => invokeArrayFns(fn, value) : fn;\r\n};\r\nfunction onCompositionStart(e) {\r\n    e.target.composing = true;\r\n}\r\nfunction onCompositionEnd(e) {\r\n    const target = e.target;\r\n    if (target.composing) {\r\n        target.composing = false;\r\n        trigger(target, 'input');\r\n    }\r\n}\r\nfunction trigger(el, type) {\r\n    const e = document.createEvent('HTMLEvents');\r\n    e.initEvent(type, true, true);\r\n    el.dispatchEvent(e);\r\n}\r\nfunction toNumber(val) {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n}\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nconst vModelText = {\r\n    beforeMount(el, { value, modifiers: { lazy, trim, number } }, vnode) {\r\n        el.value = value;\r\n        el._assign = getModelAssigner(vnode);\r\n        const castToNumber = number || el.type === 'number';\r\n        addEventListener(el, lazy ? 'change' : 'input', () => {\r\n            let domValue = el.value;\r\n            if (trim) {\r\n                domValue = domValue.trim();\r\n            }\r\n            else if (castToNumber) {\r\n                domValue = toNumber(domValue);\r\n            }\r\n            el._assign(domValue);\r\n        });\r\n        if (trim) {\r\n            addEventListener(el, 'change', () => {\r\n                el.value = el.value.trim();\r\n            });\r\n        }\r\n        if (!lazy) {\r\n            addEventListener(el, 'compositionstart', onCompositionStart);\r\n            addEventListener(el, 'compositionend', onCompositionEnd);\r\n            // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n            // switching focus before confirming composition choice\r\n            // this also fixes the issue where some browsers e.g. iOS Chrome\r\n            // fires \"change\" instead of \"input\" on autocomplete.\r\n            addEventListener(el, 'change', onCompositionEnd);\r\n        }\r\n    },\r\n    beforeUpdate(el, { value, oldValue, modifiers: { trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        if (value === oldValue) {\r\n            return;\r\n        }\r\n        if (document.activeElement === el) {\r\n            if (trim && el.value.trim() === value) {\r\n                return;\r\n            }\r\n            if ((number || el.type === 'number') && toNumber(el.value) === value) {\r\n                return;\r\n            }\r\n        }\r\n        el.value = value;\r\n    }\r\n};\r\nconst vModelCheckbox = {\r\n    beforeMount(el, binding, vnode) {\r\n        setChecked(el, binding, vnode);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            const modelValue = el._modelValue;\r\n            const elementValue = getValue(el);\r\n            const checked = el.checked;\r\n            const assign = el._assign;\r\n            if (isArray(modelValue)) {\r\n                const index = looseIndexOf(modelValue, elementValue);\r\n                const found = index !== -1;\r\n                if (checked && !found) {\r\n                    assign(modelValue.concat(elementValue));\r\n                }\r\n                else if (!checked && found) {\r\n                    const filtered = [...modelValue];\r\n                    filtered.splice(index, 1);\r\n                    assign(filtered);\r\n                }\r\n            }\r\n            else {\r\n                assign(getCheckboxValue(el, checked));\r\n            }\r\n        });\r\n    },\r\n    beforeUpdate(el, binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        setChecked(el, binding, vnode);\r\n    }\r\n};\r\nfunction setChecked(el, { value, oldValue }, vnode) {\r\n    el._modelValue = value;\r\n    if (isArray(value)) {\r\n        el.checked = looseIndexOf(value, vnode.props.value) > -1;\r\n    }\r\n    else if (value !== oldValue) {\r\n        el.checked = looseEqual(value, getCheckboxValue(el, true));\r\n    }\r\n}\r\nconst vModelRadio = {\r\n    beforeMount(el, { value }, vnode) {\r\n        el.checked = looseEqual(value, vnode.props.value);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            el._assign(getValue(el));\r\n        });\r\n    },\r\n    beforeUpdate(el, { value, oldValue }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        if (value !== oldValue) {\r\n            el.checked = looseEqual(value, vnode.props.value);\r\n        }\r\n    }\r\n};\r\nconst vModelSelect = {\r\n    // use mounted & updated because <select> relies on its children <option>s.\r\n    mounted(el, { value }, vnode) {\r\n        setSelected(el, value);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            const selectedVal = Array.prototype.filter\r\n                .call(el.options, (o) => o.selected)\r\n                .map(getValue);\r\n            el._assign(el.multiple ? selectedVal : selectedVal[0]);\r\n        });\r\n    },\r\n    beforeUpdate(el, _binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    updated(el, { value }) {\r\n        setSelected(el, value);\r\n    }\r\n};\r\nfunction setSelected(el, value) {\r\n    const isMultiple = el.multiple;\r\n    if (isMultiple && !isArray(value)) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`<select multiple v-model> expects an Array value for its binding, ` +\r\n                `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`);\r\n        return;\r\n    }\r\n    for (let i = 0, l = el.options.length; i < l; i++) {\r\n        const option = el.options[i];\r\n        const optionValue = getValue(option);\r\n        if (isMultiple) {\r\n            option.selected = looseIndexOf(value, optionValue) > -1;\r\n        }\r\n        else {\r\n            if (looseEqual(getValue(option), value)) {\r\n                el.selectedIndex = i;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    if (!isMultiple) {\r\n        el.selectedIndex = -1;\r\n    }\r\n}\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el) {\r\n    return '_value' in el ? el._value : el.value;\r\n}\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(el, checked) {\r\n    const key = checked ? '_trueValue' : '_falseValue';\r\n    return key in el ? el[key] : checked;\r\n}\r\nconst vModelDynamic = {\r\n    beforeMount(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'beforeMount');\r\n    },\r\n    mounted(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'mounted');\r\n    },\r\n    beforeUpdate(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate');\r\n    },\r\n    updated(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'updated');\r\n    }\r\n};\r\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\r\n    let modelToUse;\r\n    switch (el.tagName) {\r\n        case 'SELECT':\r\n            modelToUse = vModelSelect;\r\n            break;\r\n        case 'TEXTAREA':\r\n            modelToUse = vModelText;\r\n            break;\r\n        default:\r\n            switch (el.type) {\r\n                case 'checkbox':\r\n                    modelToUse = vModelCheckbox;\r\n                    break;\r\n                case 'radio':\r\n                    modelToUse = vModelRadio;\r\n                    break;\r\n                default:\r\n                    modelToUse = vModelText;\r\n            }\r\n    }\r\n    const fn = modelToUse[hook];\r\n    fn && fn(el, binding, vnode, prevVNode);\r\n}\n\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta'];\r\nconst modifierGuards = {\r\n    stop: e => e.stopPropagation(),\r\n    prevent: e => e.preventDefault(),\r\n    self: e => e.target !== e.currentTarget,\r\n    ctrl: e => !e.ctrlKey,\r\n    shift: e => !e.shiftKey,\r\n    alt: e => !e.altKey,\r\n    meta: e => !e.metaKey,\r\n    left: e => 'button' in e && e.button !== 0,\r\n    middle: e => 'button' in e && e.button !== 1,\r\n    right: e => 'button' in e && e.button !== 2,\r\n    exact: (e, modifiers) => systemModifiers.some(m => e[`${m}Key`] && !modifiers.includes(m))\r\n};\r\nconst withModifiers = (fn, modifiers) => {\r\n    return (event) => {\r\n        for (let i = 0; i < modifiers.length; i++) {\r\n            const guard = modifierGuards[modifiers[i]];\r\n            if (guard && guard(event, modifiers))\r\n                return;\r\n        }\r\n        return fn(event);\r\n    };\r\n};\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames = {\r\n    esc: 'escape',\r\n    space: ' ',\r\n    up: 'arrow-up',\r\n    left: 'arrow-left',\r\n    right: 'arrow-right',\r\n    down: 'arrow-down',\r\n    delete: 'backspace'\r\n};\r\nconst withKeys = (fn, modifiers) => {\r\n    return (event) => {\r\n        if (!('key' in event))\r\n            return;\r\n        const eventKey = hyphenate(event.key);\r\n        if (\r\n        // None of the provided key modifiers match the current event key\r\n        !modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n            return;\r\n        }\r\n        return fn(event);\r\n    };\r\n};\n\nconst vShow = {\r\n    beforeMount(el, { value }, { transition }) {\r\n        el._vod = el.style.display === 'none' ? '' : el.style.display;\r\n        if (transition && value) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    mounted(el, { value }, { transition }) {\r\n        if (transition && value) {\r\n            transition.enter(el);\r\n        }\r\n    },\r\n    updated(el, { value, oldValue }, { transition }) {\r\n        if (!value === !oldValue)\r\n            return;\r\n        if (transition) {\r\n            if (value) {\r\n                transition.beforeEnter(el);\r\n                setDisplay(el, true);\r\n                transition.enter(el);\r\n            }\r\n            else {\r\n                transition.leave(el, () => {\r\n                    setDisplay(el, false);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    beforeUnmount(el) {\r\n        setDisplay(el, true);\r\n    }\r\n};\r\nfunction setDisplay(el, value) {\r\n    el.style.display = value ? el._vod : 'none';\r\n}\n\nconst TRANSITION = 'transition';\r\nconst ANIMATION = 'animation';\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nconst Transition = (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots);\r\nconst TransitionPropsValidators = (Transition.props = {\r\n    ...BaseTransition.props,\r\n    name: String,\r\n    type: String,\r\n    css: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    duration: [String, Number, Object],\r\n    enterFromClass: String,\r\n    enterActiveClass: String,\r\n    enterToClass: String,\r\n    appearFromClass: String,\r\n    appearActiveClass: String,\r\n    appearToClass: String,\r\n    leaveFromClass: String,\r\n    leaveActiveClass: String,\r\n    leaveToClass: String\r\n});\r\nfunction resolveTransitionProps({ name = 'v', type, css = true, duration, enterFromClass = `${name}-enter-from`, enterActiveClass = `${name}-enter-active`, enterToClass = `${name}-enter-to`, appearFromClass = enterFromClass, appearActiveClass = enterActiveClass, appearToClass = enterToClass, leaveFromClass = `${name}-leave-from`, leaveActiveClass = `${name}-leave-active`, leaveToClass = `${name}-leave-to`, ...baseProps }) {\r\n    if (!css) {\r\n        return baseProps;\r\n    }\r\n    const instance = getCurrentInstance();\r\n    const durations = normalizeDuration(duration);\r\n    const enterDuration = durations && durations[0];\r\n    const leaveDuration = durations && durations[1];\r\n    const { appear, onBeforeEnter, onEnter, onLeave } = baseProps;\r\n    // is appearing\r\n    if (appear && !getCurrentInstance().isMounted) {\r\n        enterFromClass = appearFromClass;\r\n        enterActiveClass = appearActiveClass;\r\n        enterToClass = appearToClass;\r\n    }\r\n    const finishEnter = (el, done) => {\r\n        removeTransitionClass(el, enterToClass);\r\n        removeTransitionClass(el, enterActiveClass);\r\n        done && done();\r\n    };\r\n    const finishLeave = (el, done) => {\r\n        removeTransitionClass(el, leaveToClass);\r\n        removeTransitionClass(el, leaveActiveClass);\r\n        done && done();\r\n    };\r\n    // only needed for user hooks called in nextFrame\r\n    // sync errors are already handled by BaseTransition\r\n    function callHookWithErrorHandling(hook, args) {\r\n        callWithAsyncErrorHandling(hook, instance, 9 /* TRANSITION_HOOK */, args);\r\n    }\r\n    return {\r\n        ...baseProps,\r\n        onBeforeEnter(el) {\r\n            onBeforeEnter && onBeforeEnter(el);\r\n            addTransitionClass(el, enterActiveClass);\r\n            addTransitionClass(el, enterFromClass);\r\n        },\r\n        onEnter(el, done) {\r\n            nextFrame(() => {\r\n                const resolve = () => finishEnter(el, done);\r\n                onEnter && callHookWithErrorHandling(onEnter, [el, resolve]);\r\n                removeTransitionClass(el, enterFromClass);\r\n                addTransitionClass(el, enterToClass);\r\n                if (!(onEnter && onEnter.length > 1)) {\r\n                    if (enterDuration) {\r\n                        setTimeout(resolve, enterDuration);\r\n                    }\r\n                    else {\r\n                        whenTransitionEnds(el, type, resolve);\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        onLeave(el, done) {\r\n            addTransitionClass(el, leaveActiveClass);\r\n            addTransitionClass(el, leaveFromClass);\r\n            nextFrame(() => {\r\n                const resolve = () => finishLeave(el, done);\r\n                onLeave && callHookWithErrorHandling(onLeave, [el, resolve]);\r\n                removeTransitionClass(el, leaveFromClass);\r\n                addTransitionClass(el, leaveToClass);\r\n                if (!(onLeave && onLeave.length > 1)) {\r\n                    if (leaveDuration) {\r\n                        setTimeout(resolve, leaveDuration);\r\n                    }\r\n                    else {\r\n                        whenTransitionEnds(el, type, resolve);\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        onEnterCancelled: finishEnter,\r\n        onLeaveCancelled: finishLeave\r\n    };\r\n}\r\nfunction normalizeDuration(duration) {\r\n    if (duration == null) {\r\n        return null;\r\n    }\r\n    else if (isObject(duration)) {\r\n        return [toNumber$1(duration.enter), toNumber$1(duration.leave)];\r\n    }\r\n    else {\r\n        const n = toNumber$1(duration);\r\n        return [n, n];\r\n    }\r\n}\r\nfunction toNumber$1(val) {\r\n    const res = Number(val || 0);\r\n    if ((process.env.NODE_ENV !== 'production'))\r\n        validateDuration(res);\r\n    return res;\r\n}\r\nfunction validateDuration(val) {\r\n    if (typeof val !== 'number') {\r\n        warn(`<transition> explicit duration is not a valid number - ` +\r\n            `got ${JSON.stringify(val)}.`);\r\n    }\r\n    else if (isNaN(val)) {\r\n        warn(`<transition> explicit duration is NaN - ` +\r\n            'the duration expression might be incorrect.');\r\n    }\r\n}\r\nfunction addTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.add(c));\r\n    (el._vtc ||\r\n        (el._vtc = new Set())).add(cls);\r\n}\r\nfunction removeTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.remove(c));\r\n    const { _vtc } = el;\r\n    if (_vtc) {\r\n        _vtc.delete(cls);\r\n        if (!_vtc.size) {\r\n            el._vtc = undefined;\r\n        }\r\n    }\r\n}\r\nfunction nextFrame(cb) {\r\n    requestAnimationFrame(() => {\r\n        requestAnimationFrame(cb);\r\n    });\r\n}\r\nfunction whenTransitionEnds(el, expectedType, cb) {\r\n    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\r\n    if (!type) {\r\n        return cb();\r\n    }\r\n    const endEvent = type + 'end';\r\n    let ended = 0;\r\n    const end = () => {\r\n        el.removeEventListener(endEvent, onEnd);\r\n        cb();\r\n    };\r\n    const onEnd = (e) => {\r\n        if (e.target === el) {\r\n            if (++ended >= propCount) {\r\n                end();\r\n            }\r\n        }\r\n    };\r\n    setTimeout(() => {\r\n        if (ended < propCount) {\r\n            end();\r\n        }\r\n    }, timeout + 1);\r\n    el.addEventListener(endEvent, onEnd);\r\n}\r\nfunction getTransitionInfo(el, expectedType) {\r\n    const styles = window.getComputedStyle(el);\r\n    // JSDOM may return undefined for transition properties\r\n    const getStyleProperties = (key) => (styles[key] || '').split(', ');\r\n    const transitionDelays = getStyleProperties(TRANSITION + 'Delay');\r\n    const transitionDurations = getStyleProperties(TRANSITION + 'Duration');\r\n    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\r\n    const animationDelays = getStyleProperties(ANIMATION + 'Delay');\r\n    const animationDurations = getStyleProperties(ANIMATION + 'Duration');\r\n    const animationTimeout = getTimeout(animationDelays, animationDurations);\r\n    let type = null;\r\n    let timeout = 0;\r\n    let propCount = 0;\r\n    /* istanbul ignore if */\r\n    if (expectedType === TRANSITION) {\r\n        if (transitionTimeout > 0) {\r\n            type = TRANSITION;\r\n            timeout = transitionTimeout;\r\n            propCount = transitionDurations.length;\r\n        }\r\n    }\r\n    else if (expectedType === ANIMATION) {\r\n        if (animationTimeout > 0) {\r\n            type = ANIMATION;\r\n            timeout = animationTimeout;\r\n            propCount = animationDurations.length;\r\n        }\r\n    }\r\n    else {\r\n        timeout = Math.max(transitionTimeout, animationTimeout);\r\n        type =\r\n            timeout > 0\r\n                ? transitionTimeout > animationTimeout\r\n                    ? TRANSITION\r\n                    : ANIMATION\r\n                : null;\r\n        propCount = type\r\n            ? type === TRANSITION\r\n                ? transitionDurations.length\r\n                : animationDurations.length\r\n            : 0;\r\n    }\r\n    const hasTransform = type === TRANSITION &&\r\n        /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property']);\r\n    return {\r\n        type,\r\n        timeout,\r\n        propCount,\r\n        hasTransform\r\n    };\r\n}\r\nfunction getTimeout(delays, durations) {\r\n    while (delays.length < durations.length) {\r\n        delays = delays.concat(delays);\r\n    }\r\n    return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\r\n}\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s) {\r\n    return Number(s.slice(0, -1).replace(',', '.')) * 1000;\r\n}\n\nconst targetMap = new WeakMap();\r\nlet activeEffect;\r\nconst ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'iterate' : '');\r\nconst MAP_KEY_ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'Map key iterate' : '');\r\nlet shouldTrack = true;\r\nfunction trigger$1(target, type, key, newValue, oldValue, oldTarget) {\r\n    const depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        // never been tracked\r\n        return;\r\n    }\r\n    const effects = new Set();\r\n    const computedRunners = new Set();\r\n    const add = (effectsToAdd) => {\r\n        if (effectsToAdd) {\r\n            effectsToAdd.forEach(effect => {\r\n                if (effect !== activeEffect || !shouldTrack) {\r\n                    if (effect.options.computed) {\r\n                        computedRunners.add(effect);\r\n                    }\r\n                    else {\r\n                        effects.add(effect);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    if (type === \"clear\" /* CLEAR */) {\r\n        // collection being cleared\r\n        // trigger all effects for target\r\n        depsMap.forEach(add);\r\n    }\r\n    else if (key === 'length' && isArray(target)) {\r\n        depsMap.forEach((dep, key) => {\r\n            if (key === 'length' || key >= newValue) {\r\n                add(dep);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        // schedule runs for SET | ADD | DELETE\r\n        if (key !== void 0) {\r\n            add(depsMap.get(key));\r\n        }\r\n        // also run for iteration key on ADD | DELETE | Map.SET\r\n        const isAddOrDelete = type === \"add\" /* ADD */ ||\r\n            (type === \"delete\" /* DELETE */ && !isArray(target));\r\n        if (isAddOrDelete ||\r\n            (type === \"set\" /* SET */ && target instanceof Map)) {\r\n            add(depsMap.get(isArray(target) ? 'length' : ITERATE_KEY));\r\n        }\r\n        if (isAddOrDelete && target instanceof Map) {\r\n            add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n        }\r\n    }\r\n    const run = (effect) => {\r\n        if ((process.env.NODE_ENV !== 'production') && effect.options.onTrigger) {\r\n            effect.options.onTrigger({\r\n                effect,\r\n                target,\r\n                key,\r\n                type,\r\n                newValue,\r\n                oldValue,\r\n                oldTarget\r\n            });\r\n        }\r\n        if (effect.options.scheduler) {\r\n            effect.options.scheduler(effect);\r\n        }\r\n        else {\r\n            effect();\r\n        }\r\n    };\r\n    // Important: computed effects must be run first so that computed getters\r\n    // can be invalidated before any normal effects that depend on them are run.\r\n    computedRunners.forEach(run);\r\n    effects.forEach(run);\r\n}\n\nconst builtInSymbols = new Set(Object.getOwnPropertyNames(Symbol)\r\n    .map(key => Symbol[key])\r\n    .filter(isSymbol));\r\nconst get = /*#__PURE__*/ createGetter();\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\r\nconst arrayInstrumentations = {};\r\n['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\r\n    arrayInstrumentations[key] = function (...args) {\r\n        const arr = toRaw(this);\r\n        for (let i = 0, l = this.length; i < l; i++) {\r\n        }\r\n        // we run the method using the original args first (which may be reactive)\r\n        const res = arr[key](...args);\r\n        if (res === -1 || res === false) {\r\n            // if that didn't work, run it again using raw values.\r\n            return arr[key](...args.map(toRaw));\r\n        }\r\n        else {\r\n            return res;\r\n        }\r\n    };\r\n});\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    return function get(target, key, receiver) {\r\n        const targetIsArray = isArray(target);\r\n        if (targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n            return Reflect.get(arrayInstrumentations, key, receiver);\r\n        }\r\n        const res = Reflect.get(target, key, receiver);\r\n        if (isSymbol(key) && builtInSymbols.has(key)) {\r\n            return res;\r\n        }\r\n        if (shallow) {\r\n            return res;\r\n        }\r\n        if (isRef(res)) {\r\n            if (targetIsArray) {\r\n                return res;\r\n            }\r\n            else {\r\n                // ref unwrapping, only for Objects, not for Arrays.\r\n                return res.value;\r\n            }\r\n        }\r\n        return isObject(res)\r\n            ? isReadonly\r\n                ? // need to lazy access readonly and reactive here to avoid\r\n                    // circular dependency\r\n                    readonly(res)\r\n                : reactive(res)\r\n            : res;\r\n    };\r\n}\r\nconst set = /*#__PURE__*/ createSetter();\r\nfunction createSetter(shallow = false) {\r\n    return function set(target, key, value, receiver) {\r\n        const oldValue = target[key];\r\n        if (!shallow) {\r\n            value = toRaw(value);\r\n            if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n                oldValue.value = value;\r\n                return true;\r\n            }\r\n        }\r\n        const hadKey = hasOwn(target, key);\r\n        const result = Reflect.set(target, key, value, receiver);\r\n        // don't trigger if target is something up in the prototype chain of original\r\n        if (target === toRaw(receiver)) {\r\n            if (!hadKey) {\r\n                trigger$1(target, \"add\" /* ADD */, key, value);\r\n            }\r\n            else if (hasChanged(value, oldValue)) {\r\n                trigger$1(target, \"set\" /* SET */, key, value, oldValue);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction deleteProperty(target, key) {\r\n    const hadKey = hasOwn(target, key);\r\n    const oldValue = target[key];\r\n    const result = Reflect.deleteProperty(target, key);\r\n    if (result && hadKey) {\r\n        trigger$1(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction has(target, key) {\r\n    const result = Reflect.has(target, key);\r\n    return result;\r\n}\r\nfunction ownKeys(target) {\r\n    return Reflect.ownKeys(target);\r\n}\r\nconst mutableHandlers = {\r\n    get,\r\n    set,\r\n    deleteProperty,\r\n    has,\r\n    ownKeys\r\n};\r\nconst readonlyHandlers = {\r\n    get: readonlyGet,\r\n    has,\r\n    ownKeys,\r\n    set(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    },\r\n    deleteProperty(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    }\r\n};\n\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\r\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\r\nconst getProto = (v) => Reflect.getPrototypeOf(v);\r\nfunction get$1(target, key, wrap) {\r\n    target = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    const { has, get } = getProto(target);\r\n    if (has.call(target, key)) {\r\n        return wrap(get.call(target, key));\r\n    }\r\n    else if (has.call(target, rawKey)) {\r\n        return wrap(get.call(target, rawKey));\r\n    }\r\n}\r\nfunction has$1(key) {\r\n    const target = toRaw(this);\r\n    const rawKey = toRaw(key);\r\n    const has = getProto(target).has;\r\n    return has.call(target, key) || has.call(target, rawKey);\r\n}\r\nfunction size(target) {\r\n    target = toRaw(target);\r\n    return Reflect.get(getProto(target), 'size', target);\r\n}\r\nfunction add(value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const proto = getProto(target);\r\n    const hadKey = proto.has.call(target, value);\r\n    const result = proto.add.call(target, value);\r\n    if (!hadKey) {\r\n        trigger$1(target, \"add\" /* ADD */, value, value);\r\n    }\r\n    return result;\r\n}\r\nfunction set$1(key, value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const { has, get, set } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get.call(target, key);\r\n    const result = set.call(target, key, value);\r\n    if (!hadKey) {\r\n        trigger$1(target, \"add\" /* ADD */, key, value);\r\n    }\r\n    else if (hasChanged(value, oldValue)) {\r\n        trigger$1(target, \"set\" /* SET */, key, value, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction deleteEntry(key) {\r\n    const target = toRaw(this);\r\n    const { has, get, delete: del } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get ? get.call(target, key) : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = del.call(target, key);\r\n    if (hadKey) {\r\n        trigger$1(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction clear() {\r\n    const target = toRaw(this);\r\n    const hadItems = target.size !== 0;\r\n    const oldTarget = (process.env.NODE_ENV !== 'production')\r\n        ? target instanceof Map\r\n            ? new Map(target)\r\n            : new Set(target)\r\n        : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = getProto(target).clear.call(target);\r\n    if (hadItems) {\r\n        trigger$1(target, \"clear\" /* CLEAR */, undefined, undefined, oldTarget);\r\n    }\r\n    return result;\r\n}\r\nfunction createForEach(isReadonly) {\r\n    return function forEach(callback, thisArg) {\r\n        const observed = this;\r\n        const target = toRaw(observed);\r\n        const wrap = isReadonly ? toReadonly : toReactive;\r\n        // important: create sure the callback is\r\n        // 1. invoked with the reactive map as `this` and 3rd arg\r\n        // 2. the value received should be a corresponding reactive/readonly.\r\n        function wrappedCallback(value, key) {\r\n            return callback.call(observed, wrap(value), wrap(key), observed);\r\n        }\r\n        return getProto(target).forEach.call(target, wrappedCallback, thisArg);\r\n    };\r\n}\r\nfunction createIterableMethod(method, isReadonly) {\r\n    return function (...args) {\r\n        const target = toRaw(this);\r\n        const isMap = target instanceof Map;\r\n        const isPair = method === 'entries' || (method === Symbol.iterator && isMap);\r\n        const innerIterator = getProto(target)[method].apply(target, args);\r\n        const wrap = isReadonly ? toReadonly : toReactive;\r\n        // return a wrapped iterator which returns observed versions of the\r\n        // values emitted from the real iterator\r\n        return {\r\n            // iterator protocol\r\n            next() {\r\n                const { value, done } = innerIterator.next();\r\n                return done\r\n                    ? { value, done }\r\n                    : {\r\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n                        done\r\n                    };\r\n            },\r\n            // iterable protocol\r\n            [Symbol.iterator]() {\r\n                return this;\r\n            }\r\n        };\r\n    };\r\n}\r\nfunction createReadonlyMethod(type) {\r\n    return function (...args) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const key = args[0] ? `on key \"${args[0]}\" ` : ``;\r\n            console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\r\n        }\r\n        return type === \"delete\" /* DELETE */ ? false : this;\r\n    };\r\n}\r\nconst mutableInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, toReactive);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false)\r\n};\r\nconst readonlyInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, toReadonly);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add: createReadonlyMethod(\"add\" /* ADD */),\r\n    set: createReadonlyMethod(\"set\" /* SET */),\r\n    delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n    clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n    forEach: createForEach(true)\r\n};\r\nconst iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\r\niteratorMethods.forEach(method => {\r\n    mutableInstrumentations[method] = createIterableMethod(method, false);\r\n    readonlyInstrumentations[method] = createIterableMethod(method, true);\r\n});\r\nfunction createInstrumentationGetter(instrumentations) {\r\n    return (target, key, receiver) => Reflect.get(hasOwn(instrumentations, key) && key in target\r\n        ? instrumentations\r\n        : target, key, receiver);\r\n}\r\nconst mutableCollectionHandlers = {\r\n    get: createInstrumentationGetter(mutableInstrumentations)\r\n};\r\nconst readonlyCollectionHandlers = {\r\n    get: createInstrumentationGetter(readonlyInstrumentations)\r\n};\r\nfunction checkIdentityKeys(target, has, key) {\r\n    const rawKey = toRaw(key);\r\n    if (rawKey !== key && has.call(target, rawKey)) {\r\n        const type = toRawType(target);\r\n        console.warn(`Reactive ${type} contains both the raw and reactive ` +\r\n            `versions of the same object${type === `Map` ? `as keys` : ``}, ` +\r\n            `which can lead to inconsistencies. ` +\r\n            `Avoid differentiating between the raw and reactive versions ` +\r\n            `of an object and only use the reactive version if possible.`);\r\n    }\r\n}\n\n// WeakMaps that store {raw <-> observed} pairs.\r\nconst rawToReactive = new WeakMap();\r\nconst reactiveToRaw = new WeakMap();\r\nconst rawToReadonly = new WeakMap();\r\nconst readonlyToRaw = new WeakMap();\r\n// WeakSets for values that are marked readonly or non-reactive during\r\n// observable creation.\r\nconst rawValues = new WeakSet();\r\nconst collectionTypes = new Set([Set, Map, WeakMap, WeakSet]);\r\nconst isObservableType = /*#__PURE__*/ makeMap('Object,Array,Map,Set,WeakMap,WeakSet');\r\nconst canObserve = (value) => {\r\n    return (!value._isVue &&\r\n        !value._isVNode &&\r\n        isObservableType(toRawType(value)) &&\r\n        !rawValues.has(value) &&\r\n        !Object.isFrozen(value));\r\n};\r\nfunction reactive(target) {\r\n    // if trying to observe a readonly proxy, return the readonly version.\r\n    if (readonlyToRaw.has(target)) {\r\n        return target;\r\n    }\r\n    return createReactiveObject(target, rawToReactive, reactiveToRaw, mutableHandlers, mutableCollectionHandlers);\r\n}\r\nfunction readonly(target) {\r\n    return createReactiveObject(target, rawToReadonly, readonlyToRaw, readonlyHandlers, readonlyCollectionHandlers);\r\n}\r\nfunction createReactiveObject(target, toProxy, toRaw, baseHandlers, collectionHandlers) {\r\n    if (!isObject(target)) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`value cannot be made reactive: ${String(target)}`);\r\n        }\r\n        return target;\r\n    }\r\n    // target already has corresponding Proxy\r\n    let observed = toProxy.get(target);\r\n    if (observed !== void 0) {\r\n        return observed;\r\n    }\r\n    // target is already a Proxy\r\n    if (toRaw.has(target)) {\r\n        return target;\r\n    }\r\n    // only a whitelist of value types can be observed.\r\n    if (!canObserve(target)) {\r\n        return target;\r\n    }\r\n    const handlers = collectionTypes.has(target.constructor)\r\n        ? collectionHandlers\r\n        : baseHandlers;\r\n    observed = new Proxy(target, handlers);\r\n    toProxy.set(target, observed);\r\n    toRaw.set(observed, target);\r\n    return observed;\r\n}\r\nfunction toRaw(observed) {\r\n    observed = readonlyToRaw.get(observed) || observed;\r\n    return reactiveToRaw.get(observed) || observed;\r\n}\n\nfunction isRef(r) {\r\n    return r ? r._isRef === true : false;\r\n}\n\nconst positionMap = new WeakMap();\r\nconst newPositionMap = new WeakMap();\r\nconst TransitionGroupImpl = {\r\n    props: {\r\n        ...TransitionPropsValidators,\r\n        tag: String,\r\n        moveClass: String\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevChildren;\r\n        let children;\r\n        let hasMove = null;\r\n        onUpdated(() => {\r\n            // children is guaranteed to exist after initial render\r\n            if (!prevChildren.length) {\r\n                return;\r\n            }\r\n            const moveClass = props.moveClass || `${props.name || 'v'}-move`;\r\n            // Check if move transition is needed. This check is cached per-instance.\r\n            hasMove =\r\n                hasMove === null\r\n                    ? (hasMove = hasCSSTransform(prevChildren[0].el, instance.vnode.el, moveClass))\r\n                    : hasMove;\r\n            if (!hasMove) {\r\n                return;\r\n            }\r\n            // we divide the work into three loops to avoid mixing DOM reads and writes\r\n            // in each iteration - which helps prevent layout thrashing.\r\n            prevChildren.forEach(callPendingCbs);\r\n            prevChildren.forEach(recordPosition);\r\n            const movedChildren = prevChildren.filter(applyTranslation);\r\n            // force reflow to put everything in position\r\n            forceReflow();\r\n            movedChildren.forEach(c => {\r\n                const el = c.el;\r\n                const style = el.style;\r\n                addTransitionClass(el, moveClass);\r\n                style.transform = style.webkitTransform = style.transitionDuration = '';\r\n                const cb = (el._moveCb = (e) => {\r\n                    if (e && e.target !== el) {\r\n                        return;\r\n                    }\r\n                    if (!e || /transform$/.test(e.propertyName)) {\r\n                        el.removeEventListener('transitionend', cb);\r\n                        el._moveCb = null;\r\n                        removeTransitionClass(el, moveClass);\r\n                    }\r\n                });\r\n                el.addEventListener('transitionend', cb);\r\n            });\r\n        });\r\n        return () => {\r\n            const rawProps = toRaw(props);\r\n            const cssTransitionProps = resolveTransitionProps(rawProps);\r\n            const tag = rawProps.tag || Fragment;\r\n            prevChildren = children;\r\n            children = slots.default ? slots.default() : [];\r\n            // handle fragment children case, e.g. v-for\r\n            if (children.length === 1 && children[0].type === Fragment) {\r\n                children = children[0].children;\r\n            }\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (child.key != null) {\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production') && child.type !== Comment) {\r\n                    warn(`<TransitionGroup> children must be keyed.`);\r\n                }\r\n            }\r\n            if (prevChildren) {\r\n                for (let i = 0; i < prevChildren.length; i++) {\r\n                    const child = prevChildren[i];\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                    positionMap.set(child, child.el.getBoundingClientRect());\r\n                }\r\n            }\r\n            return createVNode(tag, null, children);\r\n        };\r\n    }\r\n};\r\n// remove mode props as TransitionGroup doesn't support it\r\ndelete TransitionGroupImpl.props.mode;\r\nconst TransitionGroup = TransitionGroupImpl;\r\nfunction callPendingCbs(c) {\r\n    const el = c.el;\r\n    if (el._moveCb) {\r\n        el._moveCb();\r\n    }\r\n    if (el._enterCb) {\r\n        el._enterCb();\r\n    }\r\n}\r\nfunction recordPosition(c) {\r\n    newPositionMap.set(c, c.el.getBoundingClientRect());\r\n}\r\nfunction applyTranslation(c) {\r\n    const oldPos = positionMap.get(c);\r\n    const newPos = newPositionMap.get(c);\r\n    const dx = oldPos.left - newPos.left;\r\n    const dy = oldPos.top - newPos.top;\r\n    if (dx || dy) {\r\n        const s = c.el.style;\r\n        s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\r\n        s.transitionDuration = '0s';\r\n        return c;\r\n    }\r\n}\r\n// this is put in a dedicated function to avoid the line from being treeshaken\r\nfunction forceReflow() {\r\n    return document.body.offsetHeight;\r\n}\r\nfunction hasCSSTransform(el, root, moveClass) {\r\n    // Detect whether an element with the move class applied has\r\n    // CSS transitions. Since the element may be inside an entering\r\n    // transition at this very moment, we make a clone of it and remove\r\n    // all other transition classes applied to ensure only the move class\r\n    // is applied.\r\n    const clone = el.cloneNode();\r\n    if (el._vtc) {\r\n        el._vtc.forEach(cls => {\r\n            cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c));\r\n        });\r\n    }\r\n    moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c));\r\n    clone.style.display = 'none';\r\n    const container = (root.nodeType === 1\r\n        ? root\r\n        : root.parentNode);\r\n    container.appendChild(clone);\r\n    const { hasTransform } = getTransitionInfo(clone);\r\n    container.removeChild(clone);\r\n    return hasTransform;\r\n}\n\nconst rendererOptions = {\r\n    patchProp,\r\n    ...nodeOps\r\n};\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer;\r\nlet enabledHydration = false;\r\nfunction ensureRenderer() {\r\n    return renderer || (renderer = createRenderer(rendererOptions));\r\n}\r\nfunction ensureHydrationRenderer() {\r\n    renderer = enabledHydration\r\n        ? renderer\r\n        : createHydrationRenderer(rendererOptions);\r\n    enabledHydration = true;\r\n    return renderer;\r\n}\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nconst render = ((...args) => {\r\n    ensureRenderer().render(...args);\r\n});\r\nconst hydrate = ((...args) => {\r\n    ensureHydrationRenderer().hydrate(...args);\r\n});\r\nconst createApp = ((...args) => {\r\n    const app = ensureRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (!container)\r\n            return;\r\n        const component = app._component;\r\n        if (!isFunction(component) && !component.render && !component.template) {\r\n            component.template = container.innerHTML;\r\n        }\r\n        // clear content before mounting\r\n        container.innerHTML = '';\r\n        const proxy = mount(container);\r\n        container.removeAttribute('v-cloak');\r\n        return proxy;\r\n    };\r\n    return app;\r\n});\r\nconst createSSRApp = ((...args) => {\r\n    const app = ensureHydrationRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (container) {\r\n            return mount(container, true);\r\n        }\r\n    };\r\n    return app;\r\n});\r\nfunction injectNativeTagCheck(app) {\r\n    // Inject `isNativeTag`\r\n    // this is used for component name validation (dev only)\r\n    Object.defineProperty(app.config, 'isNativeTag', {\r\n        value: (tag) => isHTMLTag(tag) || isSVGTag(tag),\r\n        writable: false\r\n    });\r\n}\r\nfunction normalizeContainer(container) {\r\n    if (isString(container)) {\r\n        const res = document.querySelector(container);\r\n        if ((process.env.NODE_ENV !== 'production') && !res) {\r\n            warn(`Failed to mount app: mount target selector returned null.`);\r\n        }\r\n        return res;\r\n    }\r\n    return container;\r\n}\n\nexport { Transition, TransitionGroup, createApp, createSSRApp, hydrate, render, vModelCheckbox, vModelDynamic, vModelRadio, vModelSelect, vModelText, vShow, withKeys, withModifiers };\n","<template>\n    <div>\n        <div\n            style=\"\n                position: absolute;\n                width: 100%;\n                height: 100%;\n                min-height: 750px;\n                overflow: hidden;\n                display: flex;\n                flex-direction: column;\n            \"\n        >\n            <div style=\"display: flex; align-items: center; background: #ffffff; padding: 10px;\">\n                <p style=\"font-family: sans-serif; margin: 0;\">\n                    <em>Vugel example</em> (\n                    <a\n                        href=\"https://github.com/Planning-nl/vugel-example\"\n                        target=\"_blank\"\n                        >View source code on Github</a\n                    >\n                    )\n                </p>\n                <select v-model=\"example\" style=\"margin-left: 50px;\">\n                    <option v-for=\"e in examples\" :value=\"e.name\">\n                        {{ e.text }}\n                    </option>\n                </select>\n            </div>\n            <vugel :settings=\"{ clearColor: 0xff000000 }\" style=\"flex-grow: 1; position: relative;\">\n                <!-- notice that you must always use a single component tag (without v-if) here! -->\n                <!-- otherwise you'll run into trouble as we are mixin compilers at this level -->\n                <examples :selected=\"example\" />\n            </vugel>\n        </div>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { Vugel } from \"vugel\";\nimport Examples from \"./Examples.vue\";\nimport { ref, Ref, computed } from \"vue\";\n\nexport default {\n    components: { Vugel, Examples },\n    setup() {\n        const examples = ref([\n            { name: \"picture\", text: \"Picture\" },\n            { name: \"rectangle\", text: \"Rectangle\" },\n            { name: \"text\", text: \"Text\" },\n            { name: \"styled-rectangle\", text: \"Styled rectangle\" },\n            { name: \"drawing\", text: \"Drawing\" },\n            { name: \"position\", text: \"Position and size\" },\n            { name: \"center\", text: \"Center\" },\n            { name: \"transforms\", text: \"Transforms\" },\n            { name: \"visibility\", text: \"Visibility\" },\n            { name: \"tinting\", text: \"Tinting\" },\n            { name: \"clipping\", text: \"Clipping\" },\n            // { name: \"texture-clipping\", text: \"Texture clipping\" },\n            // { name: \"z-index\", text: \"Z-index\" },\n            // { name: \"flexbox\", text: \"Flexbox\" },\n            // { name: \"effects\", text: \"Effects\" },\n            { name: \"paragraph\", text: \"Paragraph\" },\n            // { name: \"mouse-events\", text: \"Mouse events\" },\n            // { name: \"focus-events\", text: \"Focus events\" },\n            // { name: \"intersection\", text: \"Intersection\" },\n        ]);\n        const example: Ref<string> = ref(\"styled-rectangle\");\n        const check = (exampleName: string) => {\n            return example.value === exampleName;\n        };\n        const exampleObject = computed(\n            () => examples.value.find((obj: any) => obj.name === example.value) || { name: \"\", text: \"\" },\n        );\n        return { examples, example, check, exampleObject };\n    },\n};\n</script>\n","<template compiler=\"vugel\">\n    <container w=\"w\" h=\"h\">\n        <picture-example v-if=\"check('picture')\" />\n        <rectangle-example v-if=\"check('rectangle')\" />\n        <text-example v-if=\"check('text')\" />\n        <styled-rectangle-example v-if=\"check('styled-rectangle')\" />\n        <drawing-example v-if=\"check('drawing')\" />\n\n        <position-example v-if=\"check('position')\" />\n        <center-example v-if=\"check('center')\" />\n        <transforms-example v-if=\"check('transforms')\" />\n        <visibility-example v-if=\"check('visibility')\" />\n        <tinting-example v-if=\"check('tinting')\" />\n        <clipping-example v-if=\"check('clipping')\" />\n\n        <paragraph-example v-if=\"check('paragraph')\" />\n    </container>\n</template>\n\n<script lang=\"ts\">\nimport TextExample from \"./examples/TextExample.vue\";\nimport PositionExample from \"./examples/PositionExample.vue\";\nimport TransformsExample from \"./examples/TransformsExample.vue\";\nimport ClippingExample from \"./examples/ClippingExample.vue\";\nimport VisibilityExample from \"./examples/VisibilityExample.vue\";\nimport CenterExample from \"./examples/CenterExample.vue\";\nimport PictureExample from \"./examples/PictureExample.vue\";\nimport RectangleExample from \"./examples/RectangleExample.vue\";\nimport StyledRectangleExample from \"./examples/StyledRectangleExample.vue\";\nimport TintingExample from \"./examples/TintingExample.vue\";\nimport ParagraphExample from \"./examples/ParagraphExample.vue\";\nimport DrawingExample from \"./examples/DrawingExample.vue\";\n\nexport default {\n    components: {\n        PictureExample,\n        RectangleExample,\n        TextExample,\n        StyledRectangleExample,\n        DrawingExample,\n\n        PositionExample,\n        CenterExample,\n        TransformsExample,\n        VisibilityExample,\n        TintingExample,\n        ClippingExample,\n\n        ParagraphExample,\n    },\n    props: {\n        selected: { type: String, default: \"\" },\n    },\n    setup(props: any) {\n        const check = (exampleName: string) => {\n            return props.selected === exampleName;\n        };\n        return { check };\n    },\n};\n</script>\n","<template compiler=\"vugel\">\n    <text\n        :x=\"10\"\n        :y=\"10\"\n        :color=\"0xffffffff\"\n        :font-size=\"60\"\n        :font-weight=\"900\"\n        font-style=\"italic\"\n        font-face=\"Serif\"\n        :margin-bottom=\"20\"\n    >\n        basic text rendering\n    </text>\n</template>\n\n<script lang=\"ts\">\nexport default {};\n</script>\n","\nexport default {};\n","import { render } from \"./TextExample.vue?vue&type=template&id=e052f044&compiler=vugel\"\nimport script from \"./TextExample.vue?vue&type=script&lang=ts\"\nexport * from \"./TextExample.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<script lang=\"ts\">\nimport { ref, Ref, watch, SetupContext, computed } from \"vue\";\nimport { VugelMouseEvent, Node } from \"vugel\";\n\nexport default {\n    props: {\n        initialValue: { type: Number, default: 0 },\n        min: { type: Number, default: 0 },\n        max: { type: Number, default: 1 },\n        suffix: { type: String, default: \"\" },\n        digits: { type: Number, default: 2 },\n        background: { type: Number, default: 0xffddddff },\n        foreground: { type: Number, default: 0xff000000 },\n    },\n    setup(props: any, context: SetupContext) {\n        const bar: Ref<Node | null> = ref(null);\n        const dragTarget: Ref<Node | null> = ref(null);\n\n        const value = ref(-1);\n\n        let startEvent: VugelMouseEvent | null = null;\n        const start = (e: VugelMouseEvent) => {\n            if (dragTarget.value) {\n                startEvent = e;\n            }\n\n            containerScale.value = 100;\n            update(e);\n        };\n\n        const update = (e: VugelMouseEvent) => {\n            const localCoords = bar.value!.el.core.convertWorldCoordsToLocal(e.canvasOffsetX, e.canvasOffsetY);\n            const max = bar.value!.el.renderWidth;\n            const v = Math.min(max, Math.max(0, localCoords[0]));\n            value.value = v / max;\n        };\n\n        const move = (e: VugelMouseEvent) => {\n            if (startEvent) {\n                update(e);\n            }\n        };\n\n        const end = (e: VugelMouseEvent) => {\n            startEvent = null;\n            containerScale.value = 1;\n        };\n\n        const updateValue = () => {\n            dragTarget.value!.x = value.value * (bar.value!.el.renderWidth - 10) + 5;\n        };\n        watch([value, bar], updateValue);\n\n        const convertValue = (value: number) => {\n            return props.min + (props.max - props.min) * value;\n        };\n        watch(value, (v: number) => {\n            const convertedValue = convertValue(value.value);\n            context.emit(\"change\", { value: convertedValue });\n        });\n\n        const formatValue = (v: number) => {\n            return (props.min + (props.max - props.min) * v).toFixed(props.digits) + props.suffix;\n        };\n        const formattedValue = computed(() => {\n            return formatValue(value.value);\n        });\n\n        const convertToAmount = (value: number) => {\n            return Math.max(0, Math.min(1, (value - props.min) / (props.max - props.min)));\n        };\n        value.value = convertToAmount(props.initialValue || 0);\n\n        const containerScale = ref(1);\n\n        return {\n            containerScale,\n            start,\n            move,\n            end,\n            bar,\n            dragTarget,\n            value,\n            formattedValue,\n            updateValue,\n        };\n    },\n};\n</script>\n\n<template compiler=\"vugel\">\n    <container :h=\"20\" :flex-grow=\"1\" :min-width=\"80\" :flex=\"true\">\n        <container\n            :flex-item=\"false\"\n            w=\"w\"\n            h=\"h\"\n            :scale=\"containerScale\"\n            :z-index=\"containerScale\"\n            @mousedown=\"start\"\n            @mousemove=\"move\"\n            @mouseup=\"end\"\n            @mouseout=\"end\"\n        />\n        <styled-rectangle\n            ref=\"bar\"\n            :radius=\"4\"\n            :stroke-width=\"4\"\n            :flex-grow=\"1\"\n            :fill-color=\"background\"\n            :stroke-color=\"0xff000000\"\n            :pointer-events=\"false\"\n            @resize=\"updateValue\"\n        >\n            <text x=\"w/2\" y=\"h/2+1\" :mount=\"0.5\" font-face=\"monospace\" :font-size=\"14\" :color=\"foreground\">\n                {{ formattedValue }}\n            </text>\n            <container ref=\"dragTarget\">\n                <styled-rectangle\n                    :radius=\"4\"\n                    :stroke-width=\"4\"\n                    :stroke-color=\"0xff000000\"\n                    :y=\"0\"\n                    :h=\"20\"\n                    :x=\"-5\"\n                    :w=\"10\"\n                    :fill-color=\"0xffffffff\"\n                />\n            </container>\n        </styled-rectangle>\n    </container>\n</template>\n","\nimport { ref, Ref, watch, SetupContext, computed } from \"vue\";\nimport { VugelMouseEvent, Node } from \"vugel\";\n\nexport default {\n    props: {\n        initialValue: { type: Number, default: 0 },\n        min: { type: Number, default: 0 },\n        max: { type: Number, default: 1 },\n        suffix: { type: String, default: \"\" },\n        digits: { type: Number, default: 2 },\n        background: { type: Number, default: 0xffddddff },\n        foreground: { type: Number, default: 0xff000000 },\n    },\n    setup(props: any, context: SetupContext) {\n        const bar: Ref<Node | null> = ref(null);\n        const dragTarget: Ref<Node | null> = ref(null);\n\n        const value = ref(-1);\n\n        let startEvent: VugelMouseEvent | null = null;\n        const start = (e: VugelMouseEvent) => {\n            if (dragTarget.value) {\n                startEvent = e;\n            }\n\n            containerScale.value = 100;\n            update(e);\n        };\n\n        const update = (e: VugelMouseEvent) => {\n            const localCoords = bar.value!.el.core.convertWorldCoordsToLocal(e.canvasOffsetX, e.canvasOffsetY);\n            const max = bar.value!.el.renderWidth;\n            const v = Math.min(max, Math.max(0, localCoords[0]));\n            value.value = v / max;\n        };\n\n        const move = (e: VugelMouseEvent) => {\n            if (startEvent) {\n                update(e);\n            }\n        };\n\n        const end = (e: VugelMouseEvent) => {\n            startEvent = null;\n            containerScale.value = 1;\n        };\n\n        const updateValue = () => {\n            dragTarget.value!.x = value.value * (bar.value!.el.renderWidth - 10) + 5;\n        };\n        watch([value, bar], updateValue);\n\n        const convertValue = (value: number) => {\n            return props.min + (props.max - props.min) * value;\n        };\n        watch(value, (v: number) => {\n            const convertedValue = convertValue(value.value);\n            context.emit(\"change\", { value: convertedValue });\n        });\n\n        const formatValue = (v: number) => {\n            return (props.min + (props.max - props.min) * v).toFixed(props.digits) + props.suffix;\n        };\n        const formattedValue = computed(() => {\n            return formatValue(value.value);\n        });\n\n        const convertToAmount = (value: number) => {\n            return Math.max(0, Math.min(1, (value - props.min) / (props.max - props.min)));\n        };\n        value.value = convertToAmount(props.initialValue || 0);\n\n        const containerScale = ref(1);\n\n        return {\n            containerScale,\n            start,\n            move,\n            end,\n            bar,\n            dragTarget,\n            value,\n            formattedValue,\n            updateValue,\n        };\n    },\n};\n","import { render } from \"./DragBar.vue?vue&type=template&id=9091c5d2&compiler=vugel\"\nimport script from \"./DragBar.vue?vue&type=script&lang=ts\"\nexport * from \"./DragBar.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template compiler=\"vugel\">\n    <container w=\"w\" :flex=\"true\" flex-align-items=\"flex-start\">\n        <container :flex-grow=\"1\" :w=\"400\" :min-height=\"750\">\n            <slot name=\"content\"></slot>\n        </container>\n\n        <rectangle :flex=\"true\" :w=\"300\" :flex-grow=\"0.5\" :padding=\"10\" flex-direction=\"column\" :color=\"0xeeffffff\">\n            <slot name=\"form-items\"></slot>\n        </rectangle>\n    </container>\n</template>\n\n<script lang=\"ts\">\nimport { ref, Ref, watch, SetupContext } from \"vue\";\nimport { VugelMouseEvent, Node } from \"vugel\";\n\nexport default {\n    props: {\n        description: { type: String, default: \"\" },\n    },\n};\n</script>\n","\nimport { ref, Ref, watch, SetupContext } from \"vue\";\nimport { VugelMouseEvent, Node } from \"vugel\";\n\nexport default {\n    props: {\n        description: { type: String, default: \"\" },\n    },\n};\n","import { render } from \"./Editor.vue?vue&type=template&id=bbe47a88&compiler=vugel\"\nimport script from \"./Editor.vue?vue&type=script&lang=ts\"\nexport * from \"./Editor.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template compiler=\"vugel\">\n    <container :flex=\"true\" flex-direction=\"column\" :padding=\"5\">\n        <text :color=\"0xff000000\" :font-size=\"18\" font-face=\"monospace\">\n            {{ name }}\n        </text>\n        <container :flex=\"true\" :flex-grow=\"1\" :margin-top=\"5\">\n            <slot></slot>\n        </container>\n    </container>\n</template>\n\n<script lang=\"ts\">\nimport { computed, Ref, ref } from \"vue\";\nimport DragBar from \"./DragBar.vue\";\nimport Toggle from \"./Toggle.vue\";\n\nexport default {\n    props: {\n        name: { type: String, default: \"\" },\n        type: { type: String, default: \"\" },\n        config: { type: Object, default: () => ({}) },\n    },\n    setup(props: any) {\n        return {};\n    },\n};\n</script>\n","\nimport { computed, Ref, ref } from \"vue\";\nimport DragBar from \"./DragBar.vue\";\nimport Toggle from \"./Toggle.vue\";\n\nexport default {\n    props: {\n        name: { type: String, default: \"\" },\n        type: { type: String, default: \"\" },\n        config: { type: Object, default: () => ({}) },\n    },\n    setup(props: any) {\n        return {};\n    },\n};\n","import { render } from \"./FormItem.vue?vue&type=template&id=7c70d3f2&compiler=vugel\"\nimport script from \"./FormItem.vue?vue&type=script&lang=ts\"\nexport * from \"./FormItem.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import { ref, Ref } from \"vue\";\n\nexport const passToRef = (r: Ref<number>) => {\n    return (e: { value: number }) => {\n        r.value = e.value;\n    };\n};\n\nexport const createChangeHandlers = (refNames: string[]) => {\n    const result: any = {};\n    refNames.forEach((refName: string) => {\n        const r = ref(0);\n        result[refName] = r;\n        result[\"set_\" + refName] = passToRef(r);\n    });\n    return result;\n};\n","\nimport DragBar from \"./form/DragBar.vue\";\nimport Editor from \"./form/Editor.vue\";\nimport FormItem from \"./form/FormItem.vue\";\nimport { createChangeHandlers } from \"./form/utils\";\n\nexport default {\n    components: { DragBar, Editor, item: FormItem },\n    setup() {\n        return {\n            ...createChangeHandlers([\"x\", \"y\", \"mountx\", \"mounty\", \"w\", \"h\"]),\n        };\n    },\n};\n","import { render } from \"./PositionExample.vue?vue&type=template&id=098f86ba&compiler=vugel\"\nimport script from \"./PositionExample.vue?vue&type=script&lang=ts\"\nexport * from \"./PositionExample.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template compiler=\"vugel\">\n    <editor>\n        <template v-slot:content>\n            <picture src=\"./assets/rotterdam.jpg\" :mount-x=\"mountx\" :mount-y=\"mounty\" :x=\"x\" :y=\"y\" :w=\"w\" :h=\"h\" />\n        </template>\n        <template v-slot:form-items>\n            <item name=\"x\">\n                <drag-bar :max=\"800\" suffix=\"px\" @change=\"set_x\" />\n            </item>\n            <item name=\"y\">\n                <drag-bar :max=\"800\" suffix=\"px\" @change=\"set_y\" />\n            </item>\n            <item name=\"w\">\n                <drag-bar :max=\"800\" suffix=\"px\" @change=\"set_w\" />\n            </item>\n            <item name=\"h\">\n                <drag-bar :max=\"800\" suffix=\"px\" @change=\"set_h\" />\n            </item>\n            <item name=\"mount-x\">\n                <drag-bar suffix=\"px\" @change=\"set_mountx\" />\n            </item>\n            <item name=\"mount-y\">\n                <drag-bar suffix=\"px\" @change=\"set_mounty\" />\n            </item>\n        </template>\n    </editor>\n</template>\n\n<script lang=\"ts\">\nimport DragBar from \"./form/DragBar.vue\";\nimport Editor from \"./form/Editor.vue\";\nimport FormItem from \"./form/FormItem.vue\";\nimport { createChangeHandlers } from \"./form/utils\";\n\nexport default {\n    components: { DragBar, Editor, item: FormItem },\n    setup() {\n        return {\n            ...createChangeHandlers([\"x\", \"y\", \"mountx\", \"mounty\", \"w\", \"h\"]),\n        };\n    },\n};\n</script>\n","\nimport Editor from \"./form/Editor.vue\";\nimport FormItem from \"./form/FormItem.vue\";\nimport DragBar from \"./form/DragBar.vue\";\nimport { createChangeHandlers } from \"./form/utils\";\n\nexport default {\n    components: { Editor, item: FormItem, DragBar },\n    setup() {\n        return {\n            ...createChangeHandlers([\"x\", \"y\", \"scalex\", \"scaley\", \"pivotx\", \"pivoty\", \"rotation\"]),\n        };\n    },\n};\n","import { render } from \"./TransformsExample.vue?vue&type=template&id=5274ce4c&compiler=vugel\"\nimport script from \"./TransformsExample.vue?vue&type=script&lang=ts\"\nexport * from \"./TransformsExample.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template compiler=\"vugel\">\n    <editor>\n        <template v-slot:content>\n            <picture\n                src=\"./assets/rotterdam.jpg\"\n                :scale-x=\"scalex\"\n                :scale-y=\"scaley\"\n                :pivot-x=\"pivotx\"\n                :pivot-y=\"pivoty\"\n                :x=\"x\"\n                :y=\"y\"\n                :rotation=\"rotation\"\n            />\n        </template>\n        <template v-slot:form-items>\n            <item name=\"x\">\n                <drag-bar :max=\"800\" suffix=\"px\" @change=\"set_x\" />\n            </item>\n            <item name=\"y\">\n                <drag-bar :max=\"800\" suffix=\"px\" @change=\"set_y\" />\n            </item>\n            <item name=\"scalex\">\n                <drag-bar :initial-value=\"1\" :max=\"4\" @change=\"set_scalex\" />\n            </item>\n            <item name=\"scaley\">\n                <drag-bar :initial-value=\"1\" :max=\"4\" @change=\"set_scaley\" />\n            </item>\n            <item name=\"pivotx\">\n                <drag-bar :initial-value=\"0.5\" @change=\"set_pivotx\" />\n            </item>\n            <item name=\"pivoty\">\n                <drag-bar :initial-value=\"0.5\" @change=\"set_pivoty\" />\n            </item>\n            <item name=\"rotation\">\n                <drag-bar :max=\"2 * Math.PI\" suffix=\"rad\" @change=\"set_rotation\" />\n            </item>\n        </template>\n    </editor>\n</template>\n\n<script lang=\"ts\">\nimport Editor from \"./form/Editor.vue\";\nimport FormItem from \"./form/FormItem.vue\";\nimport DragBar from \"./form/DragBar.vue\";\nimport { createChangeHandlers } from \"./form/utils\";\n\nexport default {\n    components: { Editor, item: FormItem, DragBar },\n    setup() {\n        return {\n            ...createChangeHandlers([\"x\", \"y\", \"scalex\", \"scaley\", \"pivotx\", \"pivoty\", \"rotation\"]),\n        };\n    },\n};\n</script>\n","<template compiler=\"vugel\">\n    <editor>\n        <template v-slot:content>\n            <container w=\"w\" h=\"h\" @mousedown=\"start\" @mousemove=\"move\" @mouseup=\"end\" @mouseleave=\"end\">\n                <rectangle :x=\"100\" :y=\"100\" :w=\"300\" :h=\"300\" :color=\"0xffffffff\" :clipping=\"clipping\">\n                    <picture ref=\"dragTarget\" src=\"./assets/rotterdam.jpg\" :x=\"-100\" :y=\"-100\" />\n                </rectangle>\n                <text :x=\"100\" :y=\"420\" :color=\"0xffffffff\" :font-size=\"14\" :pointer-events=\"false\"\n                    >drag and drop the logo to test clipping</text\n                >\n            </container>\n        </template>\n        <template v-slot:form-items>\n            <item name=\"clipping\">\n                <toggle :initial-value=\"true\" @change=\"set_clipping\" />\n            </item>\n        </template>\n    </editor>\n</template>\n\n<script lang=\"ts\">\nimport { ref, Ref } from \"vue\";\nimport { VugelMouseEvent, Node } from \"vugel\";\nimport Editor from \"./form/Editor.vue\";\nimport { createChangeHandlers } from \"./form/utils\";\nimport Toggle from \"./form/Toggle.vue\";\nimport FormItem from \"./form/FormItem.vue\";\n\nexport default {\n    components: { Editor, Toggle, item: FormItem },\n    setup() {\n        const dragTarget: Ref<Node | null> = ref(null);\n\n        let startEvent: VugelMouseEvent | null = null;\n        let startX = 0;\n        let startY = 0;\n        const start = (e: VugelMouseEvent) => {\n            if (dragTarget.value) {\n                startEvent = e;\n\n                // As Vugel doesn't expose the properties, we refer directly to the element.\n                startX = dragTarget.value.el.x as number;\n                startY = dragTarget.value.el.y as number;\n            }\n        };\n\n        const move = (e: VugelMouseEvent) => {\n            if (startEvent) {\n                const deltaX = e.canvasOffsetX - startEvent.canvasOffsetX;\n                const deltaY = e.canvasOffsetY - startEvent.canvasOffsetY;\n                dragTarget.value!.x = startX + deltaX;\n                dragTarget.value!.y = startY + deltaY;\n\n                // Do not scroll on mobile.\n                e.originalEvent.preventDefault();\n            }\n        };\n\n        const end = (e: VugelMouseEvent) => {\n            startEvent = null;\n        };\n\n        return {\n            start,\n            move,\n            end,\n            dragTarget,\n            ...createChangeHandlers([\"clipping\"]),\n        };\n    },\n};\n</script>\n","<template compiler=\"vugel\">\n    <container :w=\"40\" :h=\"20\">\n        <styled-rectangle\n            :w=\"40\"\n            :h=\"20\"\n            :radius=\"10\"\n            :stroke-width=\"4\"\n            :flex-grow=\"1\"\n            :fill-color=\"value ? 0xffaaffaa : 0xffffaaaa\"\n            :stroke-color=\"0xff000000\"\n            @click=\"click\"\n        >\n            <styled-rectangle\n                :radius=\"10\"\n                :x=\"circleX\"\n                :w=\"20\"\n                :h=\"20\"\n                :mount-x=\"0.5\"\n                :stroke-width=\"4\"\n                :flex-grow=\"1\"\n                :fill-color=\"0xffffffff\"\n                :stroke-color=\"0xff000000\"\n            />\n        </styled-rectangle>\n    </container>\n</template>\n\n<script lang=\"ts\">\nimport { ref, Ref, watch, SetupContext, computed } from \"vue\";\nimport { VugelMouseEvent, Node } from \"vugel\";\n\nexport default {\n    props: {\n        initialValue: { type: Boolean, default: false },\n    },\n    setup(props: any, context: SetupContext) {\n        const value = ref(false);\n\n        const click = (e: VugelMouseEvent) => {\n            value.value = !value.value;\n        };\n\n        watch(value, (v: boolean) => {\n            context.emit(\"change\", { value: value.value });\n        });\n\n        value.value = props.initialValue;\n\n        const circleX = computed(() => {\n            return value.value ? 30 : 10;\n        });\n\n        return {\n            value,\n            click,\n            circleX,\n        };\n    },\n};\n</script>\n","\nimport { ref, Ref, watch, SetupContext, computed } from \"vue\";\nimport { VugelMouseEvent, Node } from \"vugel\";\n\nexport default {\n    props: {\n        initialValue: { type: Boolean, default: false },\n    },\n    setup(props: any, context: SetupContext) {\n        const value = ref(false);\n\n        const click = (e: VugelMouseEvent) => {\n            value.value = !value.value;\n        };\n\n        watch(value, (v: boolean) => {\n            context.emit(\"change\", { value: value.value });\n        });\n\n        value.value = props.initialValue;\n\n        const circleX = computed(() => {\n            return value.value ? 30 : 10;\n        });\n\n        return {\n            value,\n            click,\n            circleX,\n        };\n    },\n};\n","import { render } from \"./Toggle.vue?vue&type=template&id=399bfc7c&compiler=vugel\"\nimport script from \"./Toggle.vue?vue&type=script&lang=ts\"\nexport * from \"./Toggle.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport { ref, Ref } from \"vue\";\nimport { VugelMouseEvent, Node } from \"vugel\";\nimport Editor from \"./form/Editor.vue\";\nimport { createChangeHandlers } from \"./form/utils\";\nimport Toggle from \"./form/Toggle.vue\";\nimport FormItem from \"./form/FormItem.vue\";\n\nexport default {\n    components: { Editor, Toggle, item: FormItem },\n    setup() {\n        const dragTarget: Ref<Node | null> = ref(null);\n\n        let startEvent: VugelMouseEvent | null = null;\n        let startX = 0;\n        let startY = 0;\n        const start = (e: VugelMouseEvent) => {\n            if (dragTarget.value) {\n                startEvent = e;\n\n                // As Vugel doesn't expose the properties, we refer directly to the element.\n                startX = dragTarget.value.el.x as number;\n                startY = dragTarget.value.el.y as number;\n            }\n        };\n\n        const move = (e: VugelMouseEvent) => {\n            if (startEvent) {\n                const deltaX = e.canvasOffsetX - startEvent.canvasOffsetX;\n                const deltaY = e.canvasOffsetY - startEvent.canvasOffsetY;\n                dragTarget.value!.x = startX + deltaX;\n                dragTarget.value!.y = startY + deltaY;\n\n                // Do not scroll on mobile.\n                e.originalEvent.preventDefault();\n            }\n        };\n\n        const end = (e: VugelMouseEvent) => {\n            startEvent = null;\n        };\n\n        return {\n            start,\n            move,\n            end,\n            dragTarget,\n            ...createChangeHandlers([\"clipping\"]),\n        };\n    },\n};\n","import { render } from \"./ClippingExample.vue?vue&type=template&id=42fc5960&compiler=vugel\"\nimport script from \"./ClippingExample.vue?vue&type=script&lang=ts\"\nexport * from \"./ClippingExample.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport DragBar from \"./form/DragBar.vue\";\nimport Editor from \"./form/Editor.vue\";\nimport FormItem from \"./form/FormItem.vue\";\nimport { createChangeHandlers } from \"./form/utils\";\nimport Toggle from \"./form/Toggle.vue\";\n\nexport default {\n    components: { DragBar, Toggle, Editor, item: FormItem },\n    setup() {\n        return {\n            ...createChangeHandlers([\"alpha\", \"visible\"]),\n        };\n    },\n};\n","import { render } from \"./VisibilityExample.vue?vue&type=template&id=5fc162ea&compiler=vugel\"\nimport script from \"./VisibilityExample.vue?vue&type=script&lang=ts\"\nexport * from \"./VisibilityExample.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template compiler=\"vugel\">\n    <editor>\n        <template v-slot:content>\n            <container>\n                <picture src=\"./assets/rotterdam.jpg\" :alpha=\"alpha\" :visible=\"visible\" />\n            </container>\n        </template>\n        <template v-slot:form-items>\n            <item name=\"visible\">\n                <toggle :initial-value=\"true\" @change=\"set_visible\" />\n            </item>\n            <item name=\"alpha\">\n                <drag-bar :initial-value=\"1\" @change=\"set_alpha\" />\n            </item>\n        </template>\n    </editor>\n</template>\n\n<script lang=\"ts\">\nimport DragBar from \"./form/DragBar.vue\";\nimport Editor from \"./form/Editor.vue\";\nimport FormItem from \"./form/FormItem.vue\";\nimport { createChangeHandlers } from \"./form/utils\";\nimport Toggle from \"./form/Toggle.vue\";\n\nexport default {\n    components: { DragBar, Toggle, Editor, item: FormItem },\n    setup() {\n        return {\n            ...createChangeHandlers([\"alpha\", \"visible\"]),\n        };\n    },\n};\n</script>\n","<template compiler=\"vugel\">\n    <!--full width/height using relative functions -->\n    <rectangle w=\"w\" h=\"500\" :color=\"0xff000000\">\n        <!-- calc functions for width and height -->\n        <rectangle w=\"w\" h=\"h\" :color-left=\"0xffff0000\" :color-right=\"0xff0000ff\" />\n\n        <!-- use mount to position an element relative to its size (can be used for centering with unknown width) -->\n        <text x=\"w/2\" y=\"h/2\" :mount-x=\"0.5\" :mount-y=\"0.5\">Centered</text>\n        <text :x=\"0\" :y=\"0\" :mount-x=\"0\" :mount-y=\"0\">Top left</text>\n        <text x=\"w\" y=\"h\" :mount-x=\"1\" :mount-y=\"1\">Bottom right</text>\n    </rectangle>\n</template>\n\n<script lang=\"ts\">\nexport default {};\n</script>\n","\nexport default {};\n","import { render } from \"./CenterExample.vue?vue&type=template&id=228e4c60&compiler=vugel\"\nimport script from \"./CenterExample.vue?vue&type=script&lang=ts\"\nexport * from \"./CenterExample.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template compiler=\"vugel\">\n    <picture :x=\"10\" :y=\"10\" src=\"./assets/rotterdam.jpg\" />\n</template>\n\n<script lang=\"ts\">\nexport default {};\n</script>\n","\nexport default {};\n","import { render } from \"./PictureExample.vue?vue&type=template&id=19720206&compiler=vugel\"\nimport script from \"./PictureExample.vue?vue&type=script&lang=ts\"\nexport * from \"./PictureExample.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template compiler=\"vugel\">\n    <rectangle h=\"400\" :x=\"10\" :y=\"10\" w=\"w-20\" :color=\"0xff00ff00\" />\n</template>\n\n<script lang=\"ts\">\nexport default {};\n</script>\n","\nexport default {};\n","import { render } from \"./RectangleExample.vue?vue&type=template&id=577d5bb2&compiler=vugel\"\nimport script from \"./RectangleExample.vue?vue&type=script&lang=ts\"\nexport * from \"./RectangleExample.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<script lang=\"ts\">\nimport Editor from \"./form/Editor.vue\";\nimport FormItem from \"./form/FormItem.vue\";\nimport DragBar from \"./form/DragBar.vue\";\nimport ColorDragBar from \"./form/ColorDragBar.vue\";\nimport { createChangeHandlers } from \"./form/utils\";\nimport Toggle from \"./form/Toggle.vue\";\n\nexport default {\n    components: { ColorDragBar, DragBar, Toggle, Editor, item: FormItem },\n    setup() {\n        return {\n            ...createChangeHandlers([\n                \"radius\",\n                \"fill\",\n                \"fillColor\",\n                \"strokeWidth\",\n                \"strokeColor\",\n                \"shadowBlur\",\n                \"shadowColor\",\n            ]),\n        };\n    },\n};\n</script>\n\n<template compiler=\"vugel\">\n    <editor>\n        <template v-slot:content>\n            <styled-rectangle\n                :x=\"20\"\n                :y=\"20\"\n                :radius=\"radius\"\n                :stroke-width=\"strokeWidth\"\n                :stroke-color=\"strokeColor\"\n                :fill=\"fill\"\n                :fill-color=\"fillColor\"\n                :shadow-blur=\"shadowBlur\"\n                :shadow-color=\"shadowColor\"\n                :flex=\"true\"\n                :padding=\"80\"\n            >\n                <text font-size=\"50\">contents..</text>\n            </styled-rectangle>\n        </template>\n        <template v-slot:form-items>\n            <item name=\"fill\">\n                <toggle :initial-value=\"true\" @change=\"set_fill\" />\n            </item>\n            <item name=\"fill-color\" :visible=\"fill\">\n                <color-drag-bar :initial-value=\"0xffff00ff\" @change=\"set_fillColor\" />\n            </item>\n            <item name=\"radius\">\n                <drag-bar :initial-value=\"10\" :min=\"0\" :max=\"80\" suffix=\"px\" @change=\"set_radius\" />\n            </item>\n            <item name=\"stroke-width\">\n                <drag-bar :initial-value=\"4\" :min=\"0\" :max=\"60\" suffix=\"px\" @change=\"set_strokeWidth\" />\n            </item>\n            <item name=\"stroke-color\">\n                <color-drag-bar :initial-value=\"0xffffffff\" @change=\"set_strokeColor\" />\n            </item>\n            <item name=\"shadow-blur\">\n                <drag-bar :initial-value=\"10\" :min=\"0\" :max=\"50\" suffix=\"px\" @change=\"set_shadowBlur\" />\n            </item>\n            <item name=\"shadow-color\">\n                <color-drag-bar :initial-value=\"0xffffffff\" @change=\"set_shadowColor\" />\n            </item>\n        </template>\n    </editor>\n</template>\n","<template compiler=\"vugel\">\n    <container :flex=\"true\" :flex-grow=\"1\" flex-direction=\"column\">\n        <drag-bar\n            :initial-value=\"red\"\n            :margin-bottom=\"10\"\n            :background=\"redBackground\"\n            :foreground=\"0xffffffff\"\n            @change=\"updateRed\"\n        />\n        <drag-bar\n            :initial-value=\"green\"\n            :margin-bottom=\"10\"\n            :background=\"greenBackground\"\n            :foreground=\"0xffffffff\"\n            @change=\"updateGreen\"\n        />\n        <drag-bar\n            :initial-value=\"blue\"\n            :margin-bottom=\"10\"\n            :background=\"blueBackground\"\n            :foreground=\"0xffffffff\"\n            @change=\"updateBlue\"\n        />\n        <drag-bar\n            :margin-bottom=\"10\"\n            :initial-value=\"alpha\"\n            :background=\"alphaBackground\"\n            :foreground=\"alphaForeground\"\n            @change=\"updateAlpha\"\n        />\n    </container>\n</template>\n\n<script lang=\"ts\">\nimport DragBar from \"./DragBar.vue\";\nimport { ref, watch, computed, SetupContext } from \"vue\";\nimport { ColorUtils } from \"tree2d\";\n\nexport default {\n    components: { DragBar },\n    props: {\n        initialValue: { type: Number, default: 0 },\n    },\n    setup: function (props: any, context: SetupContext) {\n        const red = ref(-1);\n        const green = ref(-1);\n        const blue = ref(-1);\n        const alpha = ref(-1);\n\n        const updateRed = (v: { value: number }) => {\n            red.value = v.value;\n        };\n\n        const updateGreen = (v: { value: number }) => {\n            green.value = v.value;\n        };\n\n        const updateBlue = (v: { value: number }) => {\n            blue.value = v.value;\n        };\n\n        const updateAlpha = (v: { value: number }) => {\n            alpha.value = v.value;\n        };\n\n        const components = ColorUtils.getRgbaComponentsNormalized(props.initialValue);\n\n        red.value = components[0];\n        green.value = components[1];\n        blue.value = components[2];\n        alpha.value = components[3];\n\n        watch([red, green, blue, alpha], (values: number[]) => {\n            const color = ColorUtils.getArgbNumber([\n                red.value * 255,\n                green.value * 255,\n                blue.value * 255,\n                alpha.value * 255,\n            ]);\n            context.emit(\"change\", { value: color });\n        });\n\n        const redBackground = computed(() => {\n            return ColorUtils.getArgbNumber([red.value * 255, 0, 0, 255]);\n        });\n\n        const greenBackground = computed(() => {\n            return ColorUtils.getArgbNumber([0, green.value * 255, 0, 255]);\n        });\n\n        const blueBackground = computed(() => {\n            return ColorUtils.getArgbNumber([0, 0, blue.value * 255, 255]);\n        });\n\n        const alphaBackground = computed(() => {\n            return ColorUtils.getArgbNumber([alpha.value * 255, alpha.value * 255, alpha.value * 255, 255]);\n        });\n\n        const alphaForeground = computed(() => {\n            return alpha.value > 0.5 ? 0xff000000 : 0xffffffff;\n        });\n\n        return {\n            red,\n            green,\n            blue,\n            alpha,\n            updateRed,\n            updateGreen,\n            updateBlue,\n            updateAlpha,\n            redBackground,\n            greenBackground,\n            blueBackground,\n            alphaBackground,\n            alphaForeground,\n        };\n    },\n};\n</script>\n","\nimport DragBar from \"./DragBar.vue\";\nimport { ref, watch, computed, SetupContext } from \"vue\";\nimport { ColorUtils } from \"tree2d\";\n\nexport default {\n    components: { DragBar },\n    props: {\n        initialValue: { type: Number, default: 0 },\n    },\n    setup: function (props: any, context: SetupContext) {\n        const red = ref(-1);\n        const green = ref(-1);\n        const blue = ref(-1);\n        const alpha = ref(-1);\n\n        const updateRed = (v: { value: number }) => {\n            red.value = v.value;\n        };\n\n        const updateGreen = (v: { value: number }) => {\n            green.value = v.value;\n        };\n\n        const updateBlue = (v: { value: number }) => {\n            blue.value = v.value;\n        };\n\n        const updateAlpha = (v: { value: number }) => {\n            alpha.value = v.value;\n        };\n\n        const components = ColorUtils.getRgbaComponentsNormalized(props.initialValue);\n\n        red.value = components[0];\n        green.value = components[1];\n        blue.value = components[2];\n        alpha.value = components[3];\n\n        watch([red, green, blue, alpha], (values: number[]) => {\n            const color = ColorUtils.getArgbNumber([\n                red.value * 255,\n                green.value * 255,\n                blue.value * 255,\n                alpha.value * 255,\n            ]);\n            context.emit(\"change\", { value: color });\n        });\n\n        const redBackground = computed(() => {\n            return ColorUtils.getArgbNumber([red.value * 255, 0, 0, 255]);\n        });\n\n        const greenBackground = computed(() => {\n            return ColorUtils.getArgbNumber([0, green.value * 255, 0, 255]);\n        });\n\n        const blueBackground = computed(() => {\n            return ColorUtils.getArgbNumber([0, 0, blue.value * 255, 255]);\n        });\n\n        const alphaBackground = computed(() => {\n            return ColorUtils.getArgbNumber([alpha.value * 255, alpha.value * 255, alpha.value * 255, 255]);\n        });\n\n        const alphaForeground = computed(() => {\n            return alpha.value > 0.5 ? 0xff000000 : 0xffffffff;\n        });\n\n        return {\n            red,\n            green,\n            blue,\n            alpha,\n            updateRed,\n            updateGreen,\n            updateBlue,\n            updateAlpha,\n            redBackground,\n            greenBackground,\n            blueBackground,\n            alphaBackground,\n            alphaForeground,\n        };\n    },\n};\n","import { render } from \"./ColorDragBar.vue?vue&type=template&id=78b6e42f&compiler=vugel\"\nimport script from \"./ColorDragBar.vue?vue&type=script&lang=ts\"\nexport * from \"./ColorDragBar.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport Editor from \"./form/Editor.vue\";\nimport FormItem from \"./form/FormItem.vue\";\nimport DragBar from \"./form/DragBar.vue\";\nimport ColorDragBar from \"./form/ColorDragBar.vue\";\nimport { createChangeHandlers } from \"./form/utils\";\nimport Toggle from \"./form/Toggle.vue\";\n\nexport default {\n    components: { ColorDragBar, DragBar, Toggle, Editor, item: FormItem },\n    setup() {\n        return {\n            ...createChangeHandlers([\n                \"radius\",\n                \"fill\",\n                \"fillColor\",\n                \"strokeWidth\",\n                \"strokeColor\",\n                \"shadowBlur\",\n                \"shadowColor\",\n            ]),\n        };\n    },\n};\n","import { render } from \"./StyledRectangleExample.vue?vue&type=template&id=f09d49e2&compiler=vugel\"\nimport script from \"./StyledRectangleExample.vue?vue&type=script&lang=ts\"\nexport * from \"./StyledRectangleExample.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport Editor from \"./form/Editor.vue\";\nimport FormItem from \"./form/FormItem.vue\";\nimport ColorDragBar from \"./form/ColorDragBar.vue\";\nimport { createChangeHandlers } from \"./form/utils\";\n\nexport default {\n    components: { ColorDragBar, Editor, item: FormItem },\n    setup() {\n        return {\n            ...createChangeHandlers([\"colorLeft\", \"colorRight\"]),\n        };\n    },\n};\n","import { render } from \"./TintingExample.vue?vue&type=template&id=212fdf69&compiler=vugel\"\nimport script from \"./TintingExample.vue?vue&type=script&lang=ts\"\nexport * from \"./TintingExample.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template compiler=\"vugel\">\n    <editor>\n        <template v-slot:content>\n            <rectangle\n                h=\"100\"\n                :x=\"20\"\n                :y=\"20\"\n                w=\"w-40\"\n                :color-left=\"colorLeft\"\n                :color-right=\"colorRight\"\n                :margin-bottom=\"20\"\n            />\n            <picture :x=\"20\" :y=\"140\" :color-left=\"colorLeft\" :color-right=\"colorRight\" src=\"./assets/rotterdam.jpg\" />\n        </template>\n        <template v-slot:form-items>\n            <item name=\"color-left\">\n                <color-drag-bar :initial-value=\"0xffff00ff\" @change=\"set_colorLeft\" />\n            </item>\n            <item name=\"color-right\">\n                <color-drag-bar :initial-value=\"0xff00ffff\" @change=\"set_colorRight\" />\n            </item>\n        </template>\n    </editor>\n</template>\n\n<script lang=\"ts\">\nimport Editor from \"./form/Editor.vue\";\nimport FormItem from \"./form/FormItem.vue\";\nimport ColorDragBar from \"./form/ColorDragBar.vue\";\nimport { createChangeHandlers } from \"./form/utils\";\n\nexport default {\n    components: { ColorDragBar, Editor, item: FormItem },\n    setup() {\n        return {\n            ...createChangeHandlers([\"colorLeft\", \"colorRight\"]),\n        };\n    },\n};\n</script>\n","<template compiler=\"vugel\">\n    <paragraph :x=\"20\" :y=\"20\" w=\"w-40\" h=\"h-40\" :font-size=\"40\" :font-color=\"0xffff0000\">\n        The paragraph has the ability to wrap text. Drag the width of the window to see it in action.\n    </paragraph>\n</template>\n\n<script lang=\"ts\">\nexport default {};\n</script>\n","\nexport default {};\n","import { render } from \"./ParagraphExample.vue?vue&type=template&id=2a89180a&compiler=vugel\"\nimport script from \"./ParagraphExample.vue?vue&type=script&lang=ts\"\nexport * from \"./ParagraphExample.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport { ref, watch, Ref } from \"vue\";\nimport { DrawingFunctionOptions } from \"tree2d\";\nimport DragBar from \"./form/DragBar.vue\";\nimport Editor from \"./form/Editor.vue\";\nimport FormItem from \"./form/FormItem.vue\";\nimport { createChangeHandlers } from \"./form/utils\";\nimport { Drawing } from \"vugel\";\n\nexport default {\n    components: { DragBar, Editor, item: FormItem },\n    setup() {\n        const handlers = createChangeHandlers([\"gradient\", \"w\", \"h\"]);\n\n        const drawing: Ref<Drawing | null> = ref(null);\n\n        // Make sure that the drawing is updated after a change.\n        watch(handlers.gradient, () => {\n            if (drawing.value) {\n                drawing.value.update();\n            }\n        });\n\n        return {\n            drawing,\n            draw(info: DrawingFunctionOptions) {\n                const ctx = info.context;\n                ctx.beginPath();\n                const rectangle = new Path2D();\n                rectangle.rect(0, 0, info.w, info.h);\n\n                const gradient = ctx.createLinearGradient(0, 0, handlers.gradient.value, 0);\n                gradient.addColorStop(0, \"magenta\");\n                gradient.addColorStop(0.5, \"blue\");\n                gradient.addColorStop(1.0, \"red\");\n\n                ctx.strokeStyle = gradient;\n                ctx.lineWidth = 20;\n                ctx.stroke(rectangle);\n                return {};\n            },\n            ...handlers,\n        };\n    },\n};\n","import { render } from \"./DrawingExample.vue?vue&type=template&id=5242467c&compiler=vugel\"\nimport script from \"./DrawingExample.vue?vue&type=script&lang=ts\"\nexport * from \"./DrawingExample.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<script lang=\"ts\">\nimport { ref, watch, Ref } from \"vue\";\nimport { DrawingFunctionOptions } from \"tree2d\";\nimport DragBar from \"./form/DragBar.vue\";\nimport Editor from \"./form/Editor.vue\";\nimport FormItem from \"./form/FormItem.vue\";\nimport { createChangeHandlers } from \"./form/utils\";\nimport { Drawing } from \"vugel\";\n\nexport default {\n    components: { DragBar, Editor, item: FormItem },\n    setup() {\n        const handlers = createChangeHandlers([\"gradient\", \"w\", \"h\"]);\n\n        const drawing: Ref<Drawing | null> = ref(null);\n\n        // Make sure that the drawing is updated after a change.\n        watch(handlers.gradient, () => {\n            if (drawing.value) {\n                drawing.value.update();\n            }\n        });\n\n        return {\n            drawing,\n            draw(info: DrawingFunctionOptions) {\n                const ctx = info.context;\n                ctx.beginPath();\n                const rectangle = new Path2D();\n                rectangle.rect(0, 0, info.w, info.h);\n\n                const gradient = ctx.createLinearGradient(0, 0, handlers.gradient.value, 0);\n                gradient.addColorStop(0, \"magenta\");\n                gradient.addColorStop(0.5, \"blue\");\n                gradient.addColorStop(1.0, \"red\");\n\n                ctx.strokeStyle = gradient;\n                ctx.lineWidth = 20;\n                ctx.stroke(rectangle);\n                return {};\n            },\n            ...handlers,\n        };\n    },\n};\n</script>\n\n<template compiler=\"vugel\">\n    <editor>\n        <template v-slot:content>\n            <drawing ref=\"drawing\" :w=\"w\" :h=\"h\" @draw=\"draw\" />\n        </template>\n        <template v-slot:form-items>\n            <item name=\"w\">\n                <drag-bar :initial-value=\"100\" :max=\"600\" suffix=\"px\" @change=\"set_w\" />\n            </item>\n            <item name=\"h\">\n                <drag-bar :initial-value=\"100\" :max=\"600\" suffix=\"px\" @change=\"set_h\" />\n            </item>\n            <item name=\"x\">\n                <drag-bar :initial-value=\"170\" :max=\"300\" suffix=\"px\" @change=\"set_gradient\" />\n            </item>\n        </template>\n    </editor>\n</template>\n","\nimport TextExample from \"./examples/TextExample.vue\";\nimport PositionExample from \"./examples/PositionExample.vue\";\nimport TransformsExample from \"./examples/TransformsExample.vue\";\nimport ClippingExample from \"./examples/ClippingExample.vue\";\nimport VisibilityExample from \"./examples/VisibilityExample.vue\";\nimport CenterExample from \"./examples/CenterExample.vue\";\nimport PictureExample from \"./examples/PictureExample.vue\";\nimport RectangleExample from \"./examples/RectangleExample.vue\";\nimport StyledRectangleExample from \"./examples/StyledRectangleExample.vue\";\nimport TintingExample from \"./examples/TintingExample.vue\";\nimport ParagraphExample from \"./examples/ParagraphExample.vue\";\nimport DrawingExample from \"./examples/DrawingExample.vue\";\n\nexport default {\n    components: {\n        PictureExample,\n        RectangleExample,\n        TextExample,\n        StyledRectangleExample,\n        DrawingExample,\n\n        PositionExample,\n        CenterExample,\n        TransformsExample,\n        VisibilityExample,\n        TintingExample,\n        ClippingExample,\n\n        ParagraphExample,\n    },\n    props: {\n        selected: { type: String, default: \"\" },\n    },\n    setup(props: any) {\n        const check = (exampleName: string) => {\n            return props.selected === exampleName;\n        };\n        return { check };\n    },\n};\n","import { render } from \"./Examples.vue?vue&type=template&id=6d4d95da&compiler=vugel\"\nimport script from \"./Examples.vue?vue&type=script&lang=ts\"\nexport * from \"./Examples.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport { Vugel } from \"vugel\";\nimport Examples from \"./Examples.vue\";\nimport { ref, Ref, computed } from \"vue\";\n\nexport default {\n    components: { Vugel, Examples },\n    setup() {\n        const examples = ref([\n            { name: \"picture\", text: \"Picture\" },\n            { name: \"rectangle\", text: \"Rectangle\" },\n            { name: \"text\", text: \"Text\" },\n            { name: \"styled-rectangle\", text: \"Styled rectangle\" },\n            { name: \"drawing\", text: \"Drawing\" },\n            { name: \"position\", text: \"Position and size\" },\n            { name: \"center\", text: \"Center\" },\n            { name: \"transforms\", text: \"Transforms\" },\n            { name: \"visibility\", text: \"Visibility\" },\n            { name: \"tinting\", text: \"Tinting\" },\n            { name: \"clipping\", text: \"Clipping\" },\n            // { name: \"texture-clipping\", text: \"Texture clipping\" },\n            // { name: \"z-index\", text: \"Z-index\" },\n            // { name: \"flexbox\", text: \"Flexbox\" },\n            // { name: \"effects\", text: \"Effects\" },\n            { name: \"paragraph\", text: \"Paragraph\" },\n            // { name: \"mouse-events\", text: \"Mouse events\" },\n            // { name: \"focus-events\", text: \"Focus events\" },\n            // { name: \"intersection\", text: \"Intersection\" },\n        ]);\n        const example: Ref<string> = ref(\"styled-rectangle\");\n        const check = (exampleName: string) => {\n            return example.value === exampleName;\n        };\n        const exampleObject = computed(\n            () => examples.value.find((obj: any) => obj.name === example.value) || { name: \"\", text: \"\" },\n        );\n        return { examples, example, check, exampleObject };\n    },\n};\n","import { render } from \"./App.vue?vue&type=template&id=0c8c22be\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\n\ncreateApp(App).mount(\"#app\");\n"],"sourceRoot":""}